!function(I){function n(n){for(var g,c,l=n[0],b=n[1],C=n[2],s=0,a=[];s<l.length;s++)c=l[s],e[c]&&a.push(e[c][0]),e[c]=0;for(g in b)Object.prototype.hasOwnProperty.call(b,g)&&(I[g]=b[g]);for(i&&i(n);a.length;)a.shift()();return B.push.apply(B,C||[]),t()}function t(){for(var I,n=0;n<B.length;n++){for(var t=B[n],g=!0,l=1;l<t.length;l++){var b=t[l];0!==e[b]&&(g=!1)}g&&(B.splice(n--,1),I=c(c.s=t[0]))}return I}var g={},e={1:0},B=[];function c(n){if(g[n])return g[n].exports;var t=g[n]={i:n,l:!1,exports:{}};return I[n].call(t.exports,t,t.exports,c),t.l=!0,t.exports}c.m=I,c.c=g,c.d=function(I,n,t){c.o(I,n)||Object.defineProperty(I,n,{configurable:!1,enumerable:!0,get:t})},c.r=function(I){Object.defineProperty(I,"__esModule",{value:!0})},c.n=function(I){var n=I&&I.__esModule?function(){return I.default}:function(){return I};return c.d(n,"a",n),n},c.o=function(I,n){return Object.prototype.hasOwnProperty.call(I,n)},c.p="./";var l=window.webpackJsonp=window.webpackJsonp||[],b=l.push.bind(l);l.push=n,l=l.slice();for(var C=0;C<l.length;C++)n(l[C]);var i=b;B.push([58,0]),t()}({0:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* unused harmony export serializeState */\n/* unused harmony export luminanceItuBt709 */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return luminance; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return quantizeValue; });\n/* unused harmony export clamp */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return rgba; });\n/* unused harmony export equalize */\n/* unused harmony export referenceTable */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "n", function() { return rgba2hsva; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "o", function() { return rgba2laba; });\n/* unused harmony export wasmRgbaLabaDistance */\n/* unused harmony export wasmRgba2laba */\n/* unused harmony export laba2rgba */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return colorDistance; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return medianCutPalette; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "s", function() { return uniqueColors; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "q", function() { return scaleMatrix; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return add; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "r", function() { return sub; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "p", function() { return scale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return contrast; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return brightness; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return gamma; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return getBufferIndex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return fillBufferPixel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return addBufferPixel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return cloneCanvas; });\n/* harmony import */ var constants_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(13);\n\nconst serializeState = state => JSON.stringify(state); // https://stackoverflow.com/questions/596216/formula-to-determine-brightness-of-rgb-color\n// TODO: make formula an enum\n\nconst luminanceItuBt709 = c => 0.2126 * c[0] + 0.7152 * c[1] + 0.0722 * c[2] * (c[3] / 255); // ITU BT.601\n\nconst luminance = c => 0.299 * c[0] + 0.587 * c[1] + 0.114 * c[2] * (c[3] / 255);\nconst quantizeValue = (value, levels) => {\n  const step = 255 / (levels - 1);\n  const bucket = Math.round(value / step);\n  return Math.round(bucket * step);\n};\nconst clamp = (min, max, value) => Math.max(min, Math.min(max, value));\nconst rgba = (r, g, b, a) => [r, g, b, a]; // mutates input\n\nconst equalize = input => {\n  let min = input[0];\n  let max = input[0];\n\n  for (let i = 1; i < input.length; i += 1) {\n    const val = input[i];\n    if (i < min) min = val;\n    if (i > max) max = val;\n  }\n\n  const range = max - min;\n  const factor = 256 / range;\n\n  for (let i = 0; i < input.length; i += 1) {\n    input[i] = input[i] - min * factor; // eslint-disable-line\n  }\n}; // http://www.easyrgb.com/en/math.php#text1\n\nconst referenceTable = {\n  CIE_1931: {\n    // 2° (CIE 1931)\n    D65: {\n      x: 95.047,\n      y: 100,\n      z: 108.883\n    }\n  },\n  CIE_1964: {\n    // 10° (CIE 1964)\n    D65: {\n      x: 94.811,\n      y: 100,\n      z: 107.304\n    }\n  }\n}; // 0-360, 0-1, 0-1, 0-1\n\nconst rgba2hsva = input => {\n  const r = input[0] / 255;\n  const g = input[1] / 255;\n  const b = input[2] / 255;\n  const a = input[3] / 255;\n  let h;\n  let s;\n  const min = Math.min(r, g, b);\n  const max = Math.max(r, g, b);\n  const delta = max - min;\n  const v = max;\n\n  if (delta > 0) {\n    s = delta / max;\n  } else {\n    s = 0;\n    h = 0;\n    return [h, s, v, a];\n  }\n\n  if (r === max) {\n    h = (g - b) / delta;\n  } else if (g === max) {\n    h = 2 + (b - r) / delta;\n  } else {\n    h = 4 + (r - g) / delta;\n  }\n\n  h *= 60;\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  return [h, s, v, a];\n}; // https://stackoverflow.com/questions/7880264/convert-lab-color-to-rgb\n// Convert RGB > XYZ > CIE Lab, copying alpha channel\n\nconst rgba2laba = (input, ref = referenceTable.CIE_1931.D65) => {\n  let r = input[0] / 255;\n  let g = input[1] / 255;\n  let b = input[2] / 255;\n  r = r > 0.04045 ? ((r + 0.055) / 1.055) ** 2.4 : r / 12.92;\n  g = g > 0.04045 ? ((g + 0.055) / 1.055) ** 2.4 : g / 12.92;\n  b = b > 0.04045 ? ((b + 0.055) / 1.055) ** 2.4 : b / 12.92;\n  r *= 100;\n  g *= 100;\n  b *= 100; // Observer= 2° (Only use CIE 1931!)\n\n  let x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  let y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  let z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n  x /= ref.x;\n  y /= ref.y;\n  z /= ref.z;\n  x = x > 0.008856 ? x ** (1 / 3) : x * 7.787 + 16 / 116;\n  y = y > 0.008856 ? y ** (1 / 3) : y * 7.787 + 16 / 116;\n  z = z > 0.008856 ? z ** (1 / 3) : z * 7.787 + 16 / 116;\n  const outL = 116 * y - 16;\n  const outA = 500 * (x - y);\n  const outB = 200 * (y - z);\n  return [outL, outA, outB, input[3]];\n};\n\nlet wasmRgba2labaInner = (a, b, c, d, e, f, g) => {\n  console.error("WASM module not loaded!", a, b, c, d, e, f, g); // eslint-disable-line\n\n  return [0, 0, 0, 0];\n};\n\nlet wasmRgbaLabaDistanceInner = (a, b, c, d, e, f, g, h, i, j, k) => {\n  console.error("WASM module not loaded!", a, b, c, d, e, f, g, h, i, j, k); // eslint-disable-line\n\n  return 0;\n};\n\nconst wasmRgbaLabaDistance = (a, b, ref = referenceTable.CIE_1931.D65) => wasmRgbaLabaDistanceInner(a[0], a[1], a[2], a[3], b[0], b[1], b[2], b[3], ref.x, ref.y, ref.z);\nconst wasmRgba2laba = (input // $FlowFixMe\n, ref = referenceTable.CIE_1931.D65) => wasmRgba2labaInner(input[0], input[1], input[2], input[3], ref.x, ref.y, ref.z);\nlet wasm;\n\ntry {\n  wasm = __webpack_require__(77); // eslint-disable-line\n  // $FlowFixMe\n\n  __webpack_require__(73); // eslint-disable-line\n\n\n  wasm.then(obj => {\n    wasmRgba2labaInner = obj.rgba2laba;\n    wasmRgbaLabaDistanceInner = obj.rgbaLabaDistance; // console.log(obj, "override");\n  });\n} catch (e) {\n  console.log(e, "Failed to load WASM"); // eslint-disable-line\n} // Convert CIE Lab > XYZ > RGBA, copying alpha channel\n\n\nconst laba2rgba = (input, ref = referenceTable.CIE_1931.D65) => {\n  let y = (input[0] + 16) / 116;\n  let x = input[1] / 500 + y;\n  let z = y - input[2] / 200;\n  y = y ** 3 > 0.008856 ? y ** 3 : (y - 16 / 116) / 7.787;\n  x = x ** 3 > 0.008856 ? x ** 3 : (x - 16 / 116) / 7.787;\n  z = z ** 3 > 0.008856 ? z ** 3 : (z - 16 / 116) / 7.787; // Observer= 2° (Only use CIE 1931!)\n\n  x *= ref.x;\n  y *= ref.y;\n  z *= ref.z; // Normalize\n\n  x /= 100;\n  y /= 100;\n  z /= 100;\n  let r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  let g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  let b = x * 0.0557 + y * -0.204 + z * 1.057;\n  r = r > 0.0031308 ? 1.055 * r ** (1 / 2.4) - 0.055 : 12.92 * r;\n  g = g > 0.0031308 ? 1.055 * g ** (1 / 2.4) - 0.055 : 12.92 * g;\n  b = b > 0.0031308 ? 1.055 * b ** (1 / 2.4) - 0.055 : 12.92 * b;\n  r = clamp(0, 255, Math.round(r * 255));\n  g = clamp(0, 255, Math.round(g * 255));\n  b = clamp(0, 255, Math.round(b * 255));\n  return [r, g, b, input[3]];\n};\nconst colorDistance = (a, b, colorDistanceAlgorithm) => {\n  switch (colorDistanceAlgorithm) {\n    case constants_color__WEBPACK_IMPORTED_MODULE_0__[/* RGB_NEAREST */ "d"]:\n      return Math.sqrt((a[0] - b[0]) ** 2 + (a[1] - b[1]) ** 2 + (a[2] - b[2]) ** 2);\n\n    case constants_color__WEBPACK_IMPORTED_MODULE_0__[/* LAB_NEAREST */ "b"]:\n      {\n        const aLab = rgba2laba(a);\n        const bLab = rgba2laba(b);\n        return Math.sqrt((bLab[0] - aLab[0]) ** 2 + (bLab[1] - aLab[1]) ** 2 + (bLab[2] - aLab[2]) ** 2);\n      }\n\n    case constants_color__WEBPACK_IMPORTED_MODULE_0__[/* WASM_LAB_NEAREST */ "e"]:\n      {\n        return wasmRgbaLabaDistance(a, b);\n      }\n\n    case constants_color__WEBPACK_IMPORTED_MODULE_0__[/* RGB_APPROX */ "c"]:\n      {\n        const r = (a[0] + b[0]) / 2;\n        const dR = a[0] - b[0];\n        const dG = a[1] - b[1];\n        const dB = a[2] - b[2];\n        const dRc = (2 + r / 256) * dR ** 2;\n        const dGc = 4 * dG ** 2 + (2 + (255 - r) / 256);\n        const dBc = dB ** 2;\n        return Math.sqrt(dRc + dGc + dBc);\n      }\n\n    case constants_color__WEBPACK_IMPORTED_MODULE_0__[/* HSV_NEAREST */ "a"]:\n      {\n        const aHsv = rgba2hsva(a);\n        const bHsv = rgba2hsva(b);\n        const dH = Math.min(Math.abs(bHsv[0] - aHsv[0]), 360 - Math.abs(bHsv[0] - aHsv[0])) / 180.0;\n        const dS = Math.abs(bHsv[1] - aHsv[1]);\n        const dV = Math.abs(bHsv[2] - aHsv[2]) / 255.0;\n        return Math.sqrt(dH ** 2 + dS ** 2 + dV ** 2);\n      }\n\n    default:\n      return -1;\n  }\n};\nconst medianCutPalette = (buf, limit, ignoreAlpha, adaptMode, colorMode = "RGB") => {\n  const range = {\n    r: {\n      min: buf[0],\n      max: buf[0]\n    },\n    g: {\n      min: buf[0],\n      max: buf[0]\n    },\n    b: {\n      min: buf[0],\n      max: buf[0]\n    },\n    a: {\n      min: buf[0],\n      max: buf[0]\n    }\n  };\n  const pixels = [];\n\n  for (let i = 0; i < buf.length; i += 4) {\n    const pixelRaw = rgba(buf[i], buf[i + 1], buf[i + 2], buf[i + 3]);\n    const pixel = colorMode === "RGB" ? pixelRaw : rgba2laba(pixelRaw);\n    const r = pixel[0];\n    const g = pixel[1];\n    const b = pixel[2];\n    const a = pixel[3];\n    range.r.min = r < range.r.min ? r : range.r.min;\n    range.r.max = r > range.r.max ? r : range.r.max;\n    range.g.min = g < range.g.min ? g : range.g.min;\n    range.g.max = g > range.g.max ? g : range.g.max;\n    range.b.min = b < range.b.min ? b : range.b.min;\n    range.b.max = b > range.b.max ? b : range.b.max;\n    range.a.min = a < range.a.min ? a : range.a.min;\n    range.a.max = a > range.a.max ? a : range.a.max;\n    pixels.push(pixel);\n  }\n\n  const channelsByRange = [{\n    channel: 0,\n    range: range.r.max - range.r.min\n  }, {\n    channel: 1,\n    range: range.g.max - range.g.min\n  }, {\n    channel: 2,\n    range: range.b.max - range.b.min\n  }, {\n    channel: 3,\n    range: range.a.max - range.a.min\n  }].sort((a, b) => b.range - a.range);\n\n  const medianCut = (bucket, channelSequence, remaining, iterations, ignAlpha, adptMode) => {\n    const channel = channelSequence[iterations % (ignAlpha ? 3 : 4)];\n    bucket.sort((a, b) => b[channel.channel] - a[channel.channel]);\n    const midIdx = Math.floor(bucket.length / 2);\n\n    if (remaining <= 0) {\n      switch (adaptMode) {\n        case "AVERAGE":\n          {\n            const acc = [0, 0, 0, 0];\n            bucket.forEach(c => {\n              acc[0] += c[0] / bucket.length;\n              acc[1] += c[1] / bucket.length;\n              acc[2] += c[2] / bucket.length;\n              acc[3] += c[3] / bucket.length;\n            }); // $FlowFixMe\n\n            return [acc.map(ch => Math.floor(ch))];\n          }\n\n        case "FIRST":\n          return [bucket[0]];\n\n        default:\n        case "MID":\n          return [bucket[midIdx]];\n      }\n    } // Subsort recursively, cycling through channels\n\n\n    return [bucket.slice(0, midIdx), bucket.slice(midIdx, bucket.length)].map(g => medianCut(g, channelSequence, remaining - 1, iterations + 1, ignAlpha, adptMode)).reduce((a, b) => a.concat(b), []);\n  };\n\n  const paletteRaw = medianCut(pixels, channelsByRange, limit, 0, ignoreAlpha, adaptMode).filter(c => c != null);\n\n  if (colorMode === "RGB") {\n    return paletteRaw;\n  } else if (colorMode === "LAB") {\n    return paletteRaw.map(c => laba2rgba(c));\n  }\n\n  return [];\n};\nconst uniqueColors = (buf, limit) => {\n  const seen = {};\n\n  for (let i = 0; i < buf.length; i += 4) {\n    const r = buf[i];\n    const g = buf[i + 1];\n    const b = buf[i + 2];\n    const a = buf[i + 3];\n    const key = `${r}-${g}-${b}-${a}`;\n\n    if (seen[key] && seen[key].count) {\n      seen[key].count += 1;\n    } else {\n      seen[key] = {\n        count: 1,\n        color: rgba(r, g, b, a)\n      };\n    }\n  }\n\n  if (limit) {\n    return Object.values(seen).sort((a, b) => {\n      if (!a || !b || typeof a.count !== "number" || typeof b.count !== "number") {\n        return 0;\n      }\n\n      if (a.count < b.count) return -1;\n      if (a.count > b.count) return 1;\n      return 0;\n    }).slice(0, limit) // $FlowFixMe\n    .map(c => c.color);\n  } // $FlowFixMe\n\n\n  return Object.values(seen).map(c => c.color);\n}; // Preserves nulls\n\nconst scaleMatrix = (mat, scale) => mat.map(row => row.map(col => col ? col * scale : col));\nconst add = (a, b) => [a[0] + b[0], a[1] + b[1], a[2] + b[2], a[3] + b[3]];\nconst sub = (a, b) => [a[0] - b[0], a[1] - b[1], a[2] - b[2], a[3] - b[3]];\nconst scale = (a, scalar, alpha = false) => [scalar * a[0], scalar * a[1], scalar * a[2], alpha ? scalar * a[3] : a[3]]; // contrast factor 0-1 ideally\n\nconst contrast = (color, factor) => {\n  // normalise to [-1, 1]\n  const nC = [color[0] / 255 - 0.5, color[1] / 255 - 0.5, color[2] / 255 - 0.5, color[3]];\n  return [(nC[0] + factor * (nC[0] - 1.0) * nC[0] * (nC[0] - 0.5) + 0.5) * 255, (nC[1] + factor * (nC[1] - 1.0) * nC[1] * (nC[1] - 0.5) + 0.5) * 255, (nC[2] + factor * (nC[2] - 1.0) * nC[2] * (nC[2] - 0.5) + 0.5) * 255, color[3]];\n}; // factor 0-255, exposure ideally 0-2 (small number)\n\nconst brightness = (color, factor, exposure = 1) => [color[0] * exposure + factor, color[1] * exposure + factor, color[2] * exposure + factor, color[3]];\nconst gamma = (color, g) => [255 * (color[0] / 255) ** (1 / g), 255 * (color[1] / 255) ** (1 / g), 255 * (color[2] / 255) ** (1 / g), color[3]];\nconst getBufferIndex = (x, y, width) => (x + width * y) * 4; // FIXME: Make signature consistent with addBufferPixel\n\nconst fillBufferPixel = (buf, i, r, g, b, a) => {\n  buf[i] = r; // eslint-disable-line\n\n  buf[i + 1] = g; // eslint-disable-line\n\n  buf[i + 2] = b; // eslint-disable-line\n\n  buf[i + 3] = a; // eslint-disable-line\n};\nconst addBufferPixel = (buf, i, color) => {\n  buf[i] += color[0]; // eslint-disable-line\n\n  buf[i + 1] += color[1]; // eslint-disable-line\n\n  buf[i + 2] += color[2]; // eslint-disable-line\n\n  buf[i + 3] += color[3]; // eslint-disable-line\n};\nconst cloneCanvas = (original, copyData = true) => {\n  const clone = document.createElement("canvas");\n  clone.width = original.width;\n  clone.height = original.height;\n  const cloneCtx = clone.getContext("2d");\n\n  if (cloneCtx && copyData) {\n    cloneCtx.drawImage(original, 0, 0);\n  }\n\n  return clone;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')},11:function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(68);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(30)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL0FwcC9zdHlsZXMuc2Nzcz81NmMzIl0sInNvdXJjZXNDb250ZW50IjpbIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTIhLi9zdHlsZXMuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0yIS4vc3R5bGVzLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTIhLi9zdHlsZXMuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///11\n")},12:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return THEMES; });\n/* unused harmony export createPalette */\n/* harmony import */ var constants_controlTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);\n/* harmony import */ var utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === \'function\') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n// https://en.wikipedia.org/wiki/List_of_8-bit_computer_hardware_palettes\n// https://en.wikipedia.org/wiki/Color_Graphics_Adapter\nconst cga = {\n  BLACK: Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 0, 0, 255),\n  // 0 black\n  BLUE: Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 0, 170, 255),\n  // 1 blue\n  GREEN: Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 170, 0, 255),\n  // 2 green\n  CYAN: Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 170, 170, 255),\n  // 3 cyan\n  RED: Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(170, 0, 0, 255),\n  // 4 red\n  MAGENTA: Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(170, 0, 170, 255),\n  // 5 magenta\n  YELLOW: Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(170, 170, 0, 255),\n  // 6 yellow\n  WHITE: Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(170, 170, 170, 255),\n  // 7 white\n  BBLACK: Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(85, 85, 85, 255),\n  // 8 bright black\n  BBLUE: Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(85, 85, 255, 255),\n  // 9 bright blue\n  BGREEN: Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(85, 255, 85, 255),\n  // 10 bright green\n  BCYAN: Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(85, 255, 255, 255),\n  // 11 bright cyan\n  BRED: Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 85, 85, 255),\n  // 12 bright red\n  BMAGENTA: Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 85, 255, 255),\n  // 13 bright magenta\n  BYELLOW: Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 255, 85, 255),\n  // 14 bright yellow\n  BWHITE: Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 255, 255, 255) // 15 bright white\n\n};\nconst THEMES = {\n  CMYK: [Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 255, 255, 255), // cyan\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 0, 255, 255), // magenta\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 255, 0, 255), // yellow\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 0, 0, 255), // black\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 255, 255, 255)],\n  EGA_MODE4_PALETTE1_LOW: [cga.BLACK, cga.WHITE, cga.MAGENTA, cga.CYAN],\n  EGA_MODE4_PALETTE1_HIGH: [cga.BLACK, cga.WHITE, cga.BMAGENTA, cga.BCYAN],\n  EGA_MODE4_PALETTE2_LOW: [cga.BLACK, cga.GREEN, cga.RED, cga.YELLOW],\n  EGA_MODE4_PALETTE2_HIGH: [cga.BLACK, cga.BGREEN, cga.BRED, cga.BYELLOW],\n  EGA_MODE5_PALETTE3_LOW: [cga.BLACK, cga.CYAN, cga.RED, cga.BBLACK],\n  EGA_MODE5_PALETTE3_HIGH: [cga.BLACK, cga.BCYAN, cga.BRED, cga.BWHITE],\n  CGA: [cga.BLACK, cga.BLUE, cga.GREEN, cga.CYAN, cga.RED, cga.MAGENTA, cga.YELLOW, cga.WHITE, cga.BBLACK, cga.BBLUE, cga.BGREEN, cga.BCYAN, cga.BRED, cga.BMAGENTA, cga.BYELLOW, cga.BWHITE],\n  // https://upload.wikimedia.org/wikipedia/commons/1/14/CGA-NTSC-colors.png\n  CGA_NTSC: [Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 0, 0, 255), // black\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 14, 163, 255), // blue\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 119, 23, 255), // green\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 156, 118, 255), // cyan\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(111, 7, 31, 255), // red\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(130, 34, 168, 255), // magenta\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(117, 143, 26, 255), // yellow\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(162, 162, 162, 255), // white\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(73, 73, 73, 255), // bblack\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(109, 92, 253, 255), // bblue\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(94, 210, 75, 255), // bgreen\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(105, 250, 209, 255), // bcyan\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(204, 80, 116, 255), // bred\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(224, 117, 254, 255), // bmagenta\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(210, 237, 79, 255), // byellow\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 255, 255, 255) // bwhite\n  ],\n  // https://en.wikipedia.org/wiki/List_of_software_palettes#Microsoft_Windows_default_20-color_palette\n  CGA_MICROSOFT_256: [cga.BLACK, cga.BLUE, cga.GREEN, cga.CYAN, cga.RED, cga.MAGENTA, cga.YELLOW, cga.WHITE, cga.BBLACK, cga.BBLUE, cga.BGREEN, cga.BCYAN, cga.BRED, cga.BMAGENTA, cga.BYELLOW, cga.BWHITE, Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(188, 219, 192, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(157, 201, 238, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 251, 240, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(158, 159, 162, 255)],\n  // https://en.wikipedia.org/wiki/File:Commodore64_palette.png\n  C64: [Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 0, 0, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 255, 255, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(166, 77, 69, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(88, 192, 199, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(164, 88, 161, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(82, 171, 100, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(77, 71, 152, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(203, 212, 141, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(168, 104, 64, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(113, 84, 28, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(210, 125, 119, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(99, 99, 99, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(138, 138, 138, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(144, 226, 157, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(134, 126, 202, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(174, 173, 174, 255)],\n  C64_NTSC: [Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 0, 0, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 255, 255, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 52, 24, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 222, 253, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(170, 78, 199, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(95, 185, 89, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 77, 204, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 236, 84, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 90, 30, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(201, 65, 22, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 113, 77, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(96, 96, 96, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(135, 152, 109, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(170, 255, 157, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(35, 136, 250, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(195, 184, 213, 255)],\n  // https://en.wikipedia.org/wiki/File:BbcMicro_palette_color_test_chart.png\n  TELETEXT_BBC_MICRO: [Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 0, 0, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 15, 22, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 254, 62, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 30, 250, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 255, 254, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 27, 249, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 254, 64, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 255, 255, 255)],\n  MAC2: [Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 255, 255, 255), // white\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 255, 0, 255), // yellow\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 102, 0, 255), // orange\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(221, 0, 0, 255), // red\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 0, 153, 255), // magenta\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(51, 0, 153, 255), // purple\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 0, 204, 255), // blue\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 153, 255, 255), // cyan\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 170, 0, 255), // green\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 102, 0, 255), // dark green\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(102, 51, 0, 255), // brown\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(153, 102, 51, 255), // tan\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(187, 187, 187, 255), // light grey\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(136, 136, 136, 255), // medium grey\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(68, 68, 68, 255), // dark grey\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 0, 0, 255) // black\n  ],\n  // https://en.wikipedia.org/wiki/File:AppleII_palette.png\n  APPLE2: [Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 0, 0, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(137, 61, 81, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(78, 74, 134, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(239, 96, 235, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 104, 84, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(145, 145, 145, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 167, 237, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(199, 194, 246, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(82, 92, 31, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(244, 125, 51, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(145, 145, 145, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(251, 184, 200, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 199, 63, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(203, 209, 157, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(144, 219, 202, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 255, 255, 255)],\n  // https://en.wikipedia.org/wiki/File:MSX_palette.png\n  MSX: [Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 0, 0, 0), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 0, 0, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(35, 182, 83, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(103, 206, 129, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(79, 88, 218, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(121, 119, 236, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(191, 94, 83, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(68, 218, 237, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(227, 100, 91, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 135, 125, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(206, 193, 102, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(224, 207, 138, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(41, 160, 74, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(186, 102, 177, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(203, 203, 203, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 255, 255, 255)],\n  MSX2_MODE6: [Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 0, 0, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 38, 23, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(110, 108, 75, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 216, 149, 255)],\n  EARTHBOUND_1: [Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(6, 6, 6, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(239, 239, 239, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(207, 207, 207, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(142, 158, 129, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 174, 129, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 142, 112, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(93, 127, 105, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(193, 174, 130, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(195, 158, 108, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(154, 119, 91, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(252, 16, 95, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(150, 9, 51, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(228, 206, 62, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(232, 150, 48, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(71, 83, 195, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(53, 37, 37, 255)],\n  SEPIA: [Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(8, 8, 0, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(39, 34, 24, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(70, 63, 48, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(101, 93, 72, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(132, 122, 96, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(163, 152, 120, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(194, 182, 145, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(225, 211, 169, 255)],\n  GAMEBOY: [Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(155, 188, 15, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(139, 172, 15, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(48, 98, 48, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(15, 56, 15, 255)],\n  // https://steamcommunity.com/sharedfiles/filedetails/?id=572608400\n  DOWNWELL_GAMEBOY: [Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(50, 59, 41, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(109, 127, 87, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(98, 114, 79, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(156, 173, 136, 255)],\n  DOWNWELL: [Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(249, 249, 249, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(247, 0, 22, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(21, 127, 246, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 0, 0, 255)],\n  DOWNWELL_NIKAIDO: [Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(254, 254, 254, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(252, 146, 33, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(21, 127, 252, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(26, 26, 13, 255)],\n  DOWNWELL_MAD: [Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(34, 31, 58, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(43, 224, 184, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(240, 39, 232, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(236, 153, 61, 255)],\n  DOWNWELL_RGB: [Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(91, 228, 126, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(220, 0, 52, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(2, 3, 109, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(25, 45, 155, 255)],\n  DOWNWELL_ZENNYAN: [Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(254, 254, 254, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(21, 127, 252, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(232, 11, 195, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(87, 182, 62, 255)],\n  VA_11_HALL_A: [Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 0, 0, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(2, 0, 24, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(39, 8, 52, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(63, 1, 71, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(109, 7, 74, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(160, 16, 73, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(167, 96, 130, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(187, 18, 75, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(202, 93, 108, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(206, 19, 76, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(243, 169, 141, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(250, 58, 80, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(253, 21, 102, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(254, 180, 182, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(254, 238, 182, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 255, 255, 255)],\n  PC98_PHOBOS: [Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 0, 0, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 102, 119, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(68, 34, 153, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(85, 102, 102, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(102, 68, 187, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(119, 136, 136, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(153, 119, 238, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(153, 153, 102, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(153, 85, 102, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(170, 187, 187, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(187, 153, 153, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(204, 204, 153, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(221, 187, 187, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(221, 34, 85, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 238, 221, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 255, 255, 255)],\n  PC98_YUNO: [Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 0, 0, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(16, 156, 140, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(66, 33, 66, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(82, 99, 99, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(99, 99, 239, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(140, 49, 49, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(156, 173, 189, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(189, 206, 255, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(189, 49, 66, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(222, 140, 115, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(239, 49, 82, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 140, 156, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 173, 49, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 189, 173, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 222, 206, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 255, 255, 255)],\n  PC98_POLICENAUTS: [Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(1, 1, 1, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(1, 84, 220, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(35, 171, 35, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(69, 69, 69, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(84, 186, 205, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(103, 35, 16, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(137, 137, 137, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(171, 69, 205, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(171, 84, 69, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(186, 35, 35, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(205, 186, 50, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(205, 205, 205, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(205, 84, 1, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(220, 152, 118, 255)],\n  PC98_VIRGIN_ANGEL: [Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 0, 0, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 136, 51, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 68, 85, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(85, 119, 136, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(102, 102, 136, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(102, 51, 51, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(153, 102, 102, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(153, 187, 204, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(170, 153, 204, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(187, 136, 136, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(187, 68, 68, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(221, 170, 170, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 221, 221, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 238, 221, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 255, 255, 255)],\n  PC98_INNOCENT_TOUR: [Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 0, 0, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 68, 153, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(34, 102, 0, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(68, 34, 34, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(68, 85, 85, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(85, 153, 51, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(119, 68, 51, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(136, 153, 153, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(153, 0, 0, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(170, 102, 68, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(170, 187, 238, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(238, 153, 102, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(238, 153, 51, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 187, 153, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 255, 255, 255)],\n  PC98_POSSESSIONER: [Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 0, 0, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 51, 102, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(34, 119, 136, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(34, 170, 187, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(68, 119, 68, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(136, 0, 0, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(136, 68, 34, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(153, 187, 136, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(187, 187, 187, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(204, 102, 85, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(238, 0, 0, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(238, 153, 136, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 187, 170, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 204, 0, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 255, 255, 255)],\n  // https://color.adobe.com/sandy-stone-beach-ocean-diver-color-theme-15325/\n  SANDY_STONE_BEACH: [Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(232, 225, 177, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(166, 161, 127, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(240, 235, 202, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 100, 126, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 51, 51, 255)],\n  VAPORWAVE: [// modified http://www.colourlovers.com/palette/3636765/seapunk_vaporwave\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(255, 106, 213, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(199, 116, 232, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(173, 140, 255, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(135, 149, 232, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(148, 208, 255, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 0, 0, 255)],\n  WIREDSOUND: [// https://fauux.neocities.org\n  Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(210, 115, 138, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(0, 0, 0, 255), Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* rgba */ "m"])(193, 180, 146, 255)],\n  EMPTY: []\n};\nconst optionTypes = {\n  palette: {\n    type: constants_controlTypes__WEBPACK_IMPORTED_MODULE_0__[/* COLOR_ARRAY */ "b"],\n    default: THEMES.CGA\n  },\n  colorDistanceAlgorithm: constants_controlTypes__WEBPACK_IMPORTED_MODULE_0__[/* COLOR_DISTANCE_ALGORITHM */ "c"]\n};\nconst defaults = {\n  colors: optionTypes.palette.default,\n  colorDistanceAlgorithm: optionTypes.colorDistanceAlgorithm.default\n};\n\nconst getColor = (color, options = defaults) => {\n  const {\n    colors\n  } = options;\n  const colorDistanceAlgorithm = options.colorDistanceAlgorithm || defaults.colorDistanceAlgorithm;\n\n  if (!colors) {\n    return color;\n  }\n\n  let min = null;\n  let minDistance = 0;\n  colors.forEach(pc => {\n    const distance = Object(utils__WEBPACK_IMPORTED_MODULE_1__[/* colorDistance */ "e"])(pc, color, colorDistanceAlgorithm);\n\n    if (min === null) {\n      min = pc;\n      minDistance = distance;\n    } else if (distance < minDistance) {\n      min = pc;\n      minDistance = distance;\n    }\n  });\n  return !min ? color : min;\n};\n\nconst user = {\n  name: "User/Adaptive",\n  getColor,\n  options: defaults,\n  optionTypes,\n  defaults\n};\n/* harmony default export */ __webpack_exports__["b"] = (user);\nconst createPalette = colors => _objectSpread({}, user, {\n  options: _objectSpread({}, user.options, {\n    colors,\n    defaults: colors\n  })\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///12\n')},13:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return RGB_NEAREST; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return RGB_APPROX; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HSV_NEAREST; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return LAB_NEAREST; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return WASM_LAB_NEAREST; });\nconst RGB_NEAREST = "RGB_NEAREST";\nconst RGB_APPROX = "RGB_APPROX";\nconst HSV_NEAREST = "HSV_NEAREST";\nconst LAB_NEAREST = "LAB_NEAREST";\nconst WASM_LAB_NEAREST = "SLOW_WASM_LAB_NEAREST";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb25zdGFudHMvY29sb3IuanM/NWMwOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgUkdCX05FQVJFU1QgPSBcIlJHQl9ORUFSRVNUXCI7XG5leHBvcnQgY29uc3QgUkdCX0FQUFJPWCA9IFwiUkdCX0FQUFJPWFwiO1xuZXhwb3J0IGNvbnN0IEhTVl9ORUFSRVNUID0gXCJIU1ZfTkVBUkVTVFwiO1xuZXhwb3J0IGNvbnN0IExBQl9ORUFSRVNUID0gXCJMQUJfTkVBUkVTVFwiO1xuZXhwb3J0IGNvbnN0IFdBU01fTEFCX05FQVJFU1QgPSBcIlNMT1dfV0FTTV9MQUJfTkVBUkVTVFwiOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///13\n')},14:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PALETTE; });\n/* unused harmony export UNKNOWN */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return SCALING_ALGORITHM; });\nconst PALETTE = "PALETTE";\nconst UNKNOWN = "UNKNOWN";\nconst SCALING_ALGORITHM = {\n  AUTO: "AUTO",\n  PIXELATED: "PIXELATED"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb25zdGFudHMvb3B0aW9uVHlwZXMuanM/ZjM3OSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgUEFMRVRURSA9IFwiUEFMRVRURVwiO1xuZXhwb3J0IGNvbnN0IFVOS05PV04gPSBcIlVOS05PV05cIjtcbmV4cG9ydCBjb25zdCBTQ0FMSU5HX0FMR09SSVRITSA9IHtcbiAgQVVUTzogXCJBVVRPXCIsXG4gIFBJWEVMQVRFRDogXCJQSVhFTEFURURcIlxufTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///14\n')},19:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* unused harmony export ALL */\n/* unused harmony export PIXEL */\n/* unused harmony export optionTypes */\n/* unused harmony export defaults */\n/* harmony import */ var constants_controlTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);\n/* harmony import */ var palettes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);\n/* harmony import */ var utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);\n\n\n\nconst ALL = "ALL";\nconst PIXEL = "PIXEL";\nconst optionTypes = {\n  mode: {\n    type: constants_controlTypes__WEBPACK_IMPORTED_MODULE_0__[/* ENUM */ "d"],\n    options: [{\n      name: "Pixel",\n      value: PIXEL\n    }],\n    default: PIXEL\n  },\n  program: {\n    type: constants_controlTypes__WEBPACK_IMPORTED_MODULE_0__[/* TEXT */ "i"],\n    default: `// Eval\'d JS\n// Errors in console\n// Variables:\n// r, g, b, a\n// w, h, x, y\n// const p ([r, g, b, a]),\n// const i (index),\n// buf (pixel array)\n// palette\n\nr = buf[i + 17];\ng = b;\nb = i % 255;\na = 255;`\n  },\n  palette: {\n    type: constants_controlTypes__WEBPACK_IMPORTED_MODULE_0__[/* PALETTE */ "e"],\n    default: palettes__WEBPACK_IMPORTED_MODULE_1__[/* nearest */ "a"]\n  }\n};\nconst defaults = {\n  mode: optionTypes.mode.default,\n  program: optionTypes.program.default,\n  palette: optionTypes.palette.default\n};\n\nconst programFilter = (input, options = defaults) => {\n  const {\n    program,\n    palette\n  } = options;\n  const output = Object(utils__WEBPACK_IMPORTED_MODULE_2__[/* cloneCanvas */ "d"])(input, false);\n  const inputCtx = input.getContext("2d");\n  const outputCtx = output.getContext("2d");\n\n  if (!inputCtx || !outputCtx) {\n    return input;\n  }\n\n  const buf = inputCtx.getImageData(0, 0, input.width, input.height).data;\n  const w = input.width;\n  const h = input.height;\n\n  outside: for (let x = 0; x < w; x += 1) {\n    // eslint-disable-line\n    for (let y = 0; y < h; y += 1) {\n      // Define variables for program\n      const i = Object(utils__WEBPACK_IMPORTED_MODULE_2__[/* getBufferIndex */ "i"])(x, y, w);\n      const p = Object(utils__WEBPACK_IMPORTED_MODULE_2__[/* rgba */ "m"])(buf[i], buf[i + 1], buf[i + 2], buf[i + 3]);\n      /* eslint-disable */\n\n      let r = p[0];\n      let g = p[1];\n      let b = p[2];\n      let a = p[3];\n\n      try {\n        eval(program);\n      } catch (e) {\n        console.error(e);\n        break outside;\n      }\n      /* eslint-enable */\n\n\n      const col = palette.getColor([r, g, b, a], palette.options);\n      Object(utils__WEBPACK_IMPORTED_MODULE_2__[/* fillBufferPixel */ "g"])(buf, i, col[0], col[1], col[2], col[3]);\n    }\n  }\n\n  outputCtx.putImageData(new ImageData(buf, output.width, output.height), 0, 0);\n  return output;\n};\n\n/* harmony default export */ __webpack_exports__["a"] = ({\n  name: "Program",\n  func: programFilter,\n  optionTypes,\n  options: defaults,\n  defaults\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9maWx0ZXJzL3Byb2dyYW0uanM/OGI2OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFTlVNLCBURVhULCBQQUxFVFRFIH0gZnJvbSBcImNvbnN0YW50cy9jb250cm9sVHlwZXNcIjtcbmltcG9ydCAqIGFzIHBhbGV0dGVzIGZyb20gXCJwYWxldHRlc1wiO1xuaW1wb3J0IHsgY2xvbmVDYW52YXMsIGZpbGxCdWZmZXJQaXhlbCwgZ2V0QnVmZmVySW5kZXgsIHJnYmEgfSBmcm9tIFwidXRpbHNcIjtcbmV4cG9ydCBjb25zdCBBTEwgPSBcIkFMTFwiO1xuZXhwb3J0IGNvbnN0IFBJWEVMID0gXCJQSVhFTFwiO1xuZXhwb3J0IGNvbnN0IG9wdGlvblR5cGVzID0ge1xuICBtb2RlOiB7XG4gICAgdHlwZTogRU5VTSxcbiAgICBvcHRpb25zOiBbe1xuICAgICAgbmFtZTogXCJQaXhlbFwiLFxuICAgICAgdmFsdWU6IFBJWEVMXG4gICAgfV0sXG4gICAgZGVmYXVsdDogUElYRUxcbiAgfSxcbiAgcHJvZ3JhbToge1xuICAgIHR5cGU6IFRFWFQsXG4gICAgZGVmYXVsdDogYC8vIEV2YWwnZCBKU1xuLy8gRXJyb3JzIGluIGNvbnNvbGVcbi8vIFZhcmlhYmxlczpcbi8vIHIsIGcsIGIsIGFcbi8vIHcsIGgsIHgsIHlcbi8vIGNvbnN0IHAgKFtyLCBnLCBiLCBhXSksXG4vLyBjb25zdCBpIChpbmRleCksXG4vLyBidWYgKHBpeGVsIGFycmF5KVxuLy8gcGFsZXR0ZVxuXG5yID0gYnVmW2kgKyAxN107XG5nID0gYjtcbmIgPSBpICUgMjU1O1xuYSA9IDI1NTtgXG4gIH0sXG4gIHBhbGV0dGU6IHtcbiAgICB0eXBlOiBQQUxFVFRFLFxuICAgIGRlZmF1bHQ6IHBhbGV0dGVzLm5lYXJlc3RcbiAgfVxufTtcbmV4cG9ydCBjb25zdCBkZWZhdWx0cyA9IHtcbiAgbW9kZTogb3B0aW9uVHlwZXMubW9kZS5kZWZhdWx0LFxuICBwcm9ncmFtOiBvcHRpb25UeXBlcy5wcm9ncmFtLmRlZmF1bHQsXG4gIHBhbGV0dGU6IG9wdGlvblR5cGVzLnBhbGV0dGUuZGVmYXVsdFxufTtcblxuY29uc3QgcHJvZ3JhbUZpbHRlciA9IChpbnB1dCwgb3B0aW9ucyA9IGRlZmF1bHRzKSA9PiB7XG4gIGNvbnN0IHtcbiAgICBwcm9ncmFtLFxuICAgIHBhbGV0dGVcbiAgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IG91dHB1dCA9IGNsb25lQ2FudmFzKGlucHV0LCBmYWxzZSk7XG4gIGNvbnN0IGlucHV0Q3R4ID0gaW5wdXQuZ2V0Q29udGV4dChcIjJkXCIpO1xuICBjb25zdCBvdXRwdXRDdHggPSBvdXRwdXQuZ2V0Q29udGV4dChcIjJkXCIpO1xuXG4gIGlmICghaW5wdXRDdHggfHwgIW91dHB1dEN0eCkge1xuICAgIHJldHVybiBpbnB1dDtcbiAgfVxuXG4gIGNvbnN0IGJ1ZiA9IGlucHV0Q3R4LmdldEltYWdlRGF0YSgwLCAwLCBpbnB1dC53aWR0aCwgaW5wdXQuaGVpZ2h0KS5kYXRhO1xuICBjb25zdCB3ID0gaW5wdXQud2lkdGg7XG4gIGNvbnN0IGggPSBpbnB1dC5oZWlnaHQ7XG5cbiAgb3V0c2lkZTogZm9yIChsZXQgeCA9IDA7IHggPCB3OyB4ICs9IDEpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gICAgZm9yIChsZXQgeSA9IDA7IHkgPCBoOyB5ICs9IDEpIHtcbiAgICAgIC8vIERlZmluZSB2YXJpYWJsZXMgZm9yIHByb2dyYW1cbiAgICAgIGNvbnN0IGkgPSBnZXRCdWZmZXJJbmRleCh4LCB5LCB3KTtcbiAgICAgIGNvbnN0IHAgPSByZ2JhKGJ1ZltpXSwgYnVmW2kgKyAxXSwgYnVmW2kgKyAyXSwgYnVmW2kgKyAzXSk7XG4gICAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xuXG4gICAgICBsZXQgciA9IHBbMF07XG4gICAgICBsZXQgZyA9IHBbMV07XG4gICAgICBsZXQgYiA9IHBbMl07XG4gICAgICBsZXQgYSA9IHBbM107XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGV2YWwocHJvZ3JhbSk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7XG4gICAgICAgIGJyZWFrIG91dHNpZGU7XG4gICAgICB9XG4gICAgICAvKiBlc2xpbnQtZW5hYmxlICovXG5cblxuICAgICAgY29uc3QgY29sID0gcGFsZXR0ZS5nZXRDb2xvcihbciwgZywgYiwgYV0sIHBhbGV0dGUub3B0aW9ucyk7XG4gICAgICBmaWxsQnVmZmVyUGl4ZWwoYnVmLCBpLCBjb2xbMF0sIGNvbFsxXSwgY29sWzJdLCBjb2xbM10pO1xuICAgIH1cbiAgfVxuXG4gIG91dHB1dEN0eC5wdXRJbWFnZURhdGEobmV3IEltYWdlRGF0YShidWYsIG91dHB1dC53aWR0aCwgb3V0cHV0LmhlaWdodCksIDAsIDApO1xuICByZXR1cm4gb3V0cHV0O1xufTtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiBcIlByb2dyYW1cIixcbiAgZnVuYzogcHJvZ3JhbUZpbHRlcixcbiAgb3B0aW9uVHlwZXMsXG4gIG9wdGlvbnM6IGRlZmF1bHRzLFxuICBkZWZhdWx0c1xufTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///19\n')},2:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BOOL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return ENUM; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return RANGE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return STRING; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return TEXT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return PALETTE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return COLOR_ARRAY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return COLOR_DISTANCE_ALGORITHM; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return SCALING_ALGORITHM_OPTIONS; });\n/* harmony import */ var constants_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(13);\n/* harmony import */ var constants_optionTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14);\n\n\nconst BOOL = "BOOL";\nconst ENUM = "ENUM";\nconst RANGE = "RANGE";\nconst STRING = "STRING";\nconst TEXT = "TEXT";\nconst PALETTE = "PALETTE";\nconst COLOR_ARRAY = "COLOR_ARRAY";\nconst COLOR_DISTANCE_ALGORITHM = {\n  type: ENUM,\n  options: [{\n    name: "RGB",\n    value: constants_color__WEBPACK_IMPORTED_MODULE_0__[/* RGB_NEAREST */ "d"]\n  }, {\n    name: "RGB (perceptual approx.)",\n    value: constants_color__WEBPACK_IMPORTED_MODULE_0__[/* RGB_APPROX */ "c"]\n  }, {\n    name: "HSV",\n    value: constants_color__WEBPACK_IMPORTED_MODULE_0__[/* HSV_NEAREST */ "a"]\n  }, {\n    name: "Lab",\n    value: constants_color__WEBPACK_IMPORTED_MODULE_0__[/* LAB_NEAREST */ "b"]\n  }, {\n    name: "Lab (wasm)",\n    value: constants_color__WEBPACK_IMPORTED_MODULE_0__[/* WASM_LAB_NEAREST */ "e"]\n  }],\n  default: constants_color__WEBPACK_IMPORTED_MODULE_0__[/* RGB_APPROX */ "c"]\n};\nconst SCALING_ALGORITHM_OPTIONS = {\n  type: ENUM,\n  options: [{\n    name: "Auto",\n    value: constants_optionTypes__WEBPACK_IMPORTED_MODULE_1__[/* SCALING_ALGORITHM */ "b"].AUTO\n  }, {\n    name: "Pixelated",\n    value: constants_optionTypes__WEBPACK_IMPORTED_MODULE_1__[/* SCALING_ALGORITHM */ "b"].PIXELATED\n  }],\n  default: constants_optionTypes__WEBPACK_IMPORTED_MODULE_1__[/* SCALING_ALGORITHM */ "b"].AUTO\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2NvbnN0YW50cy9jb250cm9sVHlwZXMuanM/MDQwZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSR0JfTkVBUkVTVCwgUkdCX0FQUFJPWCwgTEFCX05FQVJFU1QsIEhTVl9ORUFSRVNULCBXQVNNX0xBQl9ORUFSRVNUIH0gZnJvbSBcImNvbnN0YW50cy9jb2xvclwiO1xuaW1wb3J0IHsgU0NBTElOR19BTEdPUklUSE0gfSBmcm9tIFwiY29uc3RhbnRzL29wdGlvblR5cGVzXCI7XG5leHBvcnQgY29uc3QgQk9PTCA9IFwiQk9PTFwiO1xuZXhwb3J0IGNvbnN0IEVOVU0gPSBcIkVOVU1cIjtcbmV4cG9ydCBjb25zdCBSQU5HRSA9IFwiUkFOR0VcIjtcbmV4cG9ydCBjb25zdCBTVFJJTkcgPSBcIlNUUklOR1wiO1xuZXhwb3J0IGNvbnN0IFRFWFQgPSBcIlRFWFRcIjtcbmV4cG9ydCBjb25zdCBQQUxFVFRFID0gXCJQQUxFVFRFXCI7XG5leHBvcnQgY29uc3QgQ09MT1JfQVJSQVkgPSBcIkNPTE9SX0FSUkFZXCI7XG5leHBvcnQgY29uc3QgQ09MT1JfRElTVEFOQ0VfQUxHT1JJVEhNID0ge1xuICB0eXBlOiBFTlVNLFxuICBvcHRpb25zOiBbe1xuICAgIG5hbWU6IFwiUkdCXCIsXG4gICAgdmFsdWU6IFJHQl9ORUFSRVNUXG4gIH0sIHtcbiAgICBuYW1lOiBcIlJHQiAocGVyY2VwdHVhbCBhcHByb3guKVwiLFxuICAgIHZhbHVlOiBSR0JfQVBQUk9YXG4gIH0sIHtcbiAgICBuYW1lOiBcIkhTVlwiLFxuICAgIHZhbHVlOiBIU1ZfTkVBUkVTVFxuICB9LCB7XG4gICAgbmFtZTogXCJMYWJcIixcbiAgICB2YWx1ZTogTEFCX05FQVJFU1RcbiAgfSwge1xuICAgIG5hbWU6IFwiTGFiICh3YXNtKVwiLFxuICAgIHZhbHVlOiBXQVNNX0xBQl9ORUFSRVNUXG4gIH1dLFxuICBkZWZhdWx0OiBSR0JfQVBQUk9YXG59O1xuZXhwb3J0IGNvbnN0IFNDQUxJTkdfQUxHT1JJVEhNX09QVElPTlMgPSB7XG4gIHR5cGU6IEVOVU0sXG4gIG9wdGlvbnM6IFt7XG4gICAgbmFtZTogXCJBdXRvXCIsXG4gICAgdmFsdWU6IFNDQUxJTkdfQUxHT1JJVEhNLkFVVE9cbiAgfSwge1xuICAgIG5hbWU6IFwiUGl4ZWxhdGVkXCIsXG4gICAgdmFsdWU6IFNDQUxJTkdfQUxHT1JJVEhNLlBJWEVMQVRFRFxuICB9XSxcbiAgZGVmYXVsdDogU0NBTElOR19BTEdPUklUSE0uQVVUT1xufTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n')},28:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(23)(false);\n// imports\n\n\n// module\nexports.push([module.i, "._2QobU25W0YSZIQ1RQeIEMp {\\n  font-size: 0.75em;\\n}", ""]);\n\n// exports\nexports.locals = {\n\t"s": "_2QobU25W0YSZIQ1RQeIEMp"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdHlsZXMvZXhhbXBsZS5zY3NzP2M3YjciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuXzJRb2JVMjVXMFlTWklRMVJRZUlFTXAge1xcbiAgZm9udC1zaXplOiAwLjc1ZW07XFxufVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcInNcIjogXCJfMlFvYlUyNVcwWVNaSVExUlFlSUVNcFwiXG59OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///28\n')},49:function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(59);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(30)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdHlsZXMvc3R5bGUuc2Nzcz9iMGIwIl0sInNvdXJjZXNDb250ZW50IjpbIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTIhLi9zdHlsZS5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTIhLi9zdHlsZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0yIS4vc3R5bGUuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///49\n")},58:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ../node_modules/react/index.js\nvar react = __webpack_require__(1);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ../node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(36);\nvar react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);\n\n// EXTERNAL MODULE: ../node_modules/redux/es/index.js + 15 modules\nvar es = __webpack_require__(21);\n\n// EXTERNAL MODULE: ../node_modules/react-redux/es/index.js + 23 modules\nvar react_redux_es = __webpack_require__(18);\n\n// EXTERNAL MODULE: ../node_modules/redux-thunk/lib/index.js\nvar lib = __webpack_require__(55);\nvar lib_default = /*#__PURE__*/__webpack_require__.n(lib);\n\n// EXTERNAL MODULE: ../node_modules/history/createBrowserHistory.js\nvar createBrowserHistory = __webpack_require__(25);\nvar createBrowserHistory_default = /*#__PURE__*/__webpack_require__.n(createBrowserHistory);\n\n// EXTERNAL MODULE: ../node_modules/react-router-dom/es/index.js + 30 modules\nvar react_router_dom_es = __webpack_require__(48);\n\n// EXTERNAL MODULE: ../node_modules/react-router-redux/es/index.js + 14 modules\nvar react_router_redux_es = __webpack_require__(26);\n\n// CONCATENATED MODULE: ./constants/actionTypes.js\nconst LOAD_IMAGE = "LOAD_IMAGE";\nconst LOAD_STATE = "LOAD_STATE";\nconst FILTER_IMAGE = "FILTER_IMAGE";\nconst SELECT_FILTER = "SELECT_FILTER";\nconst SET_FILTER_OPTION = "SET_FILTER_OPTION";\nconst SET_FILTER_PALETTE_OPTION = "SET_FILTER_PALETTE_OPTION";\nconst ADD_PALETTE_COLOR = "ADD_PALETTE_COLOR";\nconst SAVE_CURRENT_COLOR_PALETTE = "SAVE_CURRENT_COLOR_PALETTE";\nconst DELETE_CURRENT_COLOR_PALETTE = "DELETE_CURRENT_COLOR_PALETTE";\nconst SET_GRAYSCALE = "SET_GRAYSCALE";\nconst SET_SCALE = "SET_SCALE";\nconst SET_OUTPUT_SCALE = "SET_OUTPUT_SCALE";\nconst SET_REAL_TIME_FILTERING = "SET_REAL_TIME_FILTERING";\nconst SET_INPUT_CANVAS = "SET_INPUT_CANVAS";\nconst SET_INPUT_VOLUME = "SET_INPUT_VOLUME";\nconst SET_INPUT_PLAYBACK_RATE = "SET_INPUT_PLAYBACK_RATE";\nconst SET_SCALING_ALGORITHM = "SET_SCALING_ALGORITHM";\nconst ERROR = "ERROR";\nconst ASYNC_FILTER = "ASYNC_FILTER";\n// EXTERNAL MODULE: ./constants/optionTypes.js\nvar constants_optionTypes = __webpack_require__(14);\n\n// EXTERNAL MODULE: ./palettes/index.js + 1 modules\nvar palettes = __webpack_require__(7);\n\n// EXTERNAL MODULE: ./palettes/user.js\nvar user = __webpack_require__(12);\n\n// CONCATENATED MODULE: ./actions/index.js\n/* eslint-disable import/prefer-default-export */\n\n\n\n\nconst actions_importState = json => {\n  const deserialized = JSON.parse(json);\n  return {\n    type: LOAD_STATE,\n    data: deserialized\n  };\n};\nconst actions_setInputVolume = volume => ({\n  type: SET_INPUT_VOLUME,\n  volume\n});\nconst actions_setInputPlaybackRate = rate => ({\n  type: SET_INPUT_PLAYBACK_RATE,\n  rate\n});\nconst actions_setInputCanvas = canvas => ({\n  type: SET_INPUT_CANVAS,\n  canvas\n});\nconst actions_setScalingAlgorithm = algorithm => ({\n  type: SET_SCALING_ALGORITHM,\n  algorithm\n});\nconst actions_loadImage = (image, time = 0, video, dispatch) => ({\n  type: LOAD_IMAGE,\n  image,\n  time,\n  video,\n  dispatch\n});\nconst actions_loadImageAsync = file => dispatch => {\n  const reader = new FileReader();\n  const image = new Image();\n\n  reader.onload = event => {\n    image.onload = () => {\n      dispatch(actions_loadImage(image, null, null, dispatch));\n    };\n\n    image.src = event.target.result;\n  };\n\n  reader.readAsDataURL(file);\n};\nconst actions_loadVideoAsync = (file, volume = 1, playbackRate = 1) => dispatch => {\n  const reader = new FileReader();\n  const video = document.createElement("video");\n\n  reader.onload = event => {\n    const i = new Image();\n    const canvas = document.createElement("canvas");\n    const ctx = canvas.getContext("2d");\n\n    const loadFrame = () => {\n      URL.revokeObjectURL(i.src);\n\n      if (!video.paused && video.src !== "") {\n        i.width = video.videoWidth;\n        i.height = video.videoHeight;\n        ctx.drawImage(video, 0, 0);\n        canvas.toBlob(blob => {\n          if (blob) {\n            i.src = URL.createObjectURL(blob);\n\n            i.onload = () => {\n              if (!video.paused && video.src !== "") {\n                requestAnimationFrame(loadFrame);\n                dispatch(actions_loadImage(i, video.currentTime, video, dispatch));\n              }\n            };\n          }\n        });\n      }\n    };\n\n    let firstPlay = true;\n\n    video.onplaying = () => {\n      if (firstPlay) {\n        firstPlay = false;\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n        requestAnimationFrame(loadFrame);\n      }\n    };\n\n    const blob = new Blob([event.target.result]);\n    video.volume = volume;\n    video.src = URL.createObjectURL(blob);\n    video.playbackRate = playbackRate;\n    video.loop = true;\n    video.autoplay = true;\n    video.play();\n  };\n\n  reader.readAsArrayBuffer(file);\n};\nconst actions_loadMediaAsync = (file, volume = 1, playbackRate = 1) => {\n  if (file.type.startsWith("video/")) {\n    return actions_loadVideoAsync(file, volume, playbackRate);\n  }\n\n  return actions_loadImageAsync(file);\n};\nconst actions_setConvertGrayscale = value => ({\n  type: SET_GRAYSCALE,\n  value\n});\nconst actions_selectFilter = (name, filter) => ({\n  type: SELECT_FILTER,\n  name,\n  filter\n});\nconst actions_filterImage = image => ({\n  type: FILTER_IMAGE,\n  image\n});\nconst actions_filterImageAsync = (input, filter, options) => dispatch => {\n  const output = filter(input, options, dispatch);\n  if (!output) return {\n    type: ERROR,\n    message: "Error filtering"\n  };\n\n  if (output instanceof HTMLCanvasElement) {\n    const outputImage = new Image();\n    outputImage.src = output.toDataURL("image/png");\n\n    outputImage.onload = () => {\n      dispatch(actions_filterImage(outputImage));\n    };\n  }\n\n  return null;\n};\nconst actions_addPaletteColor = color => ({\n  type: ADD_PALETTE_COLOR,\n  color\n}); // FIXME: Why is it finding by name here? Fishy, potential problem when value is a valid palette name\n\nconst actions_setFilterOption = (optionName, value) => {\n  const paletteObject = palettes["b" /* paletteList */].find(p => p.name === value);\n  return {\n    type: SET_FILTER_OPTION,\n    optionName,\n    value: paletteObject ? paletteObject.palette : value\n  };\n};\nconst actions_setFilterPaletteOption = (optionName, value) => ({\n  type: SET_FILTER_PALETTE_OPTION,\n  optionName,\n  value\n});\nconst actions_setScale = scale => ({\n  type: SET_SCALE,\n  scale\n});\nconst actions_setOutputScale = scale => ({\n  type: SET_OUTPUT_SCALE,\n  scale\n});\nconst actions_setRealtimeFiltering = enabled => ({\n  type: SET_REAL_TIME_FILTERING,\n  enabled\n});\nconst actions_saveCurrentColorPalette = (name, colors) => {\n  window.localStorage.setItem(`_palette_${name.replace(" ", "")}`, JSON.stringify({\n    type: constants_optionTypes["a" /* PALETTE */],\n    name,\n    colors\n  }));\n  user["a" /* THEMES */][name] = colors;\n  return {\n    type: SAVE_CURRENT_COLOR_PALETTE,\n    name\n  };\n};\nconst actions_deleteCurrentColorPalette = name => {\n  window.localStorage.removeItem(`_palette_${name.replace(" ", "")}`);\n  delete user["a" /* THEMES */][name];\n  return {\n    type: DELETE_CURRENT_COLOR_PALETTE,\n    name\n  };\n};\n// EXTERNAL MODULE: ../node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(9);\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n\n// EXTERNAL MODULE: ../node_modules/react-draggable/dist/react-draggable.js\nvar react_draggable = __webpack_require__(27);\nvar react_draggable_default = /*#__PURE__*/__webpack_require__.n(react_draggable);\n\n// EXTERNAL MODULE: ./constants/controlTypes.js\nvar controlTypes = __webpack_require__(2);\n\n// EXTERNAL MODULE: ./components/controls/styles.scss\nvar styles = __webpack_require__(6);\nvar styles_default = /*#__PURE__*/__webpack_require__.n(styles);\n\n// CONCATENATED MODULE: ./components/controls/Enum.jsx\n\n\n\nconst Enum_Enum = props => react_default.a.createElement("div", null, react_default.a.createElement("div", {\n  className: styles_default.a.label\n}, props.name), react_default.a.createElement("select", {\n  className: styles_default.a.enum,\n  value: props.value,\n  onChange: e => props.onSetFilterOption(props.name, e.target.value)\n}, props.types.options.map(p => react_default.a.createElement("option", {\n  key: p.value,\n  name: p.value\n}, p.value))));\n\n/* harmony default export */ var controls_Enum = (Enum_Enum);\n// CONCATENATED MODULE: ./components/controls/Palette.jsx\n/* eslint-disable react/no-unused-prop-types */\n\n\n\n\n\nconst Palette_Palette = props => react_default.a.createElement("div", {\n  className: styles_default.a.group\n}, react_default.a.createElement("span", {\n  className: styles_default.a.name\n}, props.name), react_default.a.createElement("select", {\n  className: styles_default.a.enum,\n  value: props.value.name,\n  onChange: e => props.onSetFilterOption(props.name, e.target.value)\n}, palettes["b" /* paletteList */].map(p => react_default.a.createElement("option", {\n  key: p.name,\n  name: p.name\n}, p.name))), react_default.a.createElement(controls, {\n  inputCanvas: props.inputCanvas,\n  optionTypes: props.value.optionTypes,\n  options: props.paletteOptions,\n  onAddPaletteColor: props.onAddPaletteColor,\n  onSetPaletteOption: props.onSetPaletteOption,\n  onSetFilterOption: props.onSetPaletteOption,\n  onSaveColorPalette: props.onSaveColorPalette,\n  onDeleteColorPalette: props.onDeleteColorPalette\n}));\n\n/* harmony default export */ var controls_Palette = (Palette_Palette);\n// CONCATENATED MODULE: ./components/controls/Bool.jsx\n/* eslint-disable react/no-unused-prop-types */\n\n\n\nconst Bool_Bool = props => react_default.a.createElement("div", {\n  className: styles_default.a.checkbox\n}, react_default.a.createElement("input", {\n  type: "checkbox",\n  checked: props.value,\n  onChange: e => props.onSetFilterOption(props.name, e.target.checked)\n}), react_default.a.createElement("span", {\n  className: styles_default.a.label,\n  role: "presentation",\n  onClick: () => props.onSetFilterOption(props.name, !props.value)\n}, props.name));\n\n/* harmony default export */ var controls_Bool = (Bool_Bool);\n// CONCATENATED MODULE: ./components/controls/Range.jsx\n\n\n\nconst Range_onManualValue = props => {\n  const newValue = window.prompt("Value"); // eslint-disable-line\n\n  const parsed = parseFloat(newValue);\n\n  if (parsed || parsed === 0) {\n    props.onSetFilterOption(props.name, parsed);\n  }\n};\n\nconst Range_Range = props => react_default.a.createElement("div", {\n  className: styles_default.a.range\n}, react_default.a.createElement("div", {\n  className: styles_default.a.label\n}, props.name), react_default.a.createElement("div", {\n  className: styles_default.a.rangeGroup\n}, react_default.a.createElement("input", {\n  type: "range",\n  min: props.types.range[0],\n  max: props.types.range[1],\n  value: props.value,\n  step: props.step || 1,\n  onChange: e => props.onSetFilterOption(props.name, parseFloat(e.target.value))\n}), react_default.a.createElement("span", {\n  role: "button",\n  tabIndex: "0",\n  className: [styles_default.a.value, styles_default.a.clickable].join(" "),\n  onClick: () => Range_onManualValue(props),\n  onKeyPress: e => {\n    if (e.key === "Enter") {\n      Range_onManualValue(props);\n    }\n  }\n}, props.value)));\n\n/* harmony default export */ var controls_Range = (Range_Range);\n// CONCATENATED MODULE: ./components/controls/Stringly.jsx\n\n\n\nconst Stringly_Stringly = props => react_default.a.createElement("div", null, react_default.a.createElement("div", {\n  className: styles_default.a.label\n}, props.name), react_default.a.createElement("input", {\n  type: "text",\n  value: props.value,\n  onChange: e => props.onSetFilterOption(props.name, e.target.value)\n}));\n\n/* harmony default export */ var controls_Stringly = (Stringly_Stringly);\n// CONCATENATED MODULE: ./components/controls/Textly.jsx\n\n\n\nconst Textly_Textly = props => react_default.a.createElement("div", null, react_default.a.createElement("div", {\n  className: styles_default.a.label\n}, props.name), react_default.a.createElement("textarea", {\n  type: "text",\n  value: props.value,\n  wrap: "off",\n  spellCheck: "false",\n  onChange: e => props.onSetFilterOption(props.name, e.target.value)\n}));\n\n/* harmony default export */ var controls_Textly = (Textly_Textly);\n// EXTERNAL MODULE: ./utils/index.js\nvar utils = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./components/controls/ColorArray.jsx\n/* eslint-disable no-alert, react/no-unused-prop-types, react/prop-types, jsx-a11y/accessible-emoji */\n\n\n\n\n\nconst ColorArray_TOP = "TOP";\nconst ColorArray_RGB_ADAPT_MID = "RGB_ADAPT_MID";\nconst ColorArray_RGB_ADAPT_AVERAGE = "RGB_ADAPT_AVERAGE";\nconst ColorArray_RGB_ADAPT_FIRST = "RGB_ADAPT_FIRST";\nconst ColorArray_LAB_ADAPT_MID = "LAB_ADAPT_MID";\nconst ColorArray_LAB_ADAPT_AVERAGE = "LAB_ADAPT_AVERAGE";\nconst ColorArray_LAB_ADAPT_FIRST = "LAB_ADAPT_FIRST";\nconst ColorArray_modeMap = {\n  [ColorArray_RGB_ADAPT_MID]: {\n    colorMode: "RGB",\n    adaptMode: "MID"\n  },\n  [ColorArray_RGB_ADAPT_AVERAGE]: {\n    colorMode: "RGB",\n    adaptMode: "AVERAGE"\n  },\n  [ColorArray_RGB_ADAPT_FIRST]: {\n    colorMode: "RGB",\n    adaptMode: "FIRST"\n  },\n  [ColorArray_LAB_ADAPT_MID]: {\n    colorMode: "LAB",\n    adaptMode: "MID"\n  },\n  [ColorArray_LAB_ADAPT_AVERAGE]: {\n    colorMode: "LAB",\n    adaptMode: "AVERAGE"\n  },\n  [ColorArray_LAB_ADAPT_FIRST]: {\n    colorMode: "LAB",\n    adaptMode: "FIRST"\n  }\n};\n\nconst ColorArray_convertCsvToColor = csv => {\n  const tokens = csv.split(",");\n\n  if (tokens.length !== 4) {\n    return null;\n  }\n\n  const channels = tokens.map(t => parseInt(t, 10));\n\n  if (!channels.every(val => val >= 0 && val <= 255)) {\n    return null;\n  }\n\n  return Object(utils["m" /* rgba */])(channels[0], channels[1], channels[2], channels[3]);\n};\n\nconst ColorArray_onDeleteColor = (e, props) => {\n  props.onSetPaletteOption("colors", props.value.filter((_, idx) => idx !== parseInt(e.target.dataset.idx, 10) - 1));\n};\n\nclass ColorArray_ColorArray extends react_default.a.Component {\n  constructor() {\n    super();\n    this.state = {\n      extractMode: ColorArray_TOP\n    };\n  }\n\n  render() {\n    const currentTheme = Object.entries(user["a" /* THEMES */]).find(e => e[1] === this.props.value);\n    const customThemeName = "Custom";\n    const currentThemeName = currentTheme ? currentTheme[0] : customThemeName;\n    const themePicker = react_default.a.createElement("select", {\n      className: styles_default.a.enum,\n      value: currentThemeName,\n      onChange: e => this.props.onSetPaletteOption("colors", user["a" /* THEMES */][e.target.value])\n    }, Object.entries(user["a" /* THEMES */]).map(e => {\n      const [key, val] = e;\n      return react_default.a.createElement("option", {\n        key: key,\n        name: key,\n        "data-colors": val\n      }, key);\n    }), react_default.a.createElement("option", {\n      key: customThemeName,\n      name: customThemeName,\n      disabled: true\n    }, "Custom"));\n    let i = 0;\n    const colorSwatch = react_default.a.createElement("div", {\n      className: styles_default.a.colorArray\n    }, this.props.value.map(c => {\n      const color = `rgba(${c[0]}, ${c[1]}, ${c[2]}, ${c[3]})`;\n      return react_default.a.createElement("div", {\n        key: `${c}-${i++}` // eslint-disable-line\n        ,\n        className: styles_default.a.color,\n        "data-idx": i,\n        title: `${color} - click to remove`,\n        role: "button",\n        tabIndex: "0",\n        onKeyPress: e => {\n          if (e.key === "Enter") {\n            ColorArray_onDeleteColor(e, this.props);\n          }\n        },\n        onClick: e => {\n          ColorArray_onDeleteColor(e, this.props);\n        },\n        style: {\n          backgroundColor: color\n        }\n      });\n    }));\n    const onAddColorButton = react_default.a.createElement("button", {\n      onClick: () => {\n        const colorString = prompt(\'Add a color: "r,g,b,a" (0-255 for each, eg. 255,0,0,255 for red)\');\n        const color = ColorArray_convertCsvToColor(colorString);\n\n        if (color) {\n          this.props.onAddPaletteColor(color);\n        }\n      }\n    }, "\\uD83D\\uDD8C Add color");\n    const extractTopButton = react_default.a.createElement("button", {\n      onClick: () => {\n        const ctx = this.props.inputCanvas && this.props.inputCanvas.getContext("2d");\n\n        if (ctx) {\n          const topN = parseInt(prompt("Take the top n colors", 64), 10);\n          const colors = Object(utils["s" /* uniqueColors */])(ctx.getImageData(0, 0, this.props.inputCanvas && this.props.inputCanvas.width || 0, this.props.inputCanvas && this.props.inputCanvas.height || 0).data, topN);\n          this.props.onSetPaletteOption("colors", colors);\n        }\n      }\n    }, "\\uD83D\\uDDBC\\uFE0F Extract TOP");\n\n    const extractAdaptiveButton = (name, ignoreAlpha, colorMode, adaptMode) => react_default.a.createElement("button", {\n      onClick: () => {\n        const ctx = this.props.inputCanvas && this.props.inputCanvas.getContext("2d");\n\n        if (ctx) {\n          const topN = parseInt(prompt("Take the top 2^n colors", 4), 10);\n          const colors = Object(utils["k" /* medianCutPalette */])(ctx.getImageData(0, 0, this.props.inputCanvas && this.props.inputCanvas.width || 0, this.props.inputCanvas && this.props.inputCanvas.height || 0).data, topN, ignoreAlpha, adaptMode, colorMode);\n          this.props.onSetPaletteOption("colors", colors);\n        }\n      }\n    }, "\\uD83D\\uDDBC\\uFE0F ", `Extract ${name}`);\n\n    const extractOptions = react_default.a.createElement("div", null, // $FlowFixMe\n    react_default.a.createElement(controls_Enum, {\n      name: "Algorithm",\n      value: this.state.extractMode,\n      types: {\n        options: [{\n          name: "Top",\n          value: ColorArray_TOP\n        }, {\n          name: "RGB Adaptive (mid)",\n          value: ColorArray_RGB_ADAPT_MID\n        }, {\n          name: "RGB Adaptive (average)",\n          value: ColorArray_RGB_ADAPT_AVERAGE\n        }, {\n          name: "RGB Adaptive (first)",\n          value: ColorArray_RGB_ADAPT_FIRST\n        }, {\n          name: "LAB Adaptive (mid)",\n          value: ColorArray_LAB_ADAPT_MID\n        }, {\n          name: "LAB Adaptive (average)",\n          value: ColorArray_LAB_ADAPT_AVERAGE\n        }, {\n          name: "LAB Adaptive (first)",\n          value: ColorArray_LAB_ADAPT_FIRST\n        }]\n      },\n      onSetFilterOption: (name, value) => {\n        this.setState({\n          extractMode: value\n        });\n      }\n    }), this.state.extractMode === ColorArray_TOP ? extractTopButton : extractAdaptiveButton(this.state.extractMode, true, ColorArray_modeMap[this.state.extractMode].colorMode, ColorArray_modeMap[this.state.extractMode].adaptMode));\n    const savePaletteButton = react_default.a.createElement("button", {\n      onClick: () => {\n        const name = prompt("Save current palette as");\n        const savedName = `🎨 ${name}`;\n\n        if (!name || user["a" /* THEMES */][savedName]) {\n          alert("Could not save: name taken or invalid. Use a different name. ");\n        } else {\n          // $FlowFixMe\n          this.props.onSaveColorPalette(savedName, this.props.value);\n          this.forceUpdate();\n        }\n      }\n    }, "\\uD83C\\uDFA8 Save locally");\n    const exportPaletteButton = react_default.a.createElement("button", {\n      onClick: () => {\n        const w = window.open("");\n        w.document.write(`Copy this:\n            <textarea>${JSON.stringify(this.props.value)}</textarea>\n            <hr>\n            Dev:\n            <textarea>${this.props.value.map(c => `rgba(${c[0]}, ${c[1]}, ${c[2]}, ${c[3]})`).join(",\\n")}</textarea>`);\n      }\n    }, "\\uD83C\\uDFA8 Export");\n    const importPaletteButton = react_default.a.createElement("button", {\n      onClick: () => {\n        const json = window.prompt("Paste theme JSON");\n        const imported = JSON.parse(json);\n        this.props.onSetPaletteOption("colors", imported);\n      }\n    }, "\\uD83C\\uDFA8 Import palette");\n    const deletePaletteButton = react_default.a.createElement("button", {\n      onClick: () => {\n        if (!currentTheme || !currentTheme[0]) {\n          return;\n        }\n\n        this.props.onDeleteColorPalette(currentTheme[0]);\n        this.forceUpdate();\n      }\n    }, "\\uD83C\\uDFA8 Delete");\n    return react_default.a.createElement("div", null, react_default.a.createElement("div", {\n      className: styles_default.a.label\n    }, "Theme"), themePicker, colorSwatch, onAddColorButton, react_default.a.createElement("div", {\n      className: styles_default.a.group\n    }, react_default.a.createElement("span", {\n      className: styles_default.a.name\n    }, "Extract from input"), extractOptions), !currentTheme ? savePaletteButton : null, importPaletteButton, !currentTheme ? exportPaletteButton : null, currentTheme && currentTheme[0] && currentTheme[0].includes("🎨 ") // Hack!\n    ? deletePaletteButton : null);\n  }\n\n}\n// CONCATENATED MODULE: ./components/controls/index.jsx\n/* eslint-disable react/no-unused-prop-types */\n\n\n\n\n\n\n\n\n\n\n\nconst controls_Controls = props => react_default.a.createElement("div", {\n  className: styles_default.a.controls\n}, Object.entries(props.optionTypes).map(e => {\n  const [name, oType] = e; // $FlowFixMe\n\n  switch (oType.type) {\n    case controlTypes["f" /* RANGE */]:\n      return (// $FlowFixMe\n        react_default.a.createElement(controls_Range, {\n          key: name,\n          name: name,\n          types: oType,\n          value: props.options[name] // $FlowFixMe\n          ,\n          step: oType && oType.step,\n          onSetFilterOption: props.onSetFilterOption\n        })\n      );\n\n    case controlTypes["e" /* PALETTE */]:\n      return react_default.a.createElement(controls_Palette, {\n        key: name,\n        name: name,\n        types: oType,\n        value: props.options[name],\n        paletteOptions: props.options[name].options,\n        onAddPaletteColor: props.onAddPaletteColor,\n        onSetFilterOption: props.onSetFilterOption,\n        onSetPaletteOption: props.onSetPaletteOption,\n        onSaveColorPalette: props.onSaveColorPalette,\n        onDeleteColorPalette: props.onDeleteColorPalette,\n        inputCanvas: props.inputCanvas\n      });\n\n    case controlTypes["b" /* COLOR_ARRAY */]:\n      return react_default.a.createElement(ColorArray_ColorArray, {\n        key: name,\n        name: name,\n        value: props.options.colors,\n        onAddPaletteColor: props.onAddPaletteColor,\n        onSetFilterOption: props.onSetFilterOption,\n        onSetPaletteOption: props.onSetPaletteOption,\n        onSaveColorPalette: props.onSaveColorPalette,\n        onDeleteColorPalette: props.onDeleteColorPalette,\n        inputCanvas: props.inputCanvas\n      });\n\n    case controlTypes["h" /* STRING */]:\n      return react_default.a.createElement(controls_Stringly, {\n        key: name,\n        name: name,\n        types: oType,\n        value: props.options[name],\n        onSetFilterOption: props.onSetFilterOption\n      });\n\n    case controlTypes["i" /* TEXT */]:\n      return react_default.a.createElement(controls_Textly, {\n        key: name,\n        name: name,\n        types: oType,\n        value: props.options[name],\n        onSetFilterOption: props.onSetFilterOption\n      });\n\n    case controlTypes["a" /* BOOL */]:\n      return react_default.a.createElement(controls_Bool, {\n        key: name,\n        name: name,\n        types: oType,\n        value: props.options[name],\n        onSetFilterOption: props.onSetFilterOption\n      });\n\n    case controlTypes["d" /* ENUM */]:\n      return (// $FlowFixMe\n        react_default.a.createElement(controls_Enum, {\n          key: name,\n          name: name,\n          types: oType,\n          value: props.options[name],\n          onSetFilterOption: props.onSetFilterOption\n        })\n      );\n\n    default:\n      return react_default.a.createElement("div", null, "Unknown setting type");\n  }\n}));\n\n/* harmony default export */ var controls = (controls_Controls);\n// CONCATENATED MODULE: ./containers/Controls.js\n\n\n\n\nconst Controls_mapStateToProps = (state, ownProps) => ({\n  optionTypes: state.filters.selected.filter.optionTypes,\n  options: state.filters.selected.filter.options,\n  inputCanvas: ownProps.inputCanvas\n});\n\nconst Controls_mapDispatchToProps = dispatch => ({\n  onSetFilterOption: (name, value) => dispatch(actions_setFilterOption(name, value)),\n  onSetPaletteOption: (name, value) => dispatch(actions_setFilterPaletteOption(name, value)),\n  onAddPaletteColor: color => dispatch(actions_addPaletteColor(color)),\n  onSaveColorPalette: (name, colors) => dispatch(actions_saveCurrentColorPalette(name, colors)),\n  onDeleteColorPalette: name => dispatch(actions_deleteCurrentColorPalette(name))\n});\n\nconst Controls_ContainedControls = Object(react_redux_es["b" /* connect */])(Controls_mapStateToProps, Controls_mapDispatchToProps)(controls);\n/* harmony default export */ var containers_Controls = (Controls_ContainedControls);\n// CONCATENATED MODULE: ./components/App/Exporter.jsx\n/* eslint-disable react/prefer-stateless-function, react/forbid-prop-types */\n\n\nclass Exporter_Exporter extends react_default.a.Component {\n  render() {\n    return react_default.a.createElement("div", null, react_default.a.createElement("button", {\n      onClick: () => {\n        this.props.onExportState(this.props.state, "uri");\n      }\n    }, "\\u21E7 URL"), react_default.a.createElement("button", {\n      onClick: () => {\n        this.props.onExportState(this.props.state, "json");\n      }\n    }, "\\u21E7 JSON"), react_default.a.createElement("button", {\n      onClick: () => {\n        const json = prompt("Paste JSON"); // eslint-disable-line\n\n        this.props.onImportState(json);\n      }\n    }, "Import"));\n  }\n\n}\nExporter_Exporter.propTypes = {\n  state: prop_types_default.a.object,\n  onImportState: prop_types_default.a.func,\n  onExportState: prop_types_default.a.func\n};\nExporter_Exporter.defaultProps = {\n  state: {},\n  onImportState: () => {},\n  onExportState: () => {}\n};\n// CONCATENATED MODULE: ./containers/Exporter.js\n\n\n\n\nconst Exporter_mapStateToProps = state => ({\n  state: state.filters\n});\n\nconst Exporter_mapDispatchToProps = dispatch => ({\n  onExportState: (state, format) => {\n    const json = JSON.stringify({\n      selected: state.selected,\n      convertGrayscale: state.convertGrayscale\n    }, (k, v) => {\n      if (k === "defaults" || k === "optionTypes" || typeof v === "function") {\n        return undefined;\n      }\n\n      return v;\n    });\n\n    if (format === "json") {\n      window.open(`data:application/json,${encodeURI(json)}`);\n    } else {\n      const base = `${window.location.origin}${window.location.pathname}`;\n      prompt("URL", `${base}?state=${encodeURI(btoa(json))}`); // eslint-disable-line\n    }\n  },\n  onImportState: json => dispatch(actions_importState(json))\n});\n\nconst Exporter_ContainedExporter = Object(react_redux_es["b" /* connect */])(Exporter_mapStateToProps, Exporter_mapDispatchToProps)(Exporter_Exporter);\n/* harmony default export */ var containers_Exporter = (Exporter_ContainedExporter);\n// EXTERNAL MODULE: ./components/App/styles.scss\nvar App_styles = __webpack_require__(11);\nvar App_styles_default = /*#__PURE__*/__webpack_require__.n(App_styles);\n\n// CONCATENATED MODULE: ./components/App/index.jsx\n/* eslint-disable react/prefer-stateless-function, react/forbid-prop-types */\n\n\n\n\n\n\n\n\n\n\n\nclass App_App extends react_default.a.Component {\n  constructor(props) {\n    super(props);\n    this.inputCanvas = null;\n    this.outputCanvas = null;\n    this.chunks = [];\n    this.mediaRecorder = null;\n    this.captureVideo = document.createElement("video");\n    this.captureVideo.controls = true;\n    this.captureVideo.autoplay = true;\n    this.captureVideo.loop = true;\n    this.zIndex = 0;\n    this.stream = null;\n    this.state = {\n      dropping: false,\n      capturing: false,\n      hasCapture: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.onSetInputCanvas(this.inputCanvas);\n\n    if (document.body && this.captureVideo) {\n      const captureOutputContainer = document.body.querySelector("#captureOutput");\n\n      if (captureOutputContainer) {\n        captureOutputContainer.appendChild(this.captureVideo);\n      }\n    }\n  }\n\n  componentWillUpdate(nextProps) {\n    const drawToCanvas = (canvas, image, scale) => {\n      const finalWidth = image.width * scale;\n      const finalHeight = image.height * scale;\n      canvas.width = finalWidth; // eslint-disable-line\n\n      canvas.height = finalHeight; // eslint-disable-line\n\n      const ctx = canvas.getContext("2d");\n      ctx.imageSmoothingEnabled = nextProps.scalingAlgorithm === constants_optionTypes["b" /* SCALING_ALGORITHM */].AUTO;\n\n      if (ctx) {\n        ctx.drawImage(image, 0, 0, finalWidth, finalHeight);\n      }\n    };\n\n    const newInput = nextProps.inputImage !== this.props.inputImage;\n    const newScale = nextProps.scale !== this.props.scale;\n    const newTime = nextProps.time !== this.props.time;\n\n    if (this.inputCanvas && nextProps.inputImage && (newTime || newInput || newScale)) {\n      drawToCanvas(this.inputCanvas, nextProps.inputImage, nextProps.scale);\n    }\n\n    if (this.outputCanvas && nextProps.outputImage && nextProps.outputImage !== this.props.outputImage) {\n      drawToCanvas(this.outputCanvas, nextProps.outputImage, nextProps.outputScale);\n    }\n  }\n\n  render() {\n    const bringToTop = e => {\n      this.zIndex += 1;\n      e.currentTarget.style.zIndex = `${this.zIndex}`;\n    };\n\n    const loadImageSection = react_default.a.createElement("div", null, react_default.a.createElement("h2", null, "Load image or video"), react_default.a.createElement("input", {\n      className: [styles_default.a.file, this.state.dropping ? styles_default.a.dropping : null].join(" "),\n      type: "file",\n      id: "imageLoader",\n      name: "imageLoader",\n      onChange: e => this.props.onLoadImage(e, this.props.inputVideoVolume, this.props.inputVideoPlaybackRate),\n      onDragLeave: () => {\n        this.setState({\n          dropping: false\n        });\n      },\n      onDragOver: () => {\n        this.setState({\n          dropping: true\n        });\n      },\n      onDragEnter: () => {\n        this.setState({\n          dropping: true\n        });\n      },\n      onDrop: () => {\n        this.setState({\n          dropping: false\n        });\n      }\n    }), react_default.a.createElement(controls_Range, {\n      name: "Input Scale",\n      types: {\n        range: [0.1, 4]\n      },\n      step: 0.1,\n      onSetFilterOption: (_, value) => {\n        this.props.onSetScale(value);\n      },\n      value: this.props.scale\n    }));\n    const filterOptionsSection = react_default.a.createElement("div", {\n      className: App_styles_default.a.section\n    }, react_default.a.createElement("h2", null, "Algorithm"), react_default.a.createElement("div", {\n      className: ["filterOptions", App_styles_default.a.filterOptions].join(" ")\n    }, react_default.a.createElement("select", {\n      className: styles_default.a.enum,\n      onChange: e => {\n        const name = e.target.value;\n        const filter = this.props.availableFilters.find(f => f && f.displayName === name);\n        this.props.onSelectFilter(name, filter);\n      },\n      value: this.props.selectedFilter && (this.props.selectedFilter.displayName || this.props.selectedFilter.name)\n    }, this.props.availableFilters.map(f => react_default.a.createElement("option", {\n      key: f && f.displayName,\n      value: f && f.displayName\n    }, f && f.displayName))), react_default.a.createElement("div", {\n      className: styles_default.a.group\n    }, react_default.a.createElement("span", {\n      className: styles_default.a.name\n    }, "Options"), react_default.a.createElement(containers_Controls, {\n      inputCanvas: this.inputCanvas\n    }), react_default.a.createElement("div", {\n      className: styles_default.a.checkbox\n    }, react_default.a.createElement("input", {\n      name: "convertGrayscale",\n      type: "checkbox",\n      checked: this.props.convertGrayscale,\n      onChange: e => this.props.onConvertGrayscale(e.target.checked)\n    }), react_default.a.createElement("span", {\n      role: "presentation",\n      onClick: () => this.props.onConvertGrayscale(!this.props.convertGrayscale),\n      className: styles_default.a.label\n    }, "Pre-convert to grayscale"))), react_default.a.createElement(containers_Exporter, null)));\n    const filterButtonSection = react_default.a.createElement("div", {\n      className: App_styles_default.a.section\n    }, react_default.a.createElement("h2", null, "Filter"), react_default.a.createElement("button", {\n      className: [App_styles_default.a.filterButton, App_styles_default.a.waitButton].join(" "),\n      onClick: () => {\n        this.props.onFilterImage(this.inputCanvas, this.props.selectedFilter.filter, this.props.convertGrayscale);\n      }\n    }, "Filter"), react_default.a.createElement("button", {\n      style: {\n        marginLeft: "auto"\n      },\n      className: App_styles_default.a.copyButton,\n      onClick: () => {\n        if (this.outputCanvas) {\n          const image = new Image();\n          image.src = this.outputCanvas.toDataURL("image/png");\n\n          image.onload = () => {\n            this.props.onSetInput(image);\n            this.props.onSetScale(1);\n          };\n        }\n      }\n    }, "<< Copy output to input"), react_default.a.createElement("div", {\n      className: App_styles_default.a.section\n    }, react_default.a.createElement("h2", null, "Video"), react_default.a.createElement("div", null, react_default.a.createElement("label", {\n      className: styles_default.a.label,\n      htmlFor: "mute"\n    }, react_default.a.createElement("input", {\n      id: "mute",\n      type: "checkbox",\n      checked: this.props.inputVideoVolume === 0,\n      onChange: () => {\n        this.props.onSetInputVolume(this.props.inputVideoVolume > 0 ? 0 : 1);\n      }\n    }), "Mute video")), react_default.a.createElement("div", null, react_default.a.createElement("label", {\n      className: styles_default.a.label,\n      htmlFor: "realtimeFiltering"\n    }, react_default.a.createElement("input", {\n      id: "realtimeFiltering",\n      type: "checkbox",\n      onChange: e => {\n        this.props.onSetRealTimeFiltering(e.target.checked);\n      },\n      checked: this.props.realtimeFiltering\n    }), "Realtime filtering (videos)")), react_default.a.createElement("div", null, react_default.a.createElement(controls_Range, {\n      name: "Video Playback Rate",\n      types: {\n        range: [0, 2]\n      },\n      step: 0.05,\n      onSetFilterOption: (_, value) => {\n        this.props.onSetInputPlaybackRate(value);\n      },\n      value: this.props.inputVideoPlaybackRate\n    })), react_default.a.createElement("div", {\n      className: App_styles_default.a.captureSection\n    }, react_default.a.createElement("button", {\n      id: "captureButton",\n      style: {\n        margin: "5px 0"\n      },\n      disabled: !this.props.realtimeFiltering,\n      onClick: () => {\n        if (!this.state.capturing && this.outputCanvas) {\n          this.stream = this.outputCanvas.captureStream(25); // Mux audio + video tracks together\n\n          if (this.stream && this.props.inputVideo) {\n            const vid = this.props.inputVideo;\n            let streams; // Audio capture doesn\'t work on Firefox 57\n            // https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/captureStream\n            // if (vid.mozCaptureStream) {\n            //   streams = vid.mozCaptureStream(25);\n            // } else if (vid.captureStream) {\n            //   streams = vid.captureStream(25);\n            // }\n\n            if (vid.captureStream) {\n              streams = vid.captureStream(25);\n            }\n\n            if (streams && this.stream && this.props.inputVideoVolume > 0) {\n              const audioTracks = streams.getAudioTracks();\n              audioTracks.forEach(t => {\n                // $FlowFixMe\n                this.stream.addTrack(t.clone());\n              });\n            }\n          }\n\n          this.captureVideo.srcObject = this.stream; // $FlowFixMe\n\n          this.mediaRecorder = new MediaRecorder(this.stream);\n          this.mediaRecorder.start(); // $FlowFixMe\n\n          this.mediaRecorder.ondataavailable = e => {\n            this.chunks.push(e.data);\n          }; // $FlowFixMe\n\n\n          this.mediaRecorder.onstop = () => {\n            const blob = new Blob(this.chunks, {\n              type: "video/webm"\n            });\n            this.chunks = [];\n            const dataUrl = URL.createObjectURL(blob);\n            this.captureVideo.srcObject = null;\n            this.captureVideo.src = dataUrl;\n          };\n\n          this.setState({\n            capturing: true,\n            hasCapture: true\n          });\n        } else if (this.stream) {\n          // $FlowFixMe\n          this.stream.getTracks().forEach(track => track.stop()); // $FlowFixMe\n\n          this.mediaRecorder.stop();\n          this.setState({\n            capturing: false\n          });\n        }\n      }\n    }, this.state.capturing ? "Stop capture" : "Capture output video"), react_default.a.createElement("div", {\n      className: styles_default.a.unselectable\n    }, "Audio capture requires Chrome")), react_default.a.createElement("div", {\n      className: App_styles_default.a.section\n    }, react_default.a.createElement("h2", null, "Others"), react_default.a.createElement(controls_Enum, {\n      name: "Scaling algorithm",\n      onSetFilterOption: this.props.onSetScalingAlgorithm,\n      value: this.props.scalingAlgorithm,\n      types: controlTypes["g" /* SCALING_ALGORITHM_OPTIONS */]\n    }), react_default.a.createElement(controls_Range, {\n      name: "Output Scale",\n      types: {\n        range: [0.1, 4]\n      },\n      step: 0.1,\n      onSetFilterOption: (_, value) => {\n        this.props.onSetOutputScale(value);\n      },\n      value: this.props.outputScale\n    }))));\n    const canvases = react_default.a.createElement("div", {\n      className: App_styles_default.a.canvases\n    }, react_default.a.createElement(react_draggable_default.a, {\n      bounds: {\n        top: 0,\n        left: 0\n      }\n    }, react_default.a.createElement("div", {\n      role: "presentation",\n      onMouseDownCapture: bringToTop\n    }, react_default.a.createElement("div", {\n      className: styles_default.a.window\n    }, react_default.a.createElement("div", {\n      className: ["handle", styles_default.a.titleBar].join(" ")\n    }, "Input"), react_default.a.createElement("canvas", {\n      className: [App_styles_default.a.canvas, App_styles_default.a[this.props.scalingAlgorithm]].join(" "),\n      ref: c => {\n        this.inputCanvas = c;\n      }\n    })))), react_default.a.createElement(react_draggable_default.a, {\n      bounds: {\n        top: 0,\n        left: this.inputCanvas && -this.inputCanvas.width || -300\n      }\n    }, react_default.a.createElement("div", {\n      role: "presentation",\n      onMouseDownCapture: bringToTop\n    }, react_default.a.createElement("div", {\n      className: styles_default.a.window\n    }, react_default.a.createElement("div", {\n      className: ["handle", styles_default.a.titleBar].join(" ")\n    }, "Output"), react_default.a.createElement("canvas", {\n      className: App_styles_default.a.canvas,\n      ref: c => {\n        this.outputCanvas = c;\n      }\n    })))), react_default.a.createElement(react_draggable_default.a, {\n      bounds: {\n        top: 0,\n        left: (this.inputCanvas && -this.inputCanvas.width || -300) * 2\n      }\n    }, react_default.a.createElement("div", {\n      role: "presentation",\n      onMouseDownCapture: bringToTop,\n      id: "captureWindow",\n      className: this.state.hasCapture ? "" : App_styles_default.a.hide\n    }, react_default.a.createElement("div", {\n      className: styles_default.a.window\n    }, react_default.a.createElement("div", {\n      className: ["handle", styles_default.a.titleBar].join(" ")\n    }, "Capture"), react_default.a.createElement("div", {\n      id: "captureOutput"\n    }), react_default.a.createElement("div", {\n      className: [App_styles_default.a.rec, !this.state.capturing ? App_styles_default.a.hide : ""].join(" ")\n    }, "\\u25CF REC")))));\n    return react_default.a.createElement("div", {\n      className: App_styles_default.a.app\n    }, react_default.a.createElement("div", {\n      className: App_styles_default.a.chrome\n    }, react_default.a.createElement("h1", null, "\\uFF24\\uFF29\\uFF34\\uFF28\\uFF25\\uFF32\\uFF25\\uFF32 \\u2593\\u2592\\u2591"), loadImageSection, filterOptionsSection, filterButtonSection, react_default.a.createElement("div", {\n      className: App_styles_default.a.github\n    }, react_default.a.createElement("a", {\n      href: "https://github.com/gyng/ditherer/"\n    }, "GitHub"))), canvases);\n  }\n\n}\nApp_App.propTypes = {\n  availableFilters: prop_types_default.a.arrayOf(prop_types_default.a.object),\n  className: prop_types_default.a.string,\n  convertGrayscale: prop_types_default.a.bool,\n  inputImage: prop_types_default.a.object,\n  inputVideo: prop_types_default.a.object,\n  inputVideoVolume: prop_types_default.a.number,\n  inputVideoPlaybackRate: prop_types_default.a.number,\n  match: prop_types_default.a.object,\n  onConvertGrayscale: prop_types_default.a.func,\n  onFilterImage: prop_types_default.a.func,\n  onLoadImage: prop_types_default.a.func,\n  onSelectFilter: prop_types_default.a.func,\n  onSetInput: prop_types_default.a.func,\n  onSetInputVolume: prop_types_default.a.func,\n  onSetInputPlaybackRate: prop_types_default.a.func,\n  onSetInputCanvas: prop_types_default.a.func,\n  onSetRealTimeFiltering: prop_types_default.a.func,\n  onSetScale: prop_types_default.a.func,\n  onSetOutputScale: prop_types_default.a.func,\n  onSetScalingAlgorithm: prop_types_default.a.func,\n  outputImage: prop_types_default.a.object,\n  realtimeFiltering: prop_types_default.a.bool,\n  scale: prop_types_default.a.number,\n  outputScale: prop_types_default.a.number,\n  scalingAlgorithm: prop_types_default.a.string,\n  selectedFilter: prop_types_default.a.object,\n  time: prop_types_default.a.number\n};\nApp_App.defaultProps = {\n  availableFilters: [],\n  className: App_styles_default.a.app,\n  convertGrayscale: false,\n  inputImage: null,\n  inputVideo: null,\n  inputVideoPlaybackRate: 1,\n  inputVideoVolume: 1,\n  match: {\n    url: "unknown"\n  },\n  onConvertGrayscale: () => {},\n  onFilterImage: () => {},\n  onLoadImage: () => {},\n  onSelectFilter: () => {},\n  onSetInput: () => {},\n  onSetInputPlaybackRate: () => {},\n  onSetInputVolume: () => {},\n  onSetInputCanvas: () => {},\n  onSetRealTimeFiltering: () => {},\n  onSetScale: () => {},\n  onSetOutputScale: () => {},\n  onSetScalingAlgorithm: () => {},\n  outputImage: null,\n  realtimeFiltering: false,\n  scale: 1,\n  outputScale: 1,\n  scalingAlgorithm: constants_optionTypes["b" /* SCALING_ALGORITHM */].AUTO,\n  selectedFilter: null,\n  time: null\n};\n// CONCATENATED MODULE: ./filters/binarize.js\n\n\n\nconst binarize_optionTypes = {\n  thresholdR: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 255],\n    step: 0.5,\n    default: 127.5\n  },\n  thresholdG: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 255],\n    step: 0.5,\n    default: 127.5\n  },\n  thresholdB: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 255],\n    step: 0.5,\n    default: 127.5\n  },\n  thresholdA: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 255],\n    step: 0.5,\n    default: 0\n  },\n  palette: {\n    type: controlTypes["e" /* PALETTE */],\n    default: palettes["a" /* nearest */]\n  }\n};\nconst binarize_defaults = {\n  thresholdR: binarize_optionTypes.thresholdR.default,\n  thresholdG: binarize_optionTypes.thresholdG.default,\n  thresholdB: binarize_optionTypes.thresholdB.default,\n  thresholdA: binarize_optionTypes.thresholdA.default,\n  palette: binarize_optionTypes.palette.default\n};\n\nconst binarize_binarize = (input, options = binarize_defaults) => {\n  const getColor = (val, threshold) => val > threshold ? 255 : 0;\n\n  const {\n    thresholdR,\n    thresholdG,\n    thresholdB,\n    thresholdA,\n    palette\n  } = options;\n  const output = Object(utils["d" /* cloneCanvas */])(input, false);\n  const inputCtx = input.getContext("2d");\n  const outputCtx = output.getContext("2d");\n\n  if (!inputCtx || !outputCtx) {\n    return input;\n  }\n\n  const buf = inputCtx.getImageData(0, 0, input.width, input.height).data;\n\n  for (let x = 0; x < input.width; x += 1) {\n    for (let y = 0; y < input.height; y += 1) {\n      const i = Object(utils["i" /* getBufferIndex */])(x, y, input.width);\n      const prePaletteCol = Object(utils["m" /* rgba */])(getColor(buf[i], thresholdR), getColor(buf[i + 1], thresholdG), getColor(buf[i + 2], thresholdB), getColor(buf[i + 3], thresholdA));\n      const col = palette.getColor(prePaletteCol, palette.options);\n      Object(utils["g" /* fillBufferPixel */])(buf, i, col[0], col[1], col[2], col[3]);\n    }\n  }\n\n  outputCtx.putImageData(new ImageData(buf, output.width, output.height), 0, 0);\n  return output;\n};\n\n/* harmony default export */ var filters_binarize = ({\n  name: "Binarize",\n  func: binarize_binarize,\n  optionTypes: binarize_optionTypes,\n  options: binarize_defaults,\n  defaults: binarize_defaults\n});\n// CONCATENATED MODULE: ./filters/channelSeparation.js\nfunction channelSeparation_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === \'function\') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { channelSeparation_defineProperty(target, key, source[key]); }); } return target; }\n\nfunction channelSeparation_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nconst channelSeparation_optionTypes = {\n  rOffsetX: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 100],\n    default: 10\n  },\n  rOffsetY: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 100],\n    default: 0\n  },\n  rOpacity: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 1],\n    step: 0.05,\n    default: 1\n  },\n  gOffsetX: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 100],\n    default: 0\n  },\n  gOffsetY: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 100],\n    default: 5\n  },\n  gOpacity: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 1],\n    step: 0.05,\n    default: 1\n  },\n  bOffsetX: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 100],\n    default: 8\n  },\n  bOffsetY: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 100],\n    default: 4\n  },\n  bOpacity: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 1],\n    step: 0.05,\n    default: 1\n  },\n  aOffsetX: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 100],\n    default: 0\n  },\n  aOffsetY: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 100],\n    default: 0\n  },\n  aOpacity: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 1],\n    step: 0.05,\n    default: 1\n  },\n  palette: {\n    type: controlTypes["e" /* PALETTE */],\n    default: palettes["a" /* nearest */]\n  }\n};\nconst channelSeparation_defaults = {\n  rOffsetX: channelSeparation_optionTypes.rOffsetX.default,\n  rOffsetY: channelSeparation_optionTypes.rOffsetY.default,\n  rOpacity: channelSeparation_optionTypes.rOpacity.default,\n  gOffsetX: channelSeparation_optionTypes.gOffsetX.default,\n  gOffsetY: channelSeparation_optionTypes.gOffsetY.default,\n  gOpacity: channelSeparation_optionTypes.gOpacity.default,\n  bOffsetX: channelSeparation_optionTypes.bOffsetX.default,\n  bOffsetY: channelSeparation_optionTypes.bOffsetY.default,\n  bOpacity: channelSeparation_optionTypes.bOpacity.default,\n  aOffsetX: channelSeparation_optionTypes.aOffsetX.default,\n  aOffsetY: channelSeparation_optionTypes.aOffsetY.default,\n  aOpacity: channelSeparation_optionTypes.aOpacity.default,\n  palette: channelSeparation_objectSpread({}, channelSeparation_optionTypes.palette.default, {\n    options: {\n      levels: 256\n    }\n  })\n};\n\nconst channelSeparation_channelSeparation = (input, options = channelSeparation_defaults) => {\n  const {\n    rOffsetX,\n    rOffsetY,\n    rOpacity,\n    gOffsetX,\n    gOffsetY,\n    gOpacity,\n    bOffsetX,\n    bOffsetY,\n    bOpacity,\n    aOffsetX,\n    aOffsetY,\n    aOpacity,\n    palette\n  } = options;\n  const output = Object(utils["d" /* cloneCanvas */])(input, false);\n  const inputCtx = input.getContext("2d");\n  const outputCtx = output.getContext("2d");\n\n  if (!inputCtx || !outputCtx) {\n    return input;\n  }\n\n  const buf = inputCtx.getImageData(0, 0, input.width, input.height).data;\n\n  for (let x = 0; x < input.width; x += 1) {\n    for (let y = 0; y < input.height; y += 1) {\n      const i = Object(utils["i" /* getBufferIndex */])(x, y, input.width);\n      const rX = rOffsetX + x;\n      const rY = rOffsetY + y;\n      const rI = Object(utils["i" /* getBufferIndex */])(rX, rY, input.width);\n      const gX = gOffsetX + x;\n      const gY = gOffsetY + y;\n      const gI = Object(utils["i" /* getBufferIndex */])(gX, gY, input.width);\n      const bX = bOffsetX + x;\n      const bY = bOffsetY + y;\n      const bI = Object(utils["i" /* getBufferIndex */])(bX, bY, input.width);\n      const aX = aOffsetX + x;\n      const aY = aOffsetY + y;\n      const aI = Object(utils["i" /* getBufferIndex */])(aX, aY, input.width);\n      const pixel = Object(utils["m" /* rgba */])(buf[rI], buf[gI + 1], buf[bI + 2], buf[aI + 3]);\n      const color = palette.getColor(pixel, palette.options);\n      Object(utils["g" /* fillBufferPixel */])(buf, i, color[0] * rOpacity, color[1] * gOpacity, color[2] * bOpacity, color[3] * aOpacity);\n    }\n  }\n\n  outputCtx.putImageData(new ImageData(buf, output.width, output.height), 0, 0);\n  return output;\n};\n\n/* harmony default export */ var filters_channelSeparation = ({\n  name: "Channel separation",\n  func: channelSeparation_channelSeparation,\n  options: channelSeparation_defaults,\n  optionTypes: channelSeparation_optionTypes,\n  defaults: channelSeparation_defaults\n});\n// CONCATENATED MODULE: ./filters/jitter.js\nfunction jitter_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === \'function\') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { jitter_defineProperty(target, key, source[key]); }); } return target; }\n\nfunction jitter_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nconst jitter_optionTypes = {\n  jitterX: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 100],\n    default: 4\n  },\n  jitterXSpread: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 5],\n    default: 0.5,\n    step: 0.1\n  },\n  jitterY: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 100],\n    default: 0\n  },\n  jitterYSpread: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 5],\n    default: 0.5,\n    step: 0.1\n  },\n  palette: {\n    type: controlTypes["e" /* PALETTE */],\n    default: palettes["a" /* nearest */]\n  }\n};\nconst jitter_defaults = {\n  jitterX: jitter_optionTypes.jitterX.default,\n  jitterXSpread: jitter_optionTypes.jitterXSpread.default,\n  jitterY: jitter_optionTypes.jitterY.default,\n  jitterYSpread: jitter_optionTypes.jitterYSpread.default,\n  palette: jitter_objectSpread({}, jitter_optionTypes.palette.default, {\n    options: {\n      levels: 256\n    }\n  })\n};\n\nconst jitter_jittter = (input, options = jitter_defaults) => {\n  const {\n    jitterX,\n    jitterXSpread,\n    jitterY,\n    jitterYSpread,\n    palette\n  } = options;\n  const output = Object(utils["d" /* cloneCanvas */])(input, false);\n  const inputCtx = input.getContext("2d");\n  const outputCtx = output.getContext("2d");\n\n  if (!inputCtx || !outputCtx) {\n    return input;\n  }\n\n  const buf = inputCtx.getImageData(0, 0, input.width, input.height).data;\n  const jitterYMap = [];\n  const jitterXMap = [];\n  let jitterFactor = 0;\n\n  for (let i = 0; i < input.width; i += 1) {\n    const jitter = Math.random() * jitterY;\n    jitterFactor += jitter;\n    jitterYMap.push(Math.round(jitterFactor));\n    jitterFactor *= jitterYSpread;\n  }\n\n  jitterFactor = 0;\n\n  for (let i = 0; i < input.width; i += 1) {\n    const jitter = Math.random() * jitterX;\n    jitterFactor += jitter;\n    jitterXMap.push(Math.round(jitterFactor));\n    jitterFactor *= jitterXSpread;\n  }\n\n  for (let x = 0; x < input.width; x += 1) {\n    for (let y = 0; y < input.height; y += 1) {\n      const i = Object(utils["i" /* getBufferIndex */])(x, y, input.width);\n      const jI = Object(utils["i" /* getBufferIndex */])((x + jitterYMap[x]) % input.width, (y + jitterXMap[y]) % input.height, input.width);\n      const pixel = Object(utils["m" /* rgba */])(buf[jI], buf[jI + 1], buf[jI + 2], buf[jI + 3]);\n      const color = palette.getColor(pixel, palette.options);\n      Object(utils["g" /* fillBufferPixel */])(buf, i, color[0], color[1], color[2], color[3]);\n    }\n  }\n\n  outputCtx.putImageData(new ImageData(buf, output.width, output.height), 0, 0);\n  return output;\n};\n\n/* harmony default export */ var jitter = ({\n  name: "Jitter",\n  func: jitter_jittter,\n  options: jitter_defaults,\n  optionTypes: jitter_optionTypes,\n  defaults: jitter_defaults\n});\n// CONCATENATED MODULE: ./filters/convolve.js\n\n\nconst convolve_SHARPEN_3X3 = "SHARPEN_3X3";\nconst convolve_UNSHARP_5X5 = "UNSHARP_5X5";\nconst convolve_GAUSSIAN_3X3 = "GAUSSIAN_3X3";\nconst convolve_GAUSSIAN_3X3_WEAK = "GAUSSIAN_3X3_WEAK";\nconst convolve_GAUSSIAN_5X5 = "GAUSSIAN_5X5";\nconst convolve_EMBOSS_3X3 = "EMBOSS_3X3";\nconst convolve_LAPLACIAN_3X3 = "LAPLACIAN_3X3";\nconst convolve_LAPLACIAN_5X5 = "LAPLACIAN_5X5";\nconst convolve_BRIGHTEN_0_5X = "BRIGHTEN_0_5X";\nconst convolve_BRIGHTEN_2X = "BRIGHTEN_2X";\nconst convolve_SOBEL_HORIZONTAL = "SOBEL_HORIZONTAL";\nconst convolve_SOBEL_VERTICAL = "SOBEL_VERTICAL";\nconst convolve_OUTLINE_3X3 = "OUTLINE_3X3";\n// https://en.wikipedia.org/wiki/Kernel_(image_processing)\nconst convolve_kernels = {\n  [convolve_SHARPEN_3X3]: {\n    width: 3,\n    matrix: [[0, -1, 0], [-1, 5, -1], [0, -1, 0]]\n  },\n  [convolve_UNSHARP_5X5]: {\n    width: 5,\n    matrix: Object(utils["q" /* scaleMatrix */])([[1, 4, 6, 4, 1], [4, 16, 24, 16, 4], [6, 24, -476, 24, 6], [4, 16, 24, 16, 4], [1, 4, 6, 4, 1]], -1 / 256)\n  },\n  [convolve_GAUSSIAN_3X3]: {\n    width: 3,\n    matrix: Object(utils["q" /* scaleMatrix */])([[1, 2, 1], [2, 4, 2], [1, 2, 1]], 1 / 16)\n  },\n  [convolve_GAUSSIAN_3X3_WEAK]: {\n    width: 3,\n    matrix: Object(utils["q" /* scaleMatrix */])([[0.5, 1, 0.5], [1, 10, 1], [0.5, 1, 0.5]], 1 / 16)\n  },\n  [convolve_GAUSSIAN_5X5]: {\n    width: 5,\n    matrix: Object(utils["q" /* scaleMatrix */])([[1, 4, 6, 4, 1], [4, 16, 24, 16, 4], [6, 24, 36, 24, 6], [4, 16, 24, 16, 4], [1, 4, 6, 4, 1]], 1 / 256)\n  },\n  [convolve_BRIGHTEN_2X]: {\n    width: 1,\n    matrix: [[2]]\n  },\n  [convolve_BRIGHTEN_0_5X]: {\n    width: 1,\n    matrix: [[0.5]]\n  },\n  [convolve_EMBOSS_3X3]: {\n    width: 3,\n    matrix: [[-2, -1, 0], [-1, 1, 1], [0, 1, 2]]\n  },\n  [convolve_LAPLACIAN_3X3]: {\n    width: 3,\n    matrix: [[1, 1, 1], [1, -8, 1], [1, 1, 1]]\n  },\n  [convolve_LAPLACIAN_5X5]: {\n    width: 5,\n    matrix: [[1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [1, 1, -24, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1]]\n  },\n  [convolve_SOBEL_HORIZONTAL]: {\n    width: 3,\n    matrix: [[-1, -2, -1], [0, 0, 0], [1, 2, 1]]\n  },\n  [convolve_SOBEL_VERTICAL]: {\n    width: 3,\n    matrix: [[-1, 0, 1], [-2, 0, 2], [-1, 0, 1]]\n  },\n  [convolve_OUTLINE_3X3]: {\n    width: 3,\n    matrix: [[-1, -1, -1], [-1, 8, -1], [-1, -1, -1]]\n  }\n};\nconst convolve_optionTypes = {\n  kernel: {\n    type: controlTypes["d" /* ENUM */],\n    options: [{\n      name: "Sharpen",\n      value: convolve_SHARPEN_3X3\n    }, {\n      name: "Unsharp mask 5×5",\n      value: convolve_UNSHARP_5X5\n    }, {\n      name: "Brighten 0.5x",\n      value: convolve_BRIGHTEN_0_5X\n    }, {\n      name: "Brighten 2x",\n      value: convolve_BRIGHTEN_2X\n    }, {\n      name: "Edge detection (Laplacian 3×3)",\n      value: convolve_LAPLACIAN_3X3\n    }, {\n      name: "Edge detection (Laplacian 5×5)",\n      value: convolve_LAPLACIAN_5X5\n    }, {\n      name: "Sobel (horizontal)",\n      value: convolve_SOBEL_HORIZONTAL\n    }, {\n      name: "Sobel (vertical)",\n      value: convolve_SOBEL_VERTICAL\n    }, {\n      name: "Gaussian blur 3×3",\n      value: convolve_GAUSSIAN_3X3\n    }, {\n      name: "Gaussian blur 3×3 (weak)",\n      value: convolve_GAUSSIAN_3X3_WEAK\n    }, {\n      name: "Gaussian blur 5×5",\n      value: convolve_GAUSSIAN_5X5\n    }, {\n      name: "Emboss 3×3",\n      value: convolve_EMBOSS_3X3\n    }, {\n      name: "Outline",\n      value: convolve_OUTLINE_3X3\n    }],\n    default: convolve_GAUSSIAN_3X3\n  },\n  strength: {\n    type: controlTypes["f" /* RANGE */],\n    range: [-10, 10],\n    step: 0.1,\n    default: 1\n  }\n};\nconst convolve_defaults = {\n  kernel: convolve_optionTypes.kernel.default,\n  strength: convolve_optionTypes.strength.default\n};\n\nconst convolve_convolve = (input, options = convolve_defaults) => {\n  const kernel = convolve_kernels[options.kernel];\n  const matrix = Object(utils["q" /* scaleMatrix */])(kernel.matrix, options.strength);\n  const output = Object(utils["d" /* cloneCanvas */])(input, false);\n  const inputCtx = input.getContext("2d");\n  const outputCtx = output.getContext("2d");\n\n  if (!inputCtx || !outputCtx) {\n    return input;\n  }\n\n  const buf = inputCtx.getImageData(0, 0, input.width, input.height).data;\n  const outputArray = Array.from(buf);\n\n  for (let x = 0; x < input.width; x += 1) {\n    for (let y = 0; y < input.height; y += 1) {\n      let color = Object(utils["m" /* rgba */])(0, 0, 0, 0);\n\n      for (let kx = 0; kx < kernel.width; kx += 1) {\n        for (let ky = 0; ky < kernel.width; ky += 1) {\n          const offset = Math.floor(kernel.width / 2);\n          const ki = Object(utils["i" /* getBufferIndex */])(Math.max(0, x + kx - offset), Math.max(0, y + ky - offset), input.width);\n          const kpx = Object(utils["m" /* rgba */])(buf[ki] || 0, buf[ki + 1] || 0, buf[ki + 2] || 0, buf[ki + 3] || 0);\n          const kfactor = matrix[ky][kx];\n          color = Object(utils["a" /* add */])(color, Object(utils["p" /* scale */])(kpx, kfactor || 0));\n        }\n      }\n\n      const i = Object(utils["i" /* getBufferIndex */])(x, y, input.width);\n      Object(utils["g" /* fillBufferPixel */])(outputArray, i, color[0], color[1], color[2], buf[i + 3]);\n    }\n  }\n\n  const outputBuf = new Uint8ClampedArray(outputArray);\n  outputCtx.putImageData(new ImageData(outputBuf, output.width, output.height), 0, 0);\n  return output;\n};\n\n/* harmony default export */ var filters_convolve = ({\n  name: "Convolve",\n  func: convolve_convolve,\n  options: convolve_defaults,\n  optionTypes: convolve_optionTypes,\n  defaults: convolve_defaults\n});\n// CONCATENATED MODULE: ./filters/brightnessContrast.js\n\n\n\nconst brightnessContrast_optionTypes = {\n  brightness: {\n    type: controlTypes["f" /* RANGE */],\n    range: [-255, 255],\n    step: 1,\n    default: 0\n  },\n  contrast: {\n    type: controlTypes["f" /* RANGE */],\n    range: [-40, 40],\n    step: 0.1,\n    default: 0\n  },\n  exposure: {\n    type: controlTypes["f" /* RANGE */],\n    range: [-4, 4],\n    step: 0.1,\n    default: 1\n  },\n  gamma: {\n    type: controlTypes["f" /* RANGE */],\n    range: [-1.5, 7.5],\n    step: 0.1,\n    default: 1\n  },\n  palette: {\n    type: controlTypes["e" /* PALETTE */],\n    default: palettes["a" /* nearest */]\n  }\n};\nconst brightnessContrast_defaults = {\n  brightness: brightnessContrast_optionTypes.brightness.default,\n  contrast: brightnessContrast_optionTypes.contrast.default,\n  exposure: brightnessContrast_optionTypes.exposure.default,\n  gamma: brightnessContrast_optionTypes.gamma.default,\n  palette: brightnessContrast_optionTypes.palette.default\n};\n\nconst brightnessContrast_brightnessContrast = (input, options = brightnessContrast_defaults) => {\n  const {\n    brightness,\n    contrast,\n    exposure,\n    gamma,\n    palette\n  } = options;\n  const output = Object(utils["d" /* cloneCanvas */])(input, false);\n  const inputCtx = input.getContext("2d");\n  const outputCtx = output.getContext("2d");\n\n  if (!inputCtx || !outputCtx) {\n    return input;\n  }\n\n  const buf = inputCtx.getImageData(0, 0, input.width, input.height).data;\n  const outputBuf = new Uint8ClampedArray(buf);\n\n  for (let x = 0; x < input.width; x += 1) {\n    for (let y = 0; y < input.height; y += 1) {\n      const i = Object(utils["i" /* getBufferIndex */])(x, y, input.width);\n      const newColor = Object(utils["h" /* gamma */])(Object(utils["f" /* contrast */])(Object(utils["c" /* brightness */])(Object(utils["m" /* rgba */])(buf[i], buf[i + 1], buf[i + 2], buf[i + 3]), brightness, exposure), contrast), gamma);\n      const col = palette.getColor(newColor, palette.options);\n      Object(utils["g" /* fillBufferPixel */])(outputBuf, i, col[0], col[1], col[2], col[3]);\n    }\n  }\n\n  outputCtx.putImageData(new ImageData(outputBuf, output.width, output.height), 0, 0);\n  return output;\n};\n\n/* harmony default export */ var filters_brightnessContrast = ({\n  name: "Brightness/Contrast",\n  func: brightnessContrast_brightnessContrast,\n  optionTypes: brightnessContrast_optionTypes,\n  options: brightnessContrast_defaults,\n  defaults: brightnessContrast_defaults\n});\n// CONCATENATED MODULE: ./filters/vhs.js\nfunction vhs_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === \'function\') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { vhs_defineProperty(target, key, source[key]); }); } return target; }\n\nfunction vhs_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\nconst vhs_optionTypes = {\n  jitterX: jitter_optionTypes.jitterX,\n  jitterXSpread: jitter_optionTypes.jitterXSpread\n};\nconst vhs_defaults = {\n  jitterX: 1,\n  jitterXSpread: jitter_defaults.jitterXSpread\n};\n\nconst vhs_vhs = (input, options = vhs_defaults) => {\n  const {\n    jitterX,\n    jitterXSpread\n  } = options;\n  let output = Object(utils["d" /* cloneCanvas */])(input, false);\n  const inputCtx = input.getContext("2d");\n  const outputCtx = output.getContext("2d");\n\n  if (!inputCtx || !outputCtx) {\n    return input;\n  }\n\n  output = jitter.func(input, vhs_objectSpread({}, jitter_defaults, {\n    jitterX,\n    jitterXSpread\n  }));\n  output = filters_brightnessContrast.func(output, vhs_objectSpread({}, brightnessContrast_defaults, {\n    brightness: 60,\n    contrast: -0.2,\n    exposure: 0.7,\n    gamma: 0.6,\n    palette: vhs_objectSpread({}, palettes["a" /* nearest */], {\n      options: {\n        levels: 255\n      }\n    })\n  }));\n  output = filters_channelSeparation.func(output, vhs_objectSpread({}, channelSeparation_defaults, {\n    rOffsetX: 2,\n    rOffsetY: 2,\n    gOffsetX: 2,\n    gOffsetY: 1,\n    bOffsetX: 2,\n    bOffsetY: 1\n  }));\n  output = filters_convolve.func(output, vhs_objectSpread({}, convolve_defaults, {\n    kernel: convolve_GAUSSIAN_3X3_WEAK\n  }));\n  return output;\n};\n\n/* harmony default export */ var filters_vhs = ({\n  name: "VHS emulation",\n  func: vhs_vhs,\n  options: vhs_defaults,\n  optionTypes: vhs_optionTypes,\n  defaults: vhs_defaults\n});\n// EXTERNAL MODULE: ./filters/program.js\nvar program = __webpack_require__(19);\n\n// CONCATENATED MODULE: ./filters/grayscale.js\n\nconst grayscale_optionTypes = {};\nconst grayscale_defaults = {};\n\nconst grayscale_grayscale = input => {\n  const output = Object(utils["d" /* cloneCanvas */])(input, false);\n  const inputCtx = input.getContext("2d");\n  const outputCtx = output.getContext("2d");\n  if (!inputCtx || !outputCtx) return input;\n  const buf = inputCtx.getImageData(0, 0, input.width, input.height).data;\n\n  for (let x = 0; x < input.width; x += 1) {\n    for (let y = 0; y < input.height; y += 1) {\n      const i = Object(utils["i" /* getBufferIndex */])(x, y, input.width);\n      const grey = Math.round((buf[i] + buf[i + 1] + buf[i + 2]) / 3);\n      Object(utils["g" /* fillBufferPixel */])(buf, i, grey, grey, grey, buf[i + 3]);\n    }\n  }\n\n  outputCtx.putImageData(new ImageData(buf, output.width, output.height), 0, 0);\n  return output;\n};\n\n/* harmony default export */ var filters_grayscale = ({\n  name: "Grayscale",\n  func: grayscale_grayscale,\n  options: grayscale_defaults,\n  optionTypes: grayscale_optionTypes,\n  defaults: grayscale_defaults\n});\n// CONCATENATED MODULE: ./filters/pixelate.js\nfunction pixelate_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === \'function\') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { pixelate_defineProperty(target, key, source[key]); }); } return target; }\n\nfunction pixelate_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nconst pixelate_optionTypes = {\n  scale: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0.01, 1],\n    step: 0.01,\n    default: 0.25\n  },\n  scaleXOverride: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 1],\n    step: 0.01,\n    default: 0\n  },\n  scaleYOverride: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 1],\n    step: 0.01,\n    default: 0\n  },\n  palette: {\n    type: controlTypes["e" /* PALETTE */],\n    default: palettes["a" /* nearest */]\n  }\n};\nconst pixelate_defaults = {\n  scale: pixelate_optionTypes.scale.default,\n  scaleXOverride: pixelate_optionTypes.scaleXOverride.default,\n  scaleYOverride: pixelate_optionTypes.scaleYOverride.default,\n  palette: pixelate_objectSpread({}, pixelate_optionTypes.palette.default, {\n    options: {\n      levels: 256\n    }\n  })\n};\n\nconst pixelate_pixelate = (input, options) => {\n  const {\n    scale,\n    scaleXOverride,\n    scaleYOverride,\n    palette\n  } = options;\n  const output = Object(utils["d" /* cloneCanvas */])(input, false);\n  const inputCtx = input.getContext("2d");\n  const outputCtx = output.getContext("2d");\n  if (!inputCtx || !outputCtx) return input;\n  const temp = document.createElement("canvas");\n  temp.width = input.width * (scaleXOverride || scale);\n  temp.height = input.height * (scaleYOverride || scale);\n  const tempCtx = temp.getContext("2d");\n  tempCtx.imageSmoothingEnabled = false;\n  tempCtx.drawImage(input, 0, 0, input.width * (scaleXOverride || scale), input.height * (scaleYOverride || scale));\n  const buf = tempCtx.getImageData(0, 0, temp.width, temp.height).data;\n\n  for (let x = 0; x < temp.width; x += 1) {\n    for (let y = 0; y < temp.height; y += 1) {\n      const i = Object(utils["i" /* getBufferIndex */])(x, y, temp.width);\n      const pixel = Object(utils["m" /* rgba */])(buf[i], buf[i + 1], buf[i + 2], buf[i + 3]);\n      const color = palette.getColor(pixel, palette.options);\n      Object(utils["g" /* fillBufferPixel */])(buf, i, color[0], color[1], color[2], buf[i + 3]);\n    }\n  }\n\n  tempCtx.putImageData(new ImageData(buf, temp.width, temp.height), 0, 0);\n  outputCtx.imageSmoothingEnabled = false;\n  outputCtx.drawImage(temp, 0, 0, input.width, input.height);\n  return output;\n};\n\n/* harmony default export */ var filters_pixelate = ({\n  name: "Pixelate",\n  func: pixelate_pixelate,\n  options: pixelate_defaults,\n  optionTypes: pixelate_optionTypes,\n  defaults: pixelate_defaults\n});\n// CONCATENATED MODULE: ./filters/pixelsort.js\n\n\n\nconst pixelsort_DIRECTION = {\n  COLUMN: "COLUMN",\n  ROW: "ROW",\n  SPIRAL: "SPIRAL",\n  SPIRAL_CUT: "SPIRAL_CUT",\n  DIAGONAL_TOP_RIGHT: "DIAGONAL_TOP_RIGHT"\n};\nconst pixelsort_SORT_DIRECTION = {\n  ASCENDING: "ASCENDING",\n  DESCENDING: "DESCENDING"\n};\nconst pixelsort_COMPARATOR = {\n  LUMINANCE: "LUMINANCE",\n  RGBA: "RGBA",\n  GBRA: "GBRA",\n  BGRA: "BGRA",\n  HSVA: "HSVA",\n  VSHA: "VSHA",\n  SVHA: "SVHA",\n  LABA: "LABA",\n  ABLA: "ABLA",\n  BALA: "BALA"\n};\n\nconst pixelsort_compareQuadlet = (a, b, dir) => {\n  const dirMul = dir === pixelsort_SORT_DIRECTION.ASCENDING ? 1 : -1;\n  const rd = (a[0] - b[0]) * dirMul;\n\n  if (rd !== 0) {\n    return rd;\n  }\n\n  const gd = (a[1] - b[1]) * dirMul;\n\n  if (gd !== 0) {\n    return gd;\n  }\n\n  const bd = (a[2] - b[2]) * dirMul;\n\n  if (bd !== 0) {\n    return bd;\n  }\n\n  const ad = (a[3] - b[3]) * dirMul;\n  return ad;\n};\n\nconst pixelsort_SORTS = {\n  [pixelsort_COMPARATOR.RGBA]: pixelsort_compareQuadlet,\n  [pixelsort_COMPARATOR.GBRA]: (a, b, dir) => {\n    const ap = [a[1], a[2], a[0], a[3]];\n    const bp = [b[1], b[2], b[0], b[3]];\n    return pixelsort_compareQuadlet(ap, bp, dir);\n  },\n  [pixelsort_COMPARATOR.BGRA]: (a, b, dir) => {\n    const ap = [a[2], a[1], a[0], a[3]];\n    const bp = [b[2], b[1], b[0], b[3]];\n    return pixelsort_compareQuadlet(ap, bp, dir);\n  },\n  [pixelsort_COMPARATOR.HSVA]: (aRgba, bRgba, dir) => {\n    const a = Object(utils["n" /* rgba2hsva */])(aRgba);\n    const b = Object(utils["n" /* rgba2hsva */])(bRgba);\n    return pixelsort_compareQuadlet(a, b, dir);\n  },\n  [pixelsort_COMPARATOR.HSVA]: (aRgba, bRgba, dir) => {\n    const a = Object(utils["n" /* rgba2hsva */])(aRgba);\n    const b = Object(utils["n" /* rgba2hsva */])(bRgba);\n    return pixelsort_compareQuadlet(a, b, dir);\n  },\n  [pixelsort_COMPARATOR.SVHA]: (aRgba, bRgba, dir) => {\n    const a = Object(utils["n" /* rgba2hsva */])(aRgba);\n    const b = Object(utils["n" /* rgba2hsva */])(bRgba);\n    const ap = [a[1], a[2], a[0], a[3]];\n    const bp = [b[1], b[2], b[0], b[3]];\n    return pixelsort_compareQuadlet(ap, bp, dir);\n  },\n  [pixelsort_COMPARATOR.VSHA]: (aRgba, bRgba, dir) => {\n    const a = Object(utils["n" /* rgba2hsva */])(aRgba);\n    const b = Object(utils["n" /* rgba2hsva */])(bRgba);\n    const ap = [a[2], a[1], a[0], a[3]];\n    const bp = [b[2], b[1], b[0], b[3]];\n    return pixelsort_compareQuadlet(ap, bp, dir);\n  },\n  [pixelsort_COMPARATOR.LABA]: (aRgba, bRgba, dir) => {\n    const a = Object(utils["o" /* rgba2laba */])(aRgba);\n    const b = Object(utils["o" /* rgba2laba */])(bRgba);\n    return pixelsort_compareQuadlet(a, b, dir);\n  },\n  [pixelsort_COMPARATOR.ABLA]: (aRgba, bRgba, dir) => {\n    const a = Object(utils["o" /* rgba2laba */])(aRgba);\n    const b = Object(utils["o" /* rgba2laba */])(bRgba);\n    const ap = [a[1], a[2], a[0], a[3]];\n    const bp = [b[1], b[2], b[0], b[3]];\n    return pixelsort_compareQuadlet(ap, bp, dir);\n  },\n  [pixelsort_COMPARATOR.BALA]: (aRgba, bRgba, dir) => {\n    const a = Object(utils["o" /* rgba2laba */])(aRgba);\n    const b = Object(utils["o" /* rgba2laba */])(bRgba);\n    const ap = [a[2], a[1], a[0], a[3]];\n    const bp = [b[2], b[1], b[0], b[3]];\n    return pixelsort_compareQuadlet(ap, bp, dir);\n  },\n  [pixelsort_COMPARATOR.LUMINANCE]: (a, b, dir) => {\n    const dirMul = dir === pixelsort_SORT_DIRECTION.ASCENDING ? 1 : -1;\n    const lumA = Object(utils["j" /* luminance */])(a);\n    const lumB = Object(utils["j" /* luminance */])(b);\n    return (lumA - lumB) * dirMul;\n  }\n};\n\nconst pixelsort_spiralIterator = endIntervalOnTurn => init => {\n  let {\n    x,\n    y,\n    i\n  } = init;\n  const {\n    w,\n    h\n  } = init;\n  x += Math.floor(w / 2);\n  y += Math.floor(h / 2);\n  i = Object(utils["i" /* getBufferIndex */])(x, y, w);\n  let end = false;\n  let endInterval = false;\n  const DIR = {\n    N: "N",\n    S: "S",\n    E: "E",\n    W: "W"\n  };\n  let dir = DIR.S;\n  const lengths = {\n    [DIR.N]: {\n      cur: 0,\n      max: 2\n    },\n    [DIR.S]: {\n      cur: 0,\n      max: 1\n    },\n    [DIR.E]: {\n      cur: 0,\n      max: 1\n    },\n    [DIR.W]: {\n      cur: 0,\n      max: 2\n    }\n  };\n  return () => {\n    // debugger;\n    if (end) {\n      return null;\n    }\n\n    const nextResult = {\n      x,\n      y,\n      i,\n      w,\n      h,\n      wrapX: false,\n      wrapY: false,\n      endInterval\n    }; // Allow fallthrough logic!\n\n    switch (dir) {\n      case DIR.N:\n        if (lengths[dir].cur >= lengths[dir].max || y === 0 && x > 0) {\n          lengths[dir].cur = 0;\n          lengths[dir].max += 2;\n          dir = DIR.W;\n          endInterval = endIntervalOnTurn;\n        } else {\n          lengths[dir].cur += 1;\n          y -= 1;\n          endInterval = false;\n          break;\n        }\n\n      case DIR.W:\n        // eslint-disable-line no-fallthrough\n        if (lengths[dir].cur >= lengths[dir].max || x === 0 && y < h) {\n          lengths[dir].cur = 0;\n          lengths[dir].max += 2;\n          dir = DIR.S;\n          endInterval = endIntervalOnTurn;\n        } else {\n          lengths[dir].cur += 1;\n          x -= 1;\n          endInterval = false;\n          break;\n        }\n\n      case DIR.S:\n        // eslint-disable-line no-fallthrough\n        if (lengths[dir].cur >= lengths[dir].max || y === h - 1 && x < h) {\n          lengths[dir].cur = 0;\n          lengths[dir].max += 2;\n          dir = DIR.E;\n          endInterval = endIntervalOnTurn;\n        } else {\n          lengths[dir].cur += 1;\n          y += 1;\n          endInterval = false;\n          break;\n        }\n\n      case DIR.E:\n        // eslint-disable-line no-fallthrough\n        if (lengths[dir].cur >= lengths[dir].max || x === w - 1 && y > 0) {\n          lengths[dir].cur = 0;\n          lengths[dir].max += 2;\n          dir = DIR.N;\n          endInterval = endIntervalOnTurn;\n          break;\n        } else {\n          lengths[dir].cur += 1;\n          x += 1;\n          endInterval = false;\n          break;\n        }\n\n      default:\n        // last pixel\n        end = true;\n        break;\n    }\n\n    i = Object(utils["i" /* getBufferIndex */])(x, y, w);\n    end = end || i >= w * h * 4; // or oob, somehow\n    // FIXME: Shouldn\'t end at (0, 0) but at correct corner\n\n    if (x === 0 && y === 0) {\n      return null;\n    }\n\n    return nextResult;\n  };\n}; // Returns buffer indices\n\n\nconst pixelsort_ITERATORS = {\n  [pixelsort_DIRECTION.ROW]: init => {\n    let {\n      x,\n      y,\n      i\n    } = init;\n    const {\n      w,\n      h\n    } = init;\n    let end = false;\n    return () => {\n      if (end) {\n        return null;\n      }\n\n      const wrapX = x === w;\n      const endInterval = wrapX; // Terminate intervals at end\n\n      const nextResult = {\n        x,\n        y,\n        i,\n        w,\n        h,\n        wrapX,\n        wrapY: false,\n        endInterval\n      };\n      i = Object(utils["i" /* getBufferIndex */])(x, y, w) + 4;\n      end = i >= w * h * 4;\n      x = x === w ? 0 : x + 1;\n      y = x === w ? y + 1 : y;\n      end = y >= h;\n      return nextResult;\n    };\n  },\n  [pixelsort_DIRECTION.COLUMN]: init => {\n    let {\n      x,\n      y,\n      i\n    } = init;\n    const {\n      w,\n      h\n    } = init;\n    let end = false;\n    return () => {\n      if (end) {\n        return null;\n      }\n\n      const wrapY = y === h;\n      const endInterval = wrapY; // Terminate intervals at end\n\n      const nextResult = {\n        x,\n        y,\n        i,\n        w,\n        h,\n        wrapX: false,\n        wrapY,\n        endInterval\n      };\n      i = Object(utils["i" /* getBufferIndex */])(x, y, w) + 4;\n      end = i >= w * h * 4;\n      x = y === h ? x + 1 : x;\n      y = y === h ? 0 : y + 1;\n      end = x >= w;\n      return nextResult;\n    };\n  },\n  [pixelsort_DIRECTION.SPIRAL_CUT]: pixelsort_spiralIterator(true),\n  [pixelsort_DIRECTION.SPIRAL]: pixelsort_spiralIterator(false),\n  [pixelsort_DIRECTION.DIAGONAL_TOP_RIGHT]: init => {\n    let {\n      x,\n      y,\n      i\n    } = init;\n    const {\n      w,\n      h\n    } = init;\n    let end = false;\n    let startX = x;\n    let startY = y;\n    return () => {\n      if (end) {\n        return null;\n      }\n\n      const wrapY = y === 0;\n      const wrapX = x === w - 1;\n      const endInterval = wrapY || wrapX;\n      const nextResult = {\n        x,\n        y,\n        i,\n        w,\n        h,\n        wrapX,\n        wrapY,\n        endInterval\n      };\n\n      if (x === w - 1 || y === 0) {\n        if (startY >= h - 1) {\n          startX += 1;\n          x = startX;\n          y = h - 1;\n        } else {\n          startY += 1;\n          y = startY;\n          x = 0;\n        }\n      } else {\n        x += 1;\n        y -= 1;\n      }\n\n      i = Object(utils["i" /* getBufferIndex */])(x, y, w);\n      end = x === w - 1 && y === h - 1;\n      return nextResult;\n    };\n  }\n};\nconst pixelsort_optionTypes = {\n  direction: {\n    type: controlTypes["d" /* ENUM */],\n    options: [{\n      name: "Row",\n      value: pixelsort_DIRECTION.ROW\n    }, {\n      name: "Column",\n      value: pixelsort_DIRECTION.COLUMN\n    }, {\n      name: "Spiral",\n      value: pixelsort_DIRECTION.SPIRAL\n    }, {\n      name: "Spiral (non-continuous)",\n      value: pixelsort_DIRECTION.SPIRAL_CUT\n    }, {\n      name: "Diagonal (top-right)",\n      value: pixelsort_DIRECTION.DIAGONAL_TOP_RIGHT\n    }],\n    default: pixelsort_DIRECTION.COLUMN\n  },\n  sortDirection: {\n    type: controlTypes["d" /* ENUM */],\n    options: [{\n      name: "Ascending",\n      value: pixelsort_SORT_DIRECTION.ASCENDING\n    }, {\n      name: "Descending",\n      value: pixelsort_SORT_DIRECTION.DESCENDING\n    }],\n    default: pixelsort_SORT_DIRECTION.ASCENDING\n  },\n  comparator: {\n    type: controlTypes["d" /* ENUM */],\n    options: [{\n      name: "RGBA",\n      value: pixelsort_COMPARATOR.RGBA\n    }, {\n      name: "GBRA",\n      value: pixelsort_COMPARATOR.GBRA\n    }, {\n      name: "BGRA",\n      value: pixelsort_COMPARATOR.BGRA\n    }, {\n      name: "HSVA",\n      value: pixelsort_COMPARATOR.HSVA\n    }, {\n      name: "SVHA",\n      value: pixelsort_COMPARATOR.SVHA\n    }, {\n      name: "VSHA",\n      value: pixelsort_COMPARATOR.VSHA\n    }, {\n      name: "LABA",\n      value: pixelsort_COMPARATOR.LABA\n    }, {\n      name: "ABLA",\n      value: pixelsort_COMPARATOR.ABLA\n    }, {\n      name: "BALA",\n      value: pixelsort_COMPARATOR.BALA\n    }, {\n      name: "Luminance",\n      value: pixelsort_COMPARATOR.LUMINANCE\n    }],\n    default: pixelsort_COMPARATOR.LUMINANCE\n  },\n  sortPixelLuminanceAbove: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 255],\n    step: 0.5,\n    default: 0\n  },\n  sortPixelLuminanceBelow: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 255],\n    step: 0.5,\n    default: 255\n  },\n  sortPixelLuminanceChangeAbove: {\n    type: controlTypes["f" /* RANGE */],\n    range: [-255, 255],\n    step: 1,\n    default: -255\n  },\n  sortPixelLuminanceChangeBelow: {\n    type: controlTypes["f" /* RANGE */],\n    range: [-255, 255],\n    step: 1,\n    default: 255\n  },\n  extraIntervalStartChance: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 1],\n    step: 0.01,\n    default: 0\n  },\n  maxIntervalSize: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 5000],\n    step: 1,\n    default: 0\n  },\n  palette: {\n    type: controlTypes["e" /* PALETTE */],\n    default: palettes["a" /* nearest */]\n  }\n};\nconst pixelsort_defaults = {\n  direction: pixelsort_optionTypes.direction.default,\n  sortDirection: pixelsort_optionTypes.sortDirection.default,\n  comparator: pixelsort_optionTypes.comparator.default,\n  palette: pixelsort_optionTypes.palette.default,\n  sortPixelLuminanceAbove: pixelsort_optionTypes.sortPixelLuminanceAbove.default,\n  sortPixelLuminanceBelow: pixelsort_optionTypes.sortPixelLuminanceBelow.default,\n  sortPixelLuminanceChangeAbove: pixelsort_optionTypes.sortPixelLuminanceChangeAbove.default,\n  sortPixelLuminanceChangeBelow: pixelsort_optionTypes.sortPixelLuminanceChangeBelow.default,\n  extraIntervalStartChance: pixelsort_optionTypes.extraIntervalStartChance.default,\n  maxIntervalSize: pixelsort_optionTypes.maxIntervalSize.default\n};\n\nconst pixelsort_pixelsortFilter = (input, options = pixelsort_defaults) => {\n  const {\n    direction,\n    sortDirection,\n    comparator,\n    sortPixelLuminanceAbove,\n    sortPixelLuminanceBelow,\n    sortPixelLuminanceChangeAbove,\n    sortPixelLuminanceChangeBelow,\n    extraIntervalStartChance,\n    maxIntervalSize,\n    palette\n  } = options;\n  const output = Object(utils["d" /* cloneCanvas */])(input, false);\n  const inputCtx = input.getContext("2d");\n  const outputCtx = output.getContext("2d");\n\n  if (!inputCtx || !outputCtx) {\n    return input;\n  }\n\n  const buf = inputCtx.getImageData(0, 0, input.width, input.height).data;\n\n  const newInterval = () => ({\n    trail: [],\n    pixels: []\n  });\n\n  let interval = newInterval();\n\n  const fillInterval = () => {\n    interval.pixels.sort((a, b) => pixelsort_SORTS[comparator](a, b, sortDirection));\n\n    for (let i = 0; i < interval.trail.length; i += 1) {\n      const bufIdx = interval.trail[i];\n      const pixel = interval.pixels[i];\n      const col = palette.getColor(pixel, palette.options);\n      Object(utils["g" /* fillBufferPixel */])(buf, bufIdx, col[0], col[1], col[2], col[3]);\n    }\n\n    interval = newInterval();\n  };\n\n  let lastLum = null;\n  let cur;\n  const iterator = pixelsort_ITERATORS[direction]({\n    i: 0,\n    x: 0,\n    y: 0,\n    w: input.width,\n    h: input.height\n  });\n  /* eslint-disable */\n\n  while (cur = iterator()) {\n    /* eslint-enable */\n    const pixel = Object(utils["m" /* rgba */])(buf[cur.i], buf[cur.i + 1], buf[cur.i + 2], buf[cur.i + 3]);\n    const lum = Object(utils["j" /* luminance */])(pixel);\n    const lumDelta = lastLum != null ? lastLum - lum : 0;\n    lastLum = lum;\n    const inLuminosityWindow = lum >= sortPixelLuminanceAbove && lum <= sortPixelLuminanceBelow;\n    const enoughLuminosityDelta = lumDelta >= sortPixelLuminanceChangeAbove && lumDelta <= sortPixelLuminanceChangeBelow;\n\n    if (interval.trail.length > maxIntervalSize && maxIntervalSize > 0) {\n      fillInterval();\n    }\n\n    if (inLuminosityWindow && enoughLuminosityDelta || Math.random() < extraIntervalStartChance) {\n      interval.pixels.push(pixel);\n      interval.trail.push(cur.i); // If iterator forces an end of an interval (eg. x wrapped around)\n\n      if (cur.endInterval) {\n        fillInterval();\n      }\n    } else if (interval.trail.length > 0) {\n      fillInterval();\n    }\n  } // Clean up any remaining interval\n\n\n  if (interval.trail.length > 0) {\n    fillInterval();\n  }\n\n  outputCtx.putImageData(new ImageData(buf, output.width, output.height), 0, 0);\n  return output;\n};\n\n/* harmony default export */ var pixelsort = ({\n  name: "Pixelsort",\n  func: pixelsort_pixelsortFilter,\n  optionTypes: pixelsort_optionTypes,\n  options: pixelsort_defaults,\n  defaults: pixelsort_defaults\n});\n// EXTERNAL MODULE: ../node_modules/pako/index.js\nvar pako = __webpack_require__(37);\n\n// CONCATENATED MODULE: ./filters/glitchblob.js\n/* eslint no-unused-vars: ["error", { "argsIgnorePattern": "^_" }] */\n\n/* eslint-disable no-param-reassign, no-bitwise */\n// lots of mutation\n\n\n\n\n\nconst glitchblob_IMAGE_JPEG = "IMAGE_JPEG";\nconst glitchblob_IMAGE_PNG = "IMAGE_PNG";\nconst glitchblob_IMAGE_WEBP = "IMAGE_WEBP";\nconst glitchblob_IMAGE_BMP = "IMAGE_BMP";\nconst glitchblob_IMAGE_ICO = "IMAGE_ICO";\nconst glitchblob_formatMap = {\n  [glitchblob_IMAGE_JPEG]: "image/jpeg",\n  [glitchblob_IMAGE_PNG]: "image/png",\n  [glitchblob_IMAGE_WEBP]: "image/webp",\n  [glitchblob_IMAGE_BMP]: "image/gif",\n  [glitchblob_IMAGE_ICO]: "image/ico"\n};\nconst glitchblob_optionTypes = {\n  format: {\n    type: controlTypes["d" /* ENUM */],\n    options: [{\n      name: "image/jpeg",\n      value: glitchblob_IMAGE_JPEG\n    }, {\n      name: "image/png",\n      value: glitchblob_IMAGE_PNG\n    }, {\n      name: "image/webp",\n      value: glitchblob_IMAGE_WEBP\n    }, {\n      name: "image/bmp",\n      value: glitchblob_IMAGE_BMP\n    }, {\n      name: "image/ico",\n      value: glitchblob_IMAGE_ICO\n    }],\n    default: glitchblob_IMAGE_JPEG\n  },\n  errors: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 300],\n    step: 1,\n    default: 30\n  },\n  errTranspose: {\n    type: controlTypes["a" /* BOOL */],\n    default: true\n  },\n  errRepeat: {\n    type: controlTypes["a" /* BOOL */],\n    default: false\n  },\n  errSubstitute: {\n    type: controlTypes["a" /* BOOL */],\n    default: true\n  },\n  jpegQuality: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 1],\n    step: 0.01,\n    default: 0.92\n  }\n};\nconst glitchblob_defaults = {\n  errRepeat: glitchblob_optionTypes.errRepeat.default,\n  errTranspose: glitchblob_optionTypes.errTranspose.default,\n  errSubstitute: glitchblob_optionTypes.errSubstitute.default,\n  errors: glitchblob_optionTypes.errors.default,\n  format: glitchblob_optionTypes.format.default,\n  jpegQuality: glitchblob_optionTypes.jpegQuality.default\n};\n\nclass glitchblob_PngError extends Error {\n  constructor(...params) {\n    super(...params);\n    Error.captureStackTrace(this, glitchblob_PngError);\n  }\n\n}\n\nconst glitchblob_canvasToBlob = (image, format) => new Promise((resolve, _reject) => {\n  image.toBlob(blob => {\n    resolve(blob);\n  }, glitchblob_formatMap[format]);\n});\n\nconst glitchblob_blobToImage = blob => new Promise((resolve, reject) => {\n  const corruptedImage = new Image();\n\n  corruptedImage.onload = () => {\n    resolve(corruptedImage);\n  };\n\n  corruptedImage.onerror = e => {\n    reject(e);\n  };\n\n  corruptedImage.src = URL.createObjectURL(blob);\n});\n\nconst glitchblob_blobToUint8Array = blob => new Promise((resolve, reject) => {\n  const fileReader = new FileReader();\n\n  fileReader.onload = event => {\n    if (blob.size === event.target.result.byteLength) {\n      resolve(new Uint8Array(event.target.result));\n    } else {\n      reject(new Error("I\'ve lost my mind"));\n    }\n  };\n\n  fileReader.onerror = e => {\n    reject(e);\n  };\n\n  fileReader.readAsArrayBuffer(blob);\n});\n\nconst glitchblob_transformTranspose = (header, input, ..._rest) => {\n  const idx = header + Math.floor(Math.random() * (input.length - header - 1));\n  const tmp = input[idx];\n  input[idx] = input[idx + 1];\n  input[idx + 1] = tmp;\n  return input;\n};\n\nconst glitchblob_transformSubstitute = (header, input, ..._rest) => {\n  const by = Math.floor(Math.random() * 256);\n  const idx = header + Math.floor(Math.random() * (input.length - header));\n  input[idx] = by;\n  return input;\n};\n\nconst glitchblob_transformRepeat = (header, input, ..._rest) => {\n  const idx = header + Math.floor(Math.random() * (input.length - header));\n  const by = input[idx];\n  const repeatedBuf = new Uint8Array(Math.floor(Math.random() * 10));\n\n  for (let i = 0; i < repeatedBuf.length; i += 1) {\n    repeatedBuf[i] = by;\n  }\n\n  const newOut = new Uint8Array(input.length + repeatedBuf.length - 1);\n  newOut.set(input.subarray(0, idx), 0);\n  let wrote = idx;\n  newOut.set(repeatedBuf, wrote);\n  wrote += repeatedBuf.length;\n  newOut.set(input.subarray(idx + 1), wrote);\n  return newOut;\n};\n\nconst glitchblob_setU32 = (data, value) => {\n  const tmpBuf = new ArrayBuffer(4);\n  new DataView(tmpBuf).setUint32(0, value);\n  /* eslint-disable */\n\n  data[0] = new Uint8Array(tmpBuf)[0];\n  data[1] = new Uint8Array(tmpBuf)[1];\n  data[2] = new Uint8Array(tmpBuf)[2];\n  data[3] = new Uint8Array(tmpBuf)[3];\n  /* eslint-enable */\n};\n\nconst glitchblob_getU32 = data => {\n  const tmpBuf = new ArrayBuffer(4);\n  /* eslint-disable */\n\n  new Uint8Array(tmpBuf)[0] = data[0];\n  new Uint8Array(tmpBuf)[1] = data[1];\n  new Uint8Array(tmpBuf)[2] = data[2];\n  new Uint8Array(tmpBuf)[3] = data[3];\n  /* eslint-enable */\n\n  return new DataView(tmpBuf).getUint32(0);\n};\n\nconst glitchblob_computeCrc = (data, crcBuf) => {\n  /* eslint-disable */\n  function buildCRC32Table(poly) {\n    const table = new Uint32Array(256);\n\n    for (let n = 0; n < 256; n += 1) {\n      let c = n;\n\n      for (let k = 0; k < 8; k += 1) {\n        if (c & 1) {\n          c = poly ^ c >>> 1;\n        } else {\n          c >>>= 1;\n        }\n      }\n\n      table[n] = c >>> 0;\n    }\n\n    return table;\n  }\n\n  const table = buildCRC32Table(0xedb88320);\n  let crc = 0xffffffff;\n\n  for (let i = 0; i < data.length; i += 1) {\n    crc = crc >>> 8 ^ table[(crc ^ data[i]) & 0xff];\n  }\n\n  crc ^= 0xffffffff;\n  /* eslint-enable */\n\n  glitchblob_setU32(crcBuf, crc);\n};\n\nconst glitchblob_postprocessPNG = ctx => {\n  const CHUNK_SIZE = 8192; // prettier-ignore\n\n  const pngHeader = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n  let outSize = pngHeader.length;\n  const filterDeflate = Object(pako["deflate"])(ctx.filter);\n\n  for (let i = 0; i < ctx.skippedBeforeIdat.length; i += 1) {\n    outSize += ctx.skippedBeforeIdat[i].length;\n  }\n\n  for (let s = 0; s < filterDeflate.length; s += CHUNK_SIZE) {\n    outSize += filterDeflate.subarray(s, s + CHUNK_SIZE).length + 12;\n  }\n\n  for (let i = 0; i < ctx.skippedAfterIdat.length; i += 1) {\n    outSize += ctx.skippedAfterIdat[i].length;\n  }\n\n  const out = new Uint8Array(outSize);\n  let outOff = 0;\n  out.set(pngHeader, outOff);\n  outOff += pngHeader.length;\n\n  for (let i = 0; i < ctx.skippedBeforeIdat.length; i += 1) {\n    out.set(ctx.skippedBeforeIdat[i], outOff);\n    outOff += ctx.skippedBeforeIdat[i].length;\n  }\n\n  for (let s = 0; s < filterDeflate.length; s += CHUNK_SIZE) {\n    const data = filterDeflate.subarray(s, s + CHUNK_SIZE);\n    const chunkTmp = new Uint8Array(data.length + 12);\n    glitchblob_setU32(chunkTmp.subarray(0, 4), data.length);\n    chunkTmp[4 + 0] = 73;\n    chunkTmp[4 + 1] = 68;\n    chunkTmp[4 + 2] = 65;\n    chunkTmp[4 + 3] = 84;\n    let chunkOffset = 8;\n    chunkTmp.set(data, chunkOffset);\n    chunkOffset += data.length;\n    glitchblob_computeCrc(chunkTmp.subarray(4, chunkOffset), chunkTmp.subarray(chunkOffset, chunkOffset + 4));\n    chunkOffset += 4;\n    out.set(chunkTmp.subarray(0, chunkOffset), outOff);\n    outOff += chunkOffset;\n  }\n\n  for (let i = 0; i < ctx.skippedAfterIdat.length; i += 1) {\n    out.set(ctx.skippedAfterIdat[i], outOff);\n    outOff += ctx.skippedAfterIdat[i].length;\n  }\n\n  return out;\n};\n\nconst glitchblob_preprocessPNG = buffer => {\n  let offset = 0;\n  const skippedBeforeIdat = [];\n  const skippedAfterIdat = []; // prettier-ignore\n\n  const pngHeader = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n\n  for (; offset < pngHeader.length; offset += 1) {\n    if (buffer[offset] !== pngHeader[offset]) {\n      throw glitchblob_PngError("invalid magic");\n    }\n  }\n\n  let dataBytes = 0; // measure.\n\n  for (;;) {\n    if (buffer.length < offset + 4) {\n      throw glitchblob_PngError("truncated");\n    }\n\n    const length = glitchblob_getU32(buffer.subarray(offset, offset + 4));\n\n    if (length < 0) {\n      throw new Error("Unreachable?");\n    }\n\n    offset += 4;\n\n    if (buffer.length < offset + length + 4) {\n      // not a valid PNG\n      throw glitchblob_PngError("truncated");\n    }\n\n    const headerType = String.fromCharCode.apply(null, buffer.subarray(offset, offset + 4));\n    offset += 4;\n    dataBytes += length;\n    offset += length;\n    offset += 4;\n\n    if (headerType === "IEND") {\n      break;\n    }\n  }\n\n  offset = 0;\n  const filterDeflated = new Uint8Array(dataBytes);\n  let outPos = 0;\n  let beforeIdat = true;\n\n  for (; offset < pngHeader.length; offset += 1) {\n    if (buffer[offset] !== pngHeader[offset]) {\n      // not a PNG\n      throw glitchblob_PngError("invalid magic");\n    }\n  }\n\n  for (;;) {\n    if (buffer.length < offset + 4) {\n      // not a valid PNG\n      throw glitchblob_PngError("truncated");\n    }\n\n    const chunkStart = offset;\n    const length = glitchblob_getU32(buffer.subarray(offset, offset + 4));\n    offset += 4;\n\n    if (length < 0) {\n      throw new Error("Unreachable?");\n    }\n\n    if (buffer.length < offset + length + 4) {\n      // not a valid PNG\n      throw glitchblob_PngError("truncated");\n    }\n\n    const headerType = String.fromCharCode.apply(null, buffer.subarray(offset, offset + 4));\n    offset += 4;\n\n    if (headerType === "IDAT") {\n      for (let i = 0; i < length; i += 1) {\n        filterDeflated[outPos] = buffer[offset + i];\n        outPos += 1;\n      }\n\n      beforeIdat = false;\n    }\n\n    offset += length;\n    offset += 4;\n\n    if (headerType !== "IDAT") {\n      const chunk = buffer.subarray(chunkStart, offset);\n\n      if (beforeIdat) {\n        skippedBeforeIdat.push(chunk);\n      } else {\n        skippedAfterIdat.push(chunk);\n      }\n    }\n\n    if (headerType === "IEND") {\n      break;\n    }\n  }\n\n  return {\n    filter: Object(pako["inflate"])(filterDeflated),\n    skippedBeforeIdat,\n    skippedAfterIdat\n  };\n};\n\nconst glitchblob_glitchblob = (input, options = glitchblob_defaults, dispatch) => {\n  const {\n    errRepeat,\n    errSubstitute,\n    errTranspose,\n    errors,\n    format\n  } = options;\n  const output = Object(utils["d" /* cloneCanvas */])(input, false);\n  const inputCtx = input.getContext("2d");\n  const outputCtx = output.getContext("2d");\n\n  if (!inputCtx || !outputCtx) {\n    return input;\n  }\n\n  const corruptThis = (image, fmt) => {\n    const retry = (limit, promiseChainFactory) => promiseChainFactory().catch(e => new Promise((reso, rej) => {\n      if (limit === 0) {\n        rej(e);\n      } else {\n        reso(retry(limit - 1, promiseChainFactory));\n      }\n    }));\n\n    const corruptor = corruptedArg => {\n      let corrupted = corruptedArg;\n      let context;\n      let header = Math.round(Math.min(100, 0.9 * corrupted.length));\n\n      if (fmt === glitchblob_IMAGE_PNG) {\n        context = glitchblob_preprocessPNG(corrupted);\n        corrupted = context.filter;\n        header = 0;\n      }\n\n      const corruptors = [];\n\n      if (errTranspose) {\n        corruptors.push(glitchblob_transformTranspose);\n      }\n\n      if (errSubstitute) {\n        corruptors.push(glitchblob_transformSubstitute);\n      }\n\n      if (errRepeat) {\n        corruptors.push(glitchblob_transformRepeat);\n      }\n\n      if (corruptors.length > 0) {\n        for (let i = 0; i < errors; i += 1) {\n          const cIdx = Math.floor(Math.random() * corruptors.length);\n          const currentX = cIdx % input.width;\n          const currentY = Math.floor(cIdx / input.width);\n          corrupted = corruptors[cIdx](header, corrupted, input.width, input.height, currentX, currentY);\n        }\n      }\n\n      if (fmt === glitchblob_IMAGE_PNG && context != null) {\n        corrupted = glitchblob_postprocessPNG(context);\n      }\n\n      return corrupted;\n    };\n\n    return retry(10, () => glitchblob_canvasToBlob(image, format).then(glitchblob_blobToUint8Array).then(corruptor).then(u8a => new Blob([u8a], {\n      type: glitchblob_formatMap[format]\n    })).then(glitchblob_blobToImage));\n  };\n\n  corruptThis(input, format).then(image => {\n    dispatch(actions_filterImage(image));\n  });\n  return ASYNC_FILTER;\n};\n\n/* harmony default export */ var filters_glitchblob = ({\n  name: "Glitch",\n  func: glitchblob_glitchblob,\n  options: glitchblob_defaults,\n  optionTypes: glitchblob_optionTypes,\n  defaults: glitchblob_defaults\n});\n// CONCATENATED MODULE: ./filters/halftone.js\nfunction halftone_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === \'function\') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { halftone_defineProperty(target, key, source[key]); }); } return target; }\n\nfunction halftone_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nconst halftone_optionTypes = {\n  size: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, Infinity],\n    default: 6\n  },\n  // diameter of input\n  sizeMultiplier: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 5],\n    step: 0.1,\n    default: 1\n  },\n  // diameter of output\n  offset: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 3],\n    step: 0.1,\n    default: 0.3\n  },\n  levels: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 255],\n    default: 32\n  },\n  // no. of circle sizes\n  palette: {\n    type: controlTypes["e" /* PALETTE */],\n    default: palettes["a" /* nearest */]\n  },\n  squareDots: {\n    type: controlTypes["a" /* BOOL */],\n    default: false\n  },\n  background: {\n    type: controlTypes["h" /* STRING */],\n    default: "black"\n  }\n};\nconst halftone_defaults = {\n  size: halftone_optionTypes.size.default,\n  sizeMultiplier: halftone_optionTypes.sizeMultiplier.default,\n  offset: halftone_optionTypes.offset.default,\n  levels: halftone_optionTypes.levels.default,\n  palette: halftone_objectSpread({}, halftone_optionTypes.palette.default, {\n    options: {\n      levels: 8\n    }\n  }),\n  squareDots: halftone_optionTypes.squareDots.default,\n  background: halftone_optionTypes.background.default\n};\n\nconst halftone_halftone = (input, options = halftone_defaults) => {\n  const getOffset = (radians, radius, x0, y0) => {\n    const x = x0 + radius * Math.cos(radians);\n    const y = y0 + radius * Math.sin(radians);\n    return [x, y];\n  };\n\n  const {\n    background,\n    palette\n  } = options;\n  const size = parseInt(options.size, 10);\n  const output = Object(utils["d" /* cloneCanvas */])(input, false);\n  const inputCtx = input.getContext("2d");\n  const outputCtx = output.getContext("2d");\n\n  if (!inputCtx || !outputCtx) {\n    return input;\n  }\n\n  outputCtx.globalCompositeOperation = "screen";\n\n  if (typeof background === "string") {\n    outputCtx.fillStyle = background;\n    outputCtx.fillRect(0, 0, output.width, output.height);\n  }\n\n  const buf = inputCtx.getImageData(0, 0, input.width, input.height).data; // TODO: handle edges\n\n  for (let x = 0; x < input.width; x += size) {\n    for (let y = 0; y < input.height; y += size) {\n      const meanColor = Object(utils["m" /* rgba */])(0, 0, 0, 0);\n      const pixels = size * size;\n\n      for (let w = 0; w < size; w += 1) {\n        for (let h = 0; h < size; h += 1) {\n          const sourceIdx = Object(utils["i" /* getBufferIndex */])(x + w, y + h, output.width);\n\n          for (let c = 0; c < 4; c += 1) {\n            meanColor[c] += buf[sourceIdx + c] / pixels;\n          }\n        }\n      } // FIXME: this is wrong(?), should apply nearest here and palette later in colors\n      // rgba(255, 0, 0) should be matched to red?\n\n\n      const quantizedColor = palette.getColor(meanColor, palette.options);\n      const radii = quantizedColor.map(c => c * (size / 2 / 255) * options.sizeMultiplier);\n      const colors = [`rgba(255, 0, 0, ${meanColor[3] / 255}`, `rgba(0, 255, 0, ${meanColor[3] / 255}`, `rgba(0, 0, 255, ${meanColor[3] / 255}`];\n      const centerX = x + size / 2;\n      const centerY = y + size / 2;\n      const offsetDistance = size * options.offset;\n      const centers = [getOffset(2 * Math.PI / 3, offsetDistance, centerX, centerY), getOffset(2 * 2 * Math.PI / 3, offsetDistance, centerX, centerY), getOffset(2 * Math.PI, offsetDistance, centerX, centerY)];\n\n      for (let c = 0; c < 3; c += 1) {\n        if (options.squareDots) {\n          outputCtx.fillStyle = colors[c];\n          outputCtx.fillRect(centers[c][0], centers[c][1], radii[c], radii[c]);\n        } else {\n          // Circle\n          outputCtx.beginPath();\n          outputCtx.arc(centers[c][0], centers[c][1], radii[c], 0, Math.PI * 2);\n          outputCtx.fillStyle = colors[c];\n          outputCtx.fill();\n        }\n      }\n    }\n  }\n\n  outputCtx.globalCompositeOperation = "source-over";\n  return output;\n};\n\n/* harmony default export */ var filters_halftone = ({\n  name: "Halftone",\n  func: halftone_halftone,\n  options: halftone_defaults,\n  optionTypes: halftone_optionTypes,\n  defaults: halftone_defaults\n});\n// CONCATENATED MODULE: ./filters/invert.js\n\n\nconst invert_optionTypes = {\n  invertR: {\n    type: controlTypes["a" /* BOOL */],\n    default: true\n  },\n  invertG: {\n    type: controlTypes["a" /* BOOL */],\n    default: true\n  },\n  invertB: {\n    type: controlTypes["a" /* BOOL */],\n    default: true\n  },\n  invertA: {\n    type: controlTypes["a" /* BOOL */],\n    default: false\n  }\n};\nconst invert_defaults = {\n  invertR: invert_optionTypes.invertR.default,\n  invertG: invert_optionTypes.invertG.default,\n  invertB: invert_optionTypes.invertB.default,\n  invertA: invert_optionTypes.invertA.default\n};\n\nconst invert_invert = (input, options = invert_defaults) => {\n  const output = Object(utils["d" /* cloneCanvas */])(input, false);\n  const inputCtx = input.getContext("2d");\n  const outputCtx = output.getContext("2d");\n  if (!inputCtx || !outputCtx) return input;\n  const buf = inputCtx.getImageData(0, 0, input.width, input.height).data;\n\n  for (let x = 0; x < input.width; x += 1) {\n    for (let y = 0; y < input.height; y += 1) {\n      const i = Object(utils["i" /* getBufferIndex */])(x, y, input.width);\n      const r = options.invertR ? 255 - buf[i] : buf[i];\n      const g = options.invertG ? 255 - buf[i + 1] : buf[i + 1];\n      const b = options.invertB ? 255 - buf[i + 2] : buf[i + 2];\n      const a = options.invertA ? 255 - buf[i + 3] : buf[i + 3];\n      Object(utils["g" /* fillBufferPixel */])(buf, i, r, g, b, a);\n    }\n  }\n\n  outputCtx.putImageData(new ImageData(buf, output.width, output.height), 0, 0);\n  return output;\n};\n\n/* harmony default export */ var filters_invert = ({\n  name: "Invert",\n  func: invert_invert,\n  options: invert_defaults,\n  optionTypes: invert_optionTypes,\n  defaults: invert_defaults\n});\n// CONCATENATED MODULE: ./filters/ordered.js\nfunction ordered_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === \'function\') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { ordered_defineProperty(target, key, source[key]); }); } return target; }\n\nfunction ordered_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nconst ordered_BAYER_2X2 = "BAYER_2X2";\nconst ordered_BAYER_3X3 = "BAYER_3X3";\nconst ordered_BAYER_4X4 = "BAYER_4X4";\nconst ordered_BAYER_8X8 = "BAYER_8X8";\nconst ordered_BAYER_16X16 = "BAYER_16X16";\nconst ordered_SQUARE_5X5 = "SQUARE_5X5";\nconst ordered_CORNER_4X4 = "CORNER_4X4";\nconst ordered_BLOCK_VERTICAL_4X4 = "BLOCK_VERTICAL_4X4";\nconst ordered_BLOCK_HORIZONTAL_4X4 = "BLOCK_HORIZONTAL_4X4";\nconst ordered_HATCH_2X2 = "HATCH_2X2";\nconst ordered_HATCH_3X3 = "HATCH_3X3";\nconst ordered_HATCH_4X4 = "HATCH_4X4";\nconst ordered_ALTERNATE_3X3 = "ALTERNATE_3X3";\nconst ordered_DISPERSED_DOT_3X3 = "DISPERSED_DOT_3X3";\nconst ordered_PATTERN_5X5 = "PATTERN_5X5";\n// map[y][x]\nconst ordered_thresholdMaps = {\n  [ordered_BAYER_2X2]: {\n    width: 2,\n    thresholdMap: Object(utils["q" /* scaleMatrix */])([[0, 2], [3, 1]], 1 / 4)\n  },\n  [ordered_BAYER_3X3]: {\n    width: 3,\n    thresholdMap: Object(utils["q" /* scaleMatrix */])([[0, 7, 3], [6, 5, 2], [4, 1, 8]], 1 / 9)\n  },\n  [ordered_BAYER_4X4]: {\n    width: 4,\n    thresholdMap: Object(utils["q" /* scaleMatrix */])([[0, 8, 2, 10], [12, 4, 14, 6], [3, 11, 1, 9], [15, 7, 13, 5]], 1 / 16)\n  },\n  [ordered_BAYER_8X8]: {\n    width: 8,\n    thresholdMap: Object(utils["q" /* scaleMatrix */])([[0, 48, 12, 60, 3, 51, 15, 63], [32, 16, 44, 28, 35, 19, 47, 31], [8, 56, 4, 52, 11, 59, 7, 55], [40, 24, 36, 20, 43, 27, 39, 23], [2, 50, 14, 62, 1, 49, 13, 61], [34, 18, 46, 30, 33, 17, 45, 29], [10, 58, 6, 54, 9, 57, 5, 53], [42, 26, 38, 22, 41, 25, 37, 21]], 1 / 64)\n  },\n  [ordered_BAYER_16X16]: {\n    width: 16,\n    thresholdMap: Object(utils["q" /* scaleMatrix */])( // prettier-ignore\n    [[0, 192, 48, 240, 12, 204, 60, 252, 3, 195, 51, 243, 15, 207, 63, 255], [128, 64, 176, 112, 140, 76, 188, 124, 131, 67, 179, 115, 143, 79, 191, 127], [32, 224, 16, 208, 44, 236, 28, 220, 35, 227, 19, 211, 47, 239, 31, 223], [160, 96, 144, 80, 172, 108, 156, 92, 163, 99, 147, 83, 175, 111, 159, 95], [8, 200, 56, 248, 4, 196, 52, 244, 11, 203, 59, 251, 7, 199, 55, 247], [136, 72, 184, 120, 132, 68, 180, 116, 139, 75, 187, 123, 135, 71, 183, 119], [40, 232, 24, 216, 36, 228, 20, 212, 43, 235, 27, 219, 39, 231, 23, 215], [168, 104, 152, 88, 164, 100, 148, 84, 171, 107, 155, 91, 167, 103, 151, 87], [2, 194, 50, 242, 14, 206, 62, 254, 1, 193, 49, 241, 13, 205, 61, 253], [130, 66, 178, 114, 142, 78, 190, 126, 129, 65, 177, 113, 141, 77, 189, 125], [34, 226, 18, 210, 46, 238, 30, 222, 33, 225, 17, 209, 45, 237, 29, 221], [162, 98, 146, 82, 174, 110, 158, 94, 161, 97, 145, 81, 173, 109, 157, 93], [10, 202, 58, 250, 6, 198, 54, 246, 9, 201, 57, 249, 5, 197, 53, 245], [138, 74, 186, 122, 134, 70, 182, 118, 137, 73, 185, 121, 133, 69, 181, 117], [42, 234, 26, 218, 38, 230, 22, 214, 41, 233, 25, 217, 37, 229, 21, 213], [170, 106, 154, 90, 166, 102, 150, 86, 169, 105, 153, 89, 165, 101, 149, 85]], 1 / 256)\n  },\n  [ordered_SQUARE_5X5]: {\n    width: 5,\n    thresholdMap: Object(utils["q" /* scaleMatrix */])([[40, 60, 150, 90, 10], [80, 170, 240, 200, 110], [140, 210, 250, 220, 130], [120, 190, 230, 180, 70], [20, 100, 160, 50, 30]], 1 / 255)\n  },\n  [ordered_DISPERSED_DOT_3X3]: {\n    width: 3,\n    thresholdMap: Object(utils["q" /* scaleMatrix */])([[0, 6, 3], [4, 7, 2], [5, 1, 8]], 1 / 9)\n  },\n  [ordered_CORNER_4X4]: {\n    width: 4,\n    thresholdMap: Object(utils["q" /* scaleMatrix */])([[0, 2, 5, 9], [1, 4, 8, 12], [3, 7, 11, 14], [6, 10, 13, 15]], 1 / 16)\n  },\n  [ordered_BLOCK_VERTICAL_4X4]: {\n    width: 4,\n    thresholdMap: Object(utils["q" /* scaleMatrix */])([[0, 1, 2, 3], [0, 1, 2, 3], [0, 1, 2, 3], [0, 1, 2, 3]], 1 / 4),\n    levels: 4\n  },\n  [ordered_BLOCK_HORIZONTAL_4X4]: {\n    width: 4,\n    thresholdMap: Object(utils["q" /* scaleMatrix */])([[0, 0, 0, 0], [1, 1, 1, 1], [2, 2, 2, 2], [3, 3, 3, 3]], 1 / 4),\n    levels: 4\n  },\n  [ordered_HATCH_2X2]: {\n    width: 2,\n    thresholdMap: Object(utils["q" /* scaleMatrix */])([[0, 1], [1, 0]], 1 / 2),\n    levels: 2\n  },\n  [ordered_HATCH_3X3]: {\n    width: 3,\n    thresholdMap: Object(utils["q" /* scaleMatrix */])([[0, 1, 2], [1, 2, 1], [2, 1, 0]], 1 / 3),\n    levels: 3\n  },\n  [ordered_HATCH_4X4]: {\n    width: 4,\n    thresholdMap: Object(utils["q" /* scaleMatrix */])([[0, 1, 2, 3], [1, 2, 3, 2], [2, 3, 2, 1], [3, 2, 1, 0]], 1 / 4),\n    levels: 4\n  },\n  [ordered_ALTERNATE_3X3]: {\n    width: 3,\n    thresholdMap: Object(utils["q" /* scaleMatrix */])([[0, 5, 1], [6, 2, 7], [3, 8, 4]], 1 / 9),\n    levels: 9\n  },\n  [ordered_PATTERN_5X5]: {\n    width: 5,\n    thresholdMap: Object(utils["q" /* scaleMatrix */])([[2, 4, 2, 4, 2], [4, 1, 3, 1, 4], [2, 3, 0, 3, 2], [4, 1, 3, 1, 4], [2, 4, 2, 4, 2]], 1 / 5),\n    levels: 5\n  }\n};\n\nconst ordered_scaleThresholdMap = (map, timesX, timesY) => {\n  if (timesX === 1 && timesY === 1) {\n    return map;\n  }\n\n  const out = [];\n\n  for (let i = 0; i < map.length; i += 1) {\n    for (let y = 0; y < timesY; y += 1) {\n      const row = [];\n\n      for (let j = 0; j < map[i].length; j += 1) {\n        for (let x = 0; x < timesX; x += 1) {\n          row.push(map[i][j]);\n        }\n      }\n\n      out.push(row);\n    }\n  }\n\n  return out;\n};\n\nconst ordered_getOrderedColor = (color, levels, tx, ty, threshold) => {\n  const thresholdValue = threshold[ty][tx];\n\n  if (thresholdValue == null) {\n    return Object(utils["m" /* rgba */])(255, 255, 0, 255); // error colour\n  }\n\n  const step = 255 / (levels - 1); // $FlowFixMe\n\n  return color.map((c, i) => {\n    if (i === 3) return c; // alpha channel\n\n    const newColor = c + step * (thresholdValue - 0.5);\n    const bucket = Math.round(newColor / step);\n    return Math.round(bucket * step);\n  });\n};\n\nconst ordered_optionTypes = {\n  thresholdMap: {\n    type: controlTypes["d" /* ENUM */],\n    options: [{\n      name: "Bayer 2×2",\n      value: ordered_BAYER_2X2\n    }, {\n      name: "Bayer 3×3",\n      value: ordered_BAYER_3X3\n    }, {\n      name: "Bayer 4×4",\n      value: ordered_BAYER_4X4\n    }, {\n      name: "Bayer 8×8",\n      value: ordered_BAYER_8X8\n    }, {\n      name: "Bayer 16×16",\n      value: ordered_BAYER_16X16\n    }, {\n      name: "Dispersed Dot 3×3",\n      value: ordered_DISPERSED_DOT_3X3\n    }, {\n      name: "Digital Halftone 5×8",\n      value: ordered_SQUARE_5X5\n    }, {\n      name: "Corner 4×4",\n      value: ordered_CORNER_4X4\n    }, {\n      name: "Block Vertical 4×4",\n      value: ordered_BLOCK_VERTICAL_4X4\n    }, {\n      name: "Block Horizontal 4×4",\n      value: ordered_BLOCK_HORIZONTAL_4X4\n    }, {\n      name: "Hatch 2×2",\n      value: ordered_HATCH_2X2\n    }, {\n      name: "Hatch 3×3",\n      value: ordered_HATCH_3X3\n    }, {\n      name: "Hatch 4×4",\n      value: ordered_HATCH_4X4\n    }, {\n      name: "Alternate 3×3",\n      value: ordered_ALTERNATE_3X3\n    }, {\n      name: "Hatch 2×2 ×3",\n      value: ordered_PATTERN_5X5\n    }],\n    default: ordered_HATCH_2X2\n  },\n  thresholdMapScaleX: {\n    type: controlTypes["f" /* RANGE */],\n    range: [1, 5],\n    step: 1,\n    default: 1\n  },\n  thresholdMapScaleY: {\n    type: controlTypes["f" /* RANGE */],\n    range: [1, 5],\n    step: 1,\n    default: 1\n  },\n  palette: {\n    type: controlTypes["e" /* PALETTE */],\n    default: palettes["a" /* nearest */]\n  }\n};\nconst ordered_defaults = {\n  thresholdMap: ordered_optionTypes.thresholdMap.default,\n  thresholdMapScaleX: ordered_optionTypes.thresholdMapScaleX.default,\n  thresholdMapScaleY: ordered_optionTypes.thresholdMapScaleY.default,\n  palette: ordered_objectSpread({}, ordered_optionTypes.palette.default, {\n    options: {\n      levels: 2\n    }\n  })\n};\n\nconst ordered_ordered = (input, options = ordered_defaults) => {\n  const {\n    palette,\n    thresholdMap,\n    thresholdMapScaleX,\n    thresholdMapScaleY\n  } = options;\n  const levels = thresholdMap.levels || thresholdMap.length > 0 ? thresholdMap.length * thresholdMap[0].length : 4;\n  const output = Object(utils["d" /* cloneCanvas */])(input, false);\n  const inputCtx = input.getContext("2d");\n  const outputCtx = output.getContext("2d");\n\n  if (!inputCtx || !outputCtx) {\n    return input;\n  }\n\n  const buf = inputCtx.getImageData(0, 0, input.width, input.height).data;\n  const threshold = ordered_thresholdMaps[thresholdMap];\n  const thresholdMapScaled = ordered_scaleThresholdMap(threshold.thresholdMap, thresholdMapScaleX, thresholdMapScaleY);\n  const thresholdMapWidth = threshold.width * thresholdMapScaleX;\n  const thresholdMapHeight = threshold.width * thresholdMapScaleY;\n\n  for (let x = 0; x < input.width; x += 1) {\n    for (let y = 0; y < input.height; y += 1) {\n      const tix = x % thresholdMapWidth;\n      const tiy = y % thresholdMapHeight;\n      const i = Object(utils["i" /* getBufferIndex */])(x, y, input.width); // Ignore alpha channel when calculating error\n\n      const pixel = Object(utils["m" /* rgba */])(buf[i], buf[i + 1], buf[i + 2], buf[i + 3]);\n      const orderedColor = ordered_getOrderedColor(pixel, levels, tix, tiy, thresholdMapScaled);\n      const color = palette.getColor(orderedColor, palette.options);\n      Object(utils["g" /* fillBufferPixel */])(buf, i, color[0], color[1], color[2], buf[i + 3]);\n    }\n  }\n\n  outputCtx.putImageData(new ImageData(buf, output.width, output.height), 0, 0);\n  return output;\n};\n\n/* harmony default export */ var filters_ordered = ({\n  name: "Ordered",\n  func: ordered_ordered,\n  options: ordered_defaults,\n  optionTypes: ordered_optionTypes,\n  defaults: ordered_defaults\n});\n// CONCATENATED MODULE: ./filters/quantize.js\nfunction quantize_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === \'function\') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { quantize_defineProperty(target, key, source[key]); }); } return target; }\n\nfunction quantize_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nconst quantize_optionTypes = {\n  palette: {\n    type: controlTypes["e" /* PALETTE */],\n    default: palettes["a" /* nearest */]\n  }\n};\nconst quantize_defaults = {\n  palette: quantize_objectSpread({}, quantize_optionTypes.palette.default, {\n    options: {\n      levels: 7\n    }\n  })\n};\n\nconst quantize_quantize = (input, options = quantize_defaults) => {\n  const {\n    palette\n  } = options;\n  const output = Object(utils["d" /* cloneCanvas */])(input, false);\n  const inputCtx = input.getContext("2d");\n  const outputCtx = output.getContext("2d");\n\n  if (!inputCtx || !outputCtx) {\n    return input;\n  }\n\n  const buf = inputCtx.getImageData(0, 0, input.width, input.height).data;\n\n  for (let x = 0; x < input.width; x += 1) {\n    for (let y = 0; y < input.height; y += 1) {\n      const i = Object(utils["i" /* getBufferIndex */])(x, y, input.width);\n      const pixel = Object(utils["m" /* rgba */])(buf[i], buf[i + 1], buf[i + 2], buf[i + 3]);\n      const color = palette.getColor(pixel, palette.options);\n      Object(utils["g" /* fillBufferPixel */])(buf, i, color[0], color[1], color[2], buf[i + 3]);\n    }\n  }\n\n  outputCtx.putImageData(new ImageData(buf, output.width, output.height), 0, 0);\n  return output;\n};\n\n/* harmony default export */ var filters_quantize = ({\n  name: "Quantize",\n  func: quantize_quantize,\n  options: quantize_defaults,\n  optionTypes: quantize_optionTypes,\n  defaults: quantize_defaults\n});\n// EXTERNAL MODULE: ./constants/color.js\nvar constants_color = __webpack_require__(13);\n\n// CONCATENATED MODULE: ./filters/random.js\n\n\n\n\nconst random_optionTypes = {\n  levels: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 255],\n    default: 2\n  },\n  grayscale: {\n    type: controlTypes["a" /* BOOL */],\n    default: false\n  },\n  colorDistanceAlgorithm: controlTypes["c" /* COLOR_DISTANCE_ALGORITHM */]\n};\nconst random_defaults = {\n  levels: random_optionTypes.levels.default,\n  grayscale: random_optionTypes.grayscale.default,\n  colorDistanceAlgorithm: constants_color["d" /* RGB_NEAREST */]\n};\n\nconst random_random = (input, options = random_defaults) => {\n  const output = Object(utils["d" /* cloneCanvas */])(input, false);\n  const inputCtx = input.getContext("2d");\n  const outputCtx = output.getContext("2d");\n\n  if (!inputCtx || !outputCtx) {\n    return input;\n  }\n\n  const buf = inputCtx.getImageData(0, 0, input.width, input.height).data;\n\n  for (let x = 0; x < input.width; x += 1) {\n    for (let y = 0; y < input.height; y += 1) {\n      const i = Object(utils["i" /* getBufferIndex */])(x, y, input.width);\n\n      if (options.grayscale) {\n        const intensity = (buf[i] + buf[i + 1] + buf[2]) / 3;\n        const gray = Object(utils["l" /* quantizeValue */])(intensity + (Math.random() - 0.5) * 255, options.levels);\n        Object(utils["g" /* fillBufferPixel */])(buf, i, gray, gray, gray, buf[i + 3]);\n      } else {\n        const r = buf[i] + (Math.random() - 0.5) * 255;\n        const g = buf[i + 1] + (Math.random() - 0.5) * 255;\n        const b = buf[i + 2] + (Math.random() - 0.5) * 255;\n        const color = palettes["a" /* nearest */].getColor(Object(utils["m" /* rgba */])(r, g, b, buf[i + 3]), {\n          levels: options.levels,\n          colorDistanceAlgorithm: options.colorDistanceAlgorithm\n        });\n        Object(utils["g" /* fillBufferPixel */])(buf, i, color[0], color[1], color[2], buf[i + 3]);\n      }\n    }\n  }\n\n  outputCtx.putImageData(new ImageData(buf, output.width, output.height), 0, 0);\n  return output;\n};\n\n/* harmony default export */ var filters_random = ({\n  name: "Random",\n  func: random_random,\n  options: random_defaults,\n  optionTypes: random_optionTypes,\n  defaults: random_defaults\n});\n// CONCATENATED MODULE: ./filters/scanline.js\n\n\n\nconst scanline_optionTypes = {\n  intensity: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 4],\n    step: 0.01,\n    default: 0.33\n  },\n  gap: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 255],\n    step: 1,\n    default: 3\n  },\n  height: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 255],\n    step: 1,\n    default: 1\n  },\n  palette: {\n    type: controlTypes["e" /* PALETTE */],\n    default: palettes["a" /* nearest */]\n  }\n};\nconst scanline_defaults = {\n  intensity: scanline_optionTypes.intensity.default,\n  gap: scanline_optionTypes.gap.default,\n  height: scanline_optionTypes.height.default,\n  palette: scanline_optionTypes.palette.default\n};\n\nconst scanline_scanline = (input, options = scanline_defaults) => {\n  const {\n    intensity,\n    gap,\n    height,\n    palette\n  } = options;\n  const output = Object(utils["d" /* cloneCanvas */])(input, false);\n  const inputCtx = input.getContext("2d");\n  const outputCtx = output.getContext("2d");\n\n  if (!inputCtx || !outputCtx) {\n    return input;\n  }\n\n  const buf = inputCtx.getImageData(0, 0, input.width, input.height).data;\n\n  for (let x = 0; x < input.width; x += 1) {\n    for (let y = 0; y < input.height; y += 1) {\n      const i = Object(utils["i" /* getBufferIndex */])(x, y, input.width);\n      const scale = y % gap < height ? intensity : 1;\n      const prePaletteColor = Object(utils["m" /* rgba */])(buf[i] * scale, buf[i + 1] * scale, buf[i + 2] * scale, buf[i + 3]);\n      const col = palette.getColor(prePaletteColor, palette.options);\n      Object(utils["g" /* fillBufferPixel */])(buf, i, col[0], col[1], col[2], col[3]);\n    }\n  }\n\n  outputCtx.putImageData(new ImageData(buf, output.width, output.height), 0, 0);\n  return output;\n};\n\n/* harmony default export */ var filters_scanline = ({\n  name: "Scanline",\n  func: scanline_scanline,\n  optionTypes: scanline_optionTypes,\n  options: scanline_defaults,\n  defaults: scanline_defaults\n});\n// CONCATENATED MODULE: ./filters/rgbstripe.js\nfunction rgbstripe_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === \'function\') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { rgbstripe_defineProperty(target, key, source[key]); }); } return target; }\n\nfunction rgbstripe_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\nconst rgbstripe_VERTICAL = "VERTICAL";\nconst rgbstripe_STAGGERED = "STAGGERED";\nconst rgbstripe_LADDER = "LADDER";\nconst rgbstripe_TILED = "TILED";\nconst rgbstripe_HEX_GAP = "HEX_GAP";\nconst rgbstripe_masks = {\n  // R G B\n  [rgbstripe_VERTICAL]: e => [[[1, e, e, 1], [e, 1, e, 1], [e, e, 1, 1]]],\n  // R_G_B_\n  // _B_R_G\n  [rgbstripe_STAGGERED]: e => {\n    const r = [0.9, e, e, 1];\n    const r2 = [0.8, e, e, 1];\n    const g = [e, 1, e, 1];\n    const b = [e, e, 1, 1];\n    const k = [e, e, e, 1];\n    return [[r, k, g, k, b, k], [k, b, k, r2, k, g]];\n  },\n  // G B R\n  // B R G\n  // R G B\n  [rgbstripe_LADDER]: e => {\n    const r = [1, e, e, 1];\n    const g = [e, 1, e, 1];\n    const b = [e, e, 1, 1];\n    return [[r, g, b], [g, b, r], [b, r, g]];\n  },\n  // R G B R G B\n  // R G B _ _ _\n  // R G B R G B\n  // _ _ _ R G B\n  [rgbstripe_TILED]: e => {\n    const r = [1, e, e, 1];\n    const g = [e, 1, e, 1];\n    const b = [e, e, 1, 1];\n    const k = [e, e, e, 1];\n    return [[r, g, b, r, g, b], [r, g, b, k, k, k], [r, g, b, r, g, b], [k, k, k, r, g, b]];\n  },\n  // R G B _ R G B _\n  // B _ R G B _ R G\n  // R G B _ R G B _\n  [rgbstripe_HEX_GAP]: e => {\n    const r = [1, e, e, 1];\n    const g = [e, 1, e, 1];\n    const b = [e, e, 1, 1];\n    const k = [e, e, e, 1];\n    return [[r, g, b, k], [b, k, r, g]];\n  }\n};\nconst rgbstripe_optionTypes = {\n  contrast: {\n    type: controlTypes["f" /* RANGE */],\n    range: [-40, 40],\n    step: 0.1,\n    default: 4\n  },\n  strength: {\n    type: controlTypes["f" /* RANGE */],\n    range: [-1, 1],\n    step: 0.05,\n    default: 0.7\n  },\n  brightness: {\n    type: controlTypes["f" /* RANGE */],\n    range: [-255, 255],\n    step: 1,\n    default: 40\n  },\n  exposure: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 4],\n    step: 0.05,\n    default: 1.5\n  },\n  gamma: {\n    type: controlTypes["f" /* RANGE */],\n    range: [0, 4],\n    step: 0.05,\n    default: 2.2\n  },\n  includeScanline: {\n    type: controlTypes["a" /* BOOL */],\n    default: true\n  },\n  scanlineStrength: {\n    type: controlTypes["f" /* RANGE */],\n    range: [-2, 2],\n    step: 0.05,\n    default: 0.75\n  },\n  shadowMask: {\n    type: controlTypes["d" /* ENUM */],\n    options: [{\n      name: "Vertical",\n      value: rgbstripe_VERTICAL\n    }, {\n      name: "Staggered",\n      value: rgbstripe_STAGGERED\n    }, {\n      name: "Ladder",\n      value: rgbstripe_LADDER\n    }, {\n      name: "Tiled",\n      value: rgbstripe_TILED\n    }, {\n      name: "Hex",\n      value: rgbstripe_HEX_GAP\n    }],\n    default: rgbstripe_HEX_GAP\n  },\n  blur: {\n    type: controlTypes["a" /* BOOL */],\n    default: true\n  },\n  palette: {\n    type: controlTypes["e" /* PALETTE */],\n    default: palettes["a" /* nearest */]\n  }\n};\nconst rgbstripe_defaults = {\n  strength: rgbstripe_optionTypes.strength.default,\n  contrast: rgbstripe_optionTypes.contrast.default,\n  brightness: rgbstripe_optionTypes.brightness.default,\n  exposure: rgbstripe_optionTypes.exposure.default,\n  gamma: rgbstripe_optionTypes.gamma.default,\n  includeScanline: rgbstripe_optionTypes.includeScanline.default,\n  scanlineStrength: rgbstripe_optionTypes.scanlineStrength.default,\n  shadowMask: rgbstripe_optionTypes.shadowMask.default,\n  blur: rgbstripe_optionTypes.blur.default,\n  palette: rgbstripe_optionTypes.palette.default\n};\n\nconst rgbstripe_rgbStripe = (input, options = rgbstripe_defaults) => {\n  const {\n    includeScanline,\n    scanlineStrength,\n    shadowMask,\n    brightness,\n    contrast,\n    exposure,\n    gamma,\n    strength,\n    blur,\n    palette\n  } = options;\n  let output = Object(utils["d" /* cloneCanvas */])(input, false);\n  const inputCtx = input.getContext("2d");\n  const outputCtx = output.getContext("2d");\n\n  if (!inputCtx || !outputCtx) {\n    return input;\n  }\n\n  const buf = inputCtx.getImageData(0, 0, input.width, input.height).data;\n  const outputBuf = new Uint8ClampedArray(buf);\n  const effect = 1 - strength;\n  const mask = rgbstripe_masks[shadowMask](effect);\n\n  for (let x = 0; x < input.width; x += 1) {\n    for (let y = 0; y < input.height; y += 1) {\n      const i = Object(utils["i" /* getBufferIndex */])(x, y, input.width); // Mask R/G/B alternating\n\n      const maskxIdx = x % mask[0].length;\n      const maskyIdx = y % mask.length;\n      const masked = Object(utils["m" /* rgba */])(buf[i] * mask[maskyIdx][maskxIdx][0], buf[i + 1] * mask[maskyIdx][maskxIdx][1], buf[i + 2] * mask[maskyIdx][maskxIdx][2], buf[i + 3]); // Bring up brightness as we\'ve masked off too much\n\n      const brightnessAdjusted = Object(utils["c" /* brightness */])(masked, brightness, exposure);\n      const contrastAdjusted = Object(utils["f" /* contrast */])(brightnessAdjusted, contrast);\n      const gammaAdjusted = Object(utils["h" /* gamma */])(contrastAdjusted, gamma); // Manually scanline if needed\n\n      const scanlineScale = includeScanline && y % 3 === 0 ? scanlineStrength : 1;\n      const scanlined = Object(utils["p" /* scale */])(gammaAdjusted, scanlineScale);\n      const color = palette.getColor(scanlined, palette.options);\n      Object(utils["g" /* fillBufferPixel */])(outputBuf, i, color[0], color[1], color[2], buf[i + 3]);\n    }\n  }\n\n  outputCtx.putImageData(new ImageData(outputBuf, output.width, output.height), 0, 0);\n\n  if (blur) {\n    output = filters_convolve.func(output, rgbstripe_objectSpread({}, convolve_defaults, {\n      kernel: convolve_GAUSSIAN_3X3_WEAK\n    }));\n  }\n\n  return output;\n};\n\n/* harmony default export */ var rgbstripe = ({\n  name: "rgbStripe",\n  func: rgbstripe_rgbStripe,\n  optionTypes: rgbstripe_optionTypes,\n  options: rgbstripe_defaults,\n  defaults: rgbstripe_defaults\n});\n// CONCATENATED MODULE: ./filters/errorDiffusingFilterFactory.js\n\n\n\nconst errorDiffusingFilterFactory_optionTypes = {\n  palette: {\n    type: controlTypes["e" /* PALETTE */],\n    default: palettes["a" /* nearest */]\n  }\n};\nconst errorDiffusingFilterFactory_defaults = {\n  palette: errorDiffusingFilterFactory_optionTypes.palette.default\n};\nconst errorDiffusingFilterFactory_errorDiffusingFilter = (name, errorMatrix, defaultOptions) => {\n  const filter = (input, options = defaultOptions) => {\n    const {\n      palette\n    } = options;\n    const output = Object(utils["d" /* cloneCanvas */])(input, true);\n    const outputCtx = output.getContext("2d");\n    if (!outputCtx) return input;\n    const buf = outputCtx.getImageData(0, 0, input.width, input.height).data;\n    if (!buf) return input; // Increase precision over u8 (from getImageData) for error diffusion\n\n    const errBuf = Array.from(buf);\n    if (!errBuf) return input;\n\n    for (let x = 0; x < output.width; x += 1) {\n      for (let y = 0; y < output.height; y += 1) {\n        const i = Object(utils["i" /* getBufferIndex */])(x, y, output.width); // Ignore alpha channel when calculating error\n\n        const pixel = Object(utils["m" /* rgba */])(errBuf[i], errBuf[i + 1], errBuf[i + 2], errBuf[i + 3]);\n        const color = palette.getColor(pixel, palette.options);\n        const error = Object(utils["r" /* sub */])(pixel, color); // Copy alpha value from input\n\n        Object(utils["g" /* fillBufferPixel */])(buf, i, color[0], color[1], color[2], buf[i + 3]);\n        const kernelWidth = errorMatrix.kernel[0].length;\n        const kernelHeight = errorMatrix.kernel.length;\n\n        for (let w = 0; w < kernelWidth; w += 1) {\n          for (let h = 0; h < kernelHeight; h += 1) {\n            const weight = errorMatrix.kernel[h][w];\n\n            if (weight != null) {\n              const targetIdx = Object(utils["i" /* getBufferIndex */])(x + w + errorMatrix.offset[0], y + h + errorMatrix.offset[1], output.width);\n              const toDiffuse = Object(utils["p" /* scale */])(error, weight);\n              Object(utils["b" /* addBufferPixel */])(errBuf, targetIdx, toDiffuse);\n            }\n          }\n        }\n      }\n    }\n\n    outputCtx.putImageData(new ImageData(buf, output.width, output.height), 0, 0);\n    return output;\n  };\n\n  return {\n    name,\n    func: filter,\n    optionTypes: errorDiffusingFilterFactory_optionTypes,\n    options: errorDiffusingFilterFactory_defaults,\n    defaults: defaultOptions\n  };\n};\n/* harmony default export */ var errorDiffusingFilterFactory = (errorDiffusingFilterFactory_errorDiffusingFilter);\n// CONCATENATED MODULE: ./filters/errorDiffusing.js\n\n // https://en.wikipedia.org/wiki/Floyd%E2%80%93Steinberg_dithering\n// [_,    *,    7/16]\n// [3/16, 5/16, 1/16]\n\nconst errorDiffusing_fsKernel = {\n  offset: [-1, 0],\n  // x, y\n  kernel: [[null, null, 7 / 16], [3 / 16, 5 / 16, 1 / 16]]\n};\nconst errorDiffusing_floydSteinberg = errorDiffusingFilterFactory_errorDiffusingFilter("Floyd-Steinberg", errorDiffusing_fsKernel, errorDiffusingFilterFactory_defaults);\nconst errorDiffusing_falseFsKernel = {\n  offset: [0, 0],\n  // x, y\n  kernel: Object(utils["q" /* scaleMatrix */])([[null, 3], [3, 2]], 1 / 8)\n};\nconst errorDiffusing_falseFloydSteinberg = errorDiffusingFilterFactory_errorDiffusingFilter("False Floyd-Steinberg", errorDiffusing_falseFsKernel, errorDiffusingFilterFactory_defaults); // http://www.tannerhelland.com/4660/dithering-eleven-algorithms-source-code/\n//         *   5   3\n// 2   4   5   4   2\n//     2   3   2\n//       (1/32)\n\nconst errorDiffusing_sierra3kernel = {\n  offset: [-2, 0],\n  // x, y\n  kernel: Object(utils["q" /* scaleMatrix */])([[null, null, null, 5, 3], [2, 4, 5, 4, 2], [null, 2, 3, 2, null]], 1 / 32)\n};\nconst errorDiffusing_sierra = errorDiffusingFilterFactory_errorDiffusingFilter("Sierra", errorDiffusing_sierra3kernel, errorDiffusingFilterFactory_defaults); //         X   4   3\n// 1   2   3   2   1\n//       (1/16)\n\nconst errorDiffusing_sierra2kernel = {\n  offset: [-2, 0],\n  // x, y\n  kernel: Object(utils["q" /* scaleMatrix */])([[null, null, null, 4, 3], [1, 2, 3, 2, 1]], 1 / 16)\n};\nconst errorDiffusing_sierra2 = errorDiffusingFilterFactory_errorDiffusingFilter("Sierra 2-row", errorDiffusing_sierra2kernel, errorDiffusingFilterFactory_defaults); //     X   2\n// 1   1\n//   (1/4)\n\nconst errorDiffusing_sierraLiteKernel = {\n  offset: [-1, 0],\n  // x, y\n  kernel: Object(utils["q" /* scaleMatrix */])([[null, null, 2], [1, 1, null]], 1 / 4)\n};\nconst errorDiffusing_sierraLite = errorDiffusingFilterFactory_errorDiffusingFilter("Sierra lite", errorDiffusing_sierraLiteKernel, errorDiffusingFilterFactory_defaults); // http://www.tannerhelland.com/4660/dithering-eleven-algorithms-source-code/\n//     X   1   1\n// 1   1   1\n//     1\n//   (1/8)\n\nconst errorDiffusing_atkinsonKernel = {\n  offset: [-1, 0],\n  // x, y\n  kernel: Object(utils["q" /* scaleMatrix */])([[null, null, 1, 1], [1, 1, 1, null], [null, 1, null, null]], 1 / 8)\n};\nconst errorDiffusing_atkinson = errorDiffusingFilterFactory_errorDiffusingFilter("Atkinson", errorDiffusing_atkinsonKernel, errorDiffusingFilterFactory_defaults); // http://www.tannerhelland.com/4660/dithering-eleven-algorithms-source-code/\n//         X   7   5\n// 3   5   7   5   3\n// 1   3   5   3   1\n//       (1/48)\n\nconst errorDiffusing_jarvisKernel = {\n  offset: [-2, 0],\n  // x, y\n  kernel: Object(utils["q" /* scaleMatrix */])([[null, null, null, 7, 5], [3, 5, 7, 5, 3], [1, 3, 5, 3, 1]], 1 / 48)\n};\nconst errorDiffusing_jarvis = errorDiffusingFilterFactory_errorDiffusingFilter("Jarvis", errorDiffusing_jarvisKernel, errorDiffusingFilterFactory_defaults); //         *   8   4\n// 2   4   8   4   2\n// 1   2   4   2   1   (1/42)\n\nconst errorDiffusing_stuckiKernel = {\n  offset: [-2, 0],\n  kernel: Object(utils["q" /* scaleMatrix */])([[null, null, null, 8, 4], [2, 4, 8, 4, 2], [1, 2, 4, 2, 1]], 1 / 42)\n};\nconst errorDiffusing_stucki = errorDiffusingFilterFactory_errorDiffusingFilter("Stucki", errorDiffusing_stuckiKernel, errorDiffusingFilterFactory_defaults); // *   8   4             The Burkes filter\n// 2   4   8   4   2   (1/32)\n\nconst errorDiffusing_burkesKernel = {\n  offset: [-2, 0],\n  kernel: Object(utils["q" /* scaleMatrix */])([[null, null, null, 8, 4], [2, 4, 8, 4, 2]], 1 / 32)\n};\nconst errorDiffusing_burkes = errorDiffusingFilterFactory_errorDiffusingFilter("Burkes", errorDiffusing_burkesKernel, errorDiffusingFilterFactory_defaults); // Weird kernels\n//   X\n//   1\n//   X\n//   1\n//   (1/4)\n\nconst errorDiffusing_horizontalStripeKernel = {\n  offset: [0, 0],\n  // x, y\n  kernel: Object(utils["q" /* scaleMatrix */])([[null], [1], [null], [1]], 1 / 4)\n};\nconst errorDiffusing_horizontalStripe = errorDiffusingFilterFactory_errorDiffusingFilter("Stripe (Horizontal)", errorDiffusing_horizontalStripeKernel, errorDiffusingFilterFactory_defaults);\nconst errorDiffusing_verticalStripeKernel = {\n  offset: [0, 0],\n  // x, y\n  kernel: Object(utils["q" /* scaleMatrix */])([[null, 1, null, 1]], 1 / 4)\n};\nconst errorDiffusing_verticalStripe = errorDiffusingFilterFactory_errorDiffusingFilter("Stripe (Vertical)", errorDiffusing_verticalStripeKernel, errorDiffusingFilterFactory_defaults);\n// CONCATENATED MODULE: ./filters/index.js\nfunction filters_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === \'function\') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { filters_defineProperty(target, key, source[key]); }); } return target; }\n\nfunction filters_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst filters_filterIndex = [filters_binarize, filters_channelSeparation, program["a" /* default */], filters_brightnessContrast, filters_convolve, filters_grayscale, pixelsort, filters_glitchblob, filters_halftone, filters_invert, jitter, filters_ordered, filters_quantize, filters_scanline, rgbstripe, errorDiffusing_atkinson, errorDiffusing_burkes, errorDiffusing_floydSteinberg, errorDiffusing_falseFloydSteinberg, errorDiffusing_sierra, errorDiffusing_sierra2, errorDiffusing_sierraLite, errorDiffusing_stucki, errorDiffusing_jarvis, errorDiffusing_horizontalStripe, errorDiffusing_verticalStripe, filters_vhs].reduce((acc, cur) => {\n  acc[cur.name] = cur;\n  return acc;\n}, {}); // Presets\n\nconst filters_filterList = [{\n  displayName: "Program",\n  filter: filters_objectSpread({}, program["a" /* default */], {\n    options: filters_objectSpread({}, program["a" /* default */].options, {\n      palette: filters_objectSpread({}, program["a" /* default */].options.palette, {\n        options: filters_objectSpread({}, program["a" /* default */].options.palette.options, {\n          levels: 256\n        })\n      })\n    })\n  })\n}, {\n  displayName: "Convolve",\n  filter: filters_convolve\n}, {\n  displayName: "Convolve (edge detection)",\n  filter: filters_objectSpread({}, filters_convolve, {\n    options: filters_objectSpread({}, filters_convolve.options, {\n      kernel: convolve_LAPLACIAN_3X3\n    })\n  })\n}, {\n  displayName: "Invert",\n  filter: filters_invert\n}, {\n  displayName: "Brightness/Contrast",\n  filter: filters_objectSpread({}, filters_brightnessContrast, {\n    options: filters_objectSpread({}, filters_brightnessContrast.options, {\n      palette: filters_objectSpread({}, filters_brightnessContrast.options.palette, {\n        options: filters_objectSpread({}, filters_brightnessContrast.options.palette.options, {\n          levels: 256\n        })\n      })\n    })\n  })\n}, {\n  displayName: "Scanline",\n  filter: filters_objectSpread({}, filters_scanline, {\n    options: filters_objectSpread({}, filters_scanline.options, {\n      palette: filters_objectSpread({}, filters_scanline.options.palette, {\n        options: filters_objectSpread({}, filters_scanline.options.palette.options, {\n          levels: 256\n        })\n      })\n    })\n  })\n}, {\n  displayName: "CRT emulation",\n  filter: filters_objectSpread({}, rgbstripe, {\n    options: filters_objectSpread({}, rgbstripe.options, {\n      palette: filters_objectSpread({}, rgbstripe.options.palette, {\n        options: filters_objectSpread({}, rgbstripe.options.palette.options, {\n          levels: 32\n        })\n      })\n    })\n  })\n}, {\n  displayName: "Glitch",\n  filter: filters_glitchblob\n}, {\n  displayName: "Pixelsort",\n  filter: filters_objectSpread({}, pixelsort, {\n    options: filters_objectSpread({}, pixelsort.options, {\n      palette: filters_objectSpread({}, pixelsort.options.palette, {\n        options: filters_objectSpread({}, pixelsort.options.palette.options, {\n          levels: 256\n        })\n      })\n    })\n  })\n}, {\n  displayName: "Pixelate",\n  filter: filters_pixelate\n}, {\n  displayName: "Channel separation",\n  filter: filters_channelSeparation\n}, {\n  displayName: "Jitter",\n  filter: jitter\n}, {\n  displayName: "VHS emulation",\n  filter: filters_vhs\n}, {\n  displayName: "Grayscale",\n  filter: filters_grayscale\n}, {\n  displayName: "Random",\n  filter: filters_random\n}, {\n  displayName: "Halftone",\n  filter: filters_halftone\n}, {\n  displayName: "Binarize",\n  filter: filters_binarize\n}, {\n  displayName: "Quantize (No dithering)",\n  filter: filters_quantize\n}, {\n  displayName: "Ordered",\n  filter: filters_ordered\n}, {\n  displayName: "Ordered (Windows 16-color)",\n  filter: filters_objectSpread({}, filters_ordered, {\n    options: filters_objectSpread({}, filters_ordered.options, {\n      thresholdMap: ordered_BAYER_4X4,\n      palette: filters_objectSpread({}, palettes["c" /* user */], {\n        options: {\n          colors: user["a" /* THEMES */].CGA\n        }\n      })\n    })\n  })\n}, {\n  displayName: "Ordered (Gameboy)",\n  filter: filters_objectSpread({}, filters_ordered, {\n    options: filters_objectSpread({}, filters_ordered.options, {\n      palette: filters_objectSpread({}, palettes["c" /* user */], {\n        options: {\n          colors: user["a" /* THEMES */].GAMEBOY\n        }\n      })\n    })\n  })\n}, {\n  displayName: "Floyd-Steinberg",\n  filter: errorDiffusing_floydSteinberg\n}, {\n  displayName: "Floyd-Steinberg (CGA test)",\n  filter: filters_objectSpread({}, errorDiffusing_floydSteinberg, {\n    options: {\n      palette: filters_objectSpread({}, palettes["c" /* user */], {\n        options: {\n          colors: user["a" /* THEMES */].CGA\n        }\n      })\n    }\n  })\n}, {\n  displayName: "Floyd-Steinberg (Vaporwave test)",\n  filter: filters_objectSpread({}, errorDiffusing_floydSteinberg, {\n    options: {\n      palette: filters_objectSpread({}, palettes["c" /* user */], {\n        options: {\n          colors: user["a" /* THEMES */].VAPORWAVE\n        }\n      })\n    }\n  })\n}, {\n  displayName: "False Floyd-Steinberg",\n  filter: errorDiffusing_falseFloydSteinberg\n}, {\n  displayName: "Jarvis",\n  filter: errorDiffusing_jarvis\n}, {\n  displayName: "Stucki",\n  filter: errorDiffusing_stucki\n}, {\n  displayName: "Burkes",\n  filter: errorDiffusing_burkes\n}, {\n  displayName: "Atkinson (Mac)",\n  filter: errorDiffusing_atkinson\n}, {\n  displayName: "Atkinson (Macintosh II color test)",\n  filter: filters_objectSpread({}, errorDiffusing_atkinson, {\n    options: {\n      palette: filters_objectSpread({}, palettes["c" /* user */], {\n        options: {\n          colors: user["a" /* THEMES */].MAC2\n        }\n      })\n    }\n  })\n}, {\n  displayName: "Sierra (full)",\n  filter: errorDiffusing_sierra\n}, {\n  displayName: "Sierra (two-row)",\n  filter: errorDiffusing_sierra2\n}, {\n  displayName: "Sierra (lite)",\n  filter: errorDiffusing_sierraLite\n}, {\n  displayName: "Stripe (horizontal)",\n  filter: errorDiffusing_horizontalStripe\n}, {\n  displayName: "Stripe (vertical)",\n  filter: errorDiffusing_verticalStripe\n}];\n// CONCATENATED MODULE: ./containers/App.js\n\n\n\n\n\nconst App_mapStateToProps = state => ({\n  inputImage: state.filters.inputImage,\n  outputImage: state.filters.outputImage,\n  availableFilters: filters_filterList,\n  selectedFilter: state.filters.selected,\n  convertGrayscale: state.filters.convertGrayscale,\n  scale: state.filters.scale,\n  outputScale: state.filters.outputScale,\n  scalingAlgorithm: state.filters.scalingAlgorithm,\n  time: state.filters.time,\n  inputVideo: state.filters.video,\n  inputVideoVolume: state.filters.videoVolume,\n  inputVideoPlaybackRate: state.filters.videoPlaybackRate,\n  realtimeFiltering: state.filters.realtimeFiltering\n});\n\nconst App_mapDispatchToProps = dispatch => ({\n  onLoadImage: (e, volume = 1, playbackRate = 1) => // $FlowFixMe\n  dispatch(actions_loadMediaAsync(e.target.files[0], volume, playbackRate)),\n  onFilterImage: (input, filter, convertGrayscale = false) => {\n    const filterFunc = convertGrayscale ? (i, o) => filter.func(filters_grayscale.func(i), o) : filter.func; // $FlowFixMe\n\n    dispatch(actions_filterImageAsync(input, filterFunc, filter.options));\n  },\n  onSelectFilter: (name, filter) => dispatch(actions_selectFilter(name, filter)),\n  onConvertGrayscale: val => dispatch(actions_setConvertGrayscale(val)),\n  onSetInput: image => dispatch(actions_loadImage(image)),\n  onSetScale: scale => dispatch(actions_setScale(scale)),\n  onSetOutputScale: scale => dispatch(actions_setOutputScale(scale)),\n  onSetRealTimeFiltering: enabled => dispatch(actions_setRealtimeFiltering(enabled)),\n  onSetInputCanvas: canvas => dispatch(actions_setInputCanvas(canvas)),\n  onSetInputVolume: volume => dispatch(actions_setInputVolume(volume)),\n  onSetInputPlaybackRate: rate => dispatch(actions_setInputPlaybackRate(rate)),\n  onImportState: json => dispatch(actions_importState(json)),\n  onSetScalingAlgorithm: (name, algorithm) => dispatch(actions_setScalingAlgorithm(algorithm))\n});\n\nconst App_ContainedApp = Object(react_redux_es["b" /* connect */])(App_mapStateToProps, App_mapDispatchToProps)(App_App);\n/* harmony default export */ var containers_App = (App_ContainedApp);\n// CONCATENATED MODULE: ./reducers/filters.js\nfunction reducers_filters_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === \'function\') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { reducers_filters_defineProperty(target, key, source[key]); }); } return target; }\n\nfunction reducers_filters_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\nconst filters_initialState = {\n  selected: {\n    displayName: "Floyd-Steinberg",\n    filter: errorDiffusing_floydSteinberg\n  },\n  convertGrayscale: false,\n  scale: 1,\n  outputScale: 1,\n  inputCanvas: null,\n  inputImage: null,\n  outputImage: null,\n  realtimeFiltering: false,\n  time: null,\n  video: null,\n  videoVolume: 1,\n  videoPlaybackRate: 1,\n  scalingAlgorithm: constants_optionTypes["b" /* SCALING_ALGORITHM */].PIXELATED\n};\n/* harmony default export */ var reducers_filters = ((state = filters_initialState, action) => {\n  switch (action.type) {\n    case LOAD_STATE:\n      const localFilter = filters_filterIndex[action.data.selected.filter.name];\n\n      const deserializedFilter = reducers_filters_objectSpread({}, localFilter, {\n        options: action.data.selected.filter.options\n      });\n\n      if (deserializedFilter.options.palette != null) {\n        const localPalette = palettes["b" /* paletteList */].find(p => p.palette.name === deserializedFilter.options.palette.name);\n\n        if (localPalette) {\n          deserializedFilter.options.palette = reducers_filters_objectSpread({}, localPalette.palette, {\n            options: deserializedFilter.options.palette.options\n          });\n        }\n      }\n\n      return reducers_filters_objectSpread({}, state, {\n        selected: reducers_filters_objectSpread({}, action.data.selected, {\n          filter: deserializedFilter\n        }),\n        convertGrayscale: action.data.convertGrayscale\n      });\n\n    case SET_SCALING_ALGORITHM:\n      {\n        if (state.inputCanvas) {\n          const context = state.inputCanvas.getContext("2d");\n\n          if (context && state.inputImage) {\n            const smoothingEnabled = action.algorithm === constants_optionTypes["b" /* SCALING_ALGORITHM */].AUTO;\n            context.imageSmoothingEnabled = smoothingEnabled;\n            context.drawImage(state.inputImage, 0, 0, state.inputImage.width * (state.scale || 1), state.inputImage.height * (state.scale || 1));\n          }\n        }\n\n        return reducers_filters_objectSpread({}, state, {\n          scalingAlgorithm: action.algorithm\n        });\n      }\n\n    case SET_INPUT_CANVAS:\n      return reducers_filters_objectSpread({}, state, {\n        inputCanvas: action.canvas\n      });\n\n    case SET_INPUT_VOLUME:\n      if (state.video) {\n        state.video.volume = action.volume; // eslint-disable-line\n      }\n\n      return reducers_filters_objectSpread({}, state, {\n        videoVolume: action.volume\n      });\n\n    case SET_INPUT_PLAYBACK_RATE:\n      if (state.video) {\n        state.video.playbackRate = action.rate; // eslint-disable-line\n      }\n\n      return reducers_filters_objectSpread({}, state, {\n        videoPlaybackRate: action.rate\n      });\n\n    case LOAD_IMAGE:\n      // eslint-disable-line\n      // Image or new video\n      if (state.video != null && (!action.video || action.video !== state.video)) {\n        state.video.pause(); // $FlowFixMe\n\n        state.video.src = ""; // eslint-disable-line\n      }\n\n      const newState = reducers_filters_objectSpread({}, state, {\n        inputImage: action.image,\n        time: action.time || 0,\n        video: action.video || null,\n        realtimeFiltering: action.video && state.realtimeFiltering\n      });\n\n      if (state.realtimeFiltering && state.inputCanvas) {\n        const output = state.convertGrayscale ? state.selected.filter.func(filters_grayscale.func(state.inputCanvas), state.selected.filter.options, action.dispatch) : state.selected.filter.func(state.inputCanvas, state.selected.filter.options, action.dispatch);\n\n        if (output instanceof HTMLCanvasElement) {\n          newState.outputImage = output;\n        }\n      }\n\n      return newState;\n\n    case SET_GRAYSCALE:\n      return reducers_filters_objectSpread({}, state, {\n        convertGrayscale: action.value\n      });\n\n    case SET_REAL_TIME_FILTERING:\n      return reducers_filters_objectSpread({}, state, {\n        realtimeFiltering: action.enabled\n      });\n\n    case SET_SCALE:\n      return reducers_filters_objectSpread({}, state, {\n        scale: action.scale\n      });\n\n    case SET_OUTPUT_SCALE:\n      return reducers_filters_objectSpread({}, state, {\n        outputScale: action.scale\n      });\n\n    case SELECT_FILTER:\n      return reducers_filters_objectSpread({}, state, {\n        selected: {\n          name: action.name,\n          filter: action.filter.filter\n        }\n      });\n\n    case SET_FILTER_OPTION:\n      return reducers_filters_objectSpread({}, state, {\n        selected: reducers_filters_objectSpread({}, state.selected, {\n          filter: reducers_filters_objectSpread({}, state.selected.filter, {\n            options: reducers_filters_objectSpread({}, state.selected.filter.options, {\n              [action.optionName]: action.value\n            })\n          })\n        })\n      });\n\n    case SET_FILTER_PALETTE_OPTION:\n      if (!state.selected.filter.options || !state.selected.filter.options.palette) {\n        console.warn("Tried to set option on null palette", state); // eslint-disable-line\n\n        return state;\n      }\n\n      return reducers_filters_objectSpread({}, state, {\n        selected: reducers_filters_objectSpread({}, state.selected, {\n          filter: reducers_filters_objectSpread({}, state.selected.filter, {\n            options: reducers_filters_objectSpread({}, state.selected.filter.options, {\n              palette: reducers_filters_objectSpread({}, state.selected.filter.options.palette, {\n                options: reducers_filters_objectSpread({}, state.selected.filter.options.palette.options, {\n                  [action.optionName]: action.value\n                })\n              })\n            })\n          })\n        })\n      });\n\n    case ADD_PALETTE_COLOR:\n      if (!state.selected.filter.options || !state.selected.filter.options.palette) {\n        console.warn("Tried to add color to null palette", state); // eslint-disable-line\n\n        return state;\n      }\n\n      return reducers_filters_objectSpread({}, state, {\n        selected: reducers_filters_objectSpread({}, state.selected, {\n          filter: reducers_filters_objectSpread({}, state.selected.filter, {\n            options: reducers_filters_objectSpread({}, state.selected.filter.options, {\n              palette: reducers_filters_objectSpread({}, state.selected.filter.options.palette, {\n                options: reducers_filters_objectSpread({}, state.selected.filter.options.palette.options, {\n                  colors: [...state.selected.filter.options.palette.options.colors, action.color]\n                })\n              })\n            })\n          })\n        })\n      });\n\n    case FILTER_IMAGE:\n      return reducers_filters_objectSpread({}, state, {\n        outputImage: action.image\n      });\n\n    default:\n      return state;\n  }\n});\n// CONCATENATED MODULE: ./reducers/index.js\n\n/* harmony default export */ var reducers = ({\n  filters: reducers_filters\n});\n// EXTERNAL MODULE: ./styles/style.scss\nvar style = __webpack_require__(49);\nvar style_default = /*#__PURE__*/__webpack_require__.n(style);\n\n// CONCATENATED MODULE: ./index.jsx\nfunction index_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === \'function\') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { index_defineProperty(target, key, source[key]); }); } return target; }\n\nfunction index_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable no-underscore-dangle */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n // Redux devtools are still enabled in production!\n\nconst index_composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n  actionsBlacklist: []\n}) : es["d" /* compose */];\nconst index_appReducer = Object(es["c" /* combineReducers */])(index_objectSpread({}, reducers, {\n  router: react_router_redux_es["c" /* routerReducer */]\n}));\nconst index_history = createBrowserHistory_default()();\nconst index_middleware = [lib_default.a, Object(react_router_redux_es["b" /* routerMiddleware */])(index_history)];\nconst index_store = Object(es["e" /* createStore */])(index_appReducer, index_composeEnhancers(Object(es["a" /* applyMiddleware */])(...index_middleware))); // Load localStorage\n\nObject.values(localStorage).forEach(json => {\n  try {\n    if (typeof json !== "string") return;\n    const option = JSON.parse(json);\n    if (!option || !option.type) return;\n\n    if (option.type === constants_optionTypes["a" /* PALETTE */]) {\n      user["a" /* THEMES */][option.name] = option.colors;\n    }\n  } catch (e) {// console.log("Not an option", json); // eslint-disable-line\n  }\n}); // Check for params\n\nif (window.URLSearchParams && window.location.search) {\n  const params = new URLSearchParams(window.location.search); // Algorithm\n\n  const alg = params.get("alg");\n  const filters = filters_filterList;\n  const selectedFilterOption = filters.find(f => f && f.displayName && f.displayName === alg);\n  const selectedFilter = selectedFilterOption;\n\n  if (alg && selectedFilter != null) {\n    // $FlowFixMe\n    index_store.dispatch(actions_selectFilter(alg, selectedFilterOption));\n  }\n\n  const state = params.get("state");\n\n  try {\n    const decoded = window.atob(state);\n\n    if (state && decoded) {\n      index_store.dispatch(actions_importState(decoded));\n    }\n  } catch (e) {\n    console.warn("Invalid state:", e); // eslint-disable-line\n  }\n}\n\nconst index_root = document.getElementById("root");\n\nif (index_root != null) {\n  react_dom_default.a.render(react_default.a.createElement(react_redux_es["a" /* Provider */], {\n    store: index_store\n  }, react_default.a.createElement(react_router_redux_es["a" /* ConnectedRouter */], {\n    history: index_history\n  }, react_default.a.createElement("div", {\n    style: {\n      height: "100%"\n    }\n  }, react_default.a.createElement(react_router_dom_es["a" /* Route */], {\n    path: "/",\n    component: containers_App,\n    className: style_default.a.app\n  })))), index_root);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///58\n')},59:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(23)(false);\n// imports\nexports.i(__webpack_require__(28), undefined);\n\n// module\nexports.push([module.i, "/* A postcss-import import, relative resolution */\\n/* This is an example typographic scale used to demo CSS imports in ./style.scss\\n * Note that this is a plain old CSS file\\n */\\nhtml {\\n  font-size: 1em;\\n}\\nbody {\\n  background-color: white;\\n  font-family: Tahoma, Arial, \\"Helvetica Neue\\", Helvetica, sans-serif;\\n  font-size: 10pt;\\n  font-weight: 400;\\n  line-height: 1.45;\\n  color: #333;\\n}\\nh1 {\\n  font-size: 10pt;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  cursor: default;\\n  margin: 0;\\n}\\nh2 {\\n  margin: 0;\\n  font-size: 10pt;\\n  margin-bottom: 3px;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  cursor: default;\\n}\\n/* Imported values, resolving from src/ (configured in postcss.config.js) */\\n._2Yw4Z3CdejkRYMs8bIMrQm {\\n  font-size: 0.75em;\\n}\\n/* Element rules work globally, so use .class selectors when using in React components */\\nhtml,\\nbody {\\n  height: 100%;\\n  width: 100%;\\n  padding: 0;\\n  margin: 0;\\n}\\n/* precss variable + cssnext hsl() function */\\nbody {\\n  background: rgb(38, 38, 38);\\n}\\na {\\n  color: blue;\\n}\\n._2f5TvrDqmpRmE0IQvUWN0a {\\n\\n  /* CSS Modules composes direct from file */\\n}\\n/* PreCSS SASS-style nesting */\\n._2f5TvrDqmpRmE0IQvUWN0a > .MgQVQdGUzXUSsodu2fxXD {\\n    color: rgb(38, 38, 38);\\n  }\\n._1VhvN1yb0kNPLYb2-_wIPf {\\n  /* CSS Modules composes from local class */\\n}", ""]);\n\n// exports\nexports.locals = {\n\t"s": "_2Yw4Z3CdejkRYMs8bIMrQm",\n\t"example-compose": "_2f5TvrDqmpRmE0IQvUWN0a " + __webpack_require__(28).locals["s"] + "",\n\t"example-nesting": "MgQVQdGUzXUSsodu2fxXD",\n\t"example-compose-2": "_1VhvN1yb0kNPLYb2-_wIPf _2f5TvrDqmpRmE0IQvUWN0a " + __webpack_require__(28).locals["s"] + ""\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdHlsZXMvc3R5bGUuc2Nzcz9iZWVhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuZXhwb3J0cy5pKHJlcXVpcmUoXCItIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMSEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMiFzdHlsZXMvZXhhbXBsZS5zY3NzXCIpLCB1bmRlZmluZWQpO1xuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi8qIEEgcG9zdGNzcy1pbXBvcnQgaW1wb3J0LCByZWxhdGl2ZSByZXNvbHV0aW9uICovXFxuLyogVGhpcyBpcyBhbiBleGFtcGxlIHR5cG9ncmFwaGljIHNjYWxlIHVzZWQgdG8gZGVtbyBDU1MgaW1wb3J0cyBpbiAuL3N0eWxlLnNjc3NcXG4gKiBOb3RlIHRoYXQgdGhpcyBpcyBhIHBsYWluIG9sZCBDU1MgZmlsZVxcbiAqL1xcbmh0bWwge1xcbiAgZm9udC1zaXplOiAxZW07XFxufVxcbmJvZHkge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxuICBmb250LWZhbWlseTogVGFob21hLCBBcmlhbCwgXFxcIkhlbHZldGljYSBOZXVlXFxcIiwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xcbiAgZm9udC1zaXplOiAxMHB0O1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gIGxpbmUtaGVpZ2h0OiAxLjQ1O1xcbiAgY29sb3I6ICMzMzM7XFxufVxcbmgxIHtcXG4gIGZvbnQtc2l6ZTogMTBwdDtcXG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAgICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xcbiAgICAgIC1tcy11c2VyLXNlbGVjdDogbm9uZTtcXG4gICAgICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7XFxuICBjdXJzb3I6IGRlZmF1bHQ7XFxuICBtYXJnaW46IDA7XFxufVxcbmgyIHtcXG4gIG1hcmdpbjogMDtcXG4gIGZvbnQtc2l6ZTogMTBwdDtcXG4gIG1hcmdpbi1ib3R0b206IDNweDtcXG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAgICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xcbiAgICAgIC1tcy11c2VyLXNlbGVjdDogbm9uZTtcXG4gICAgICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7XFxuICBjdXJzb3I6IGRlZmF1bHQ7XFxufVxcbi8qIEltcG9ydGVkIHZhbHVlcywgcmVzb2x2aW5nIGZyb20gc3JjLyAoY29uZmlndXJlZCBpbiBwb3N0Y3NzLmNvbmZpZy5qcykgKi9cXG4uXzJZdzRaM0NkZWprUllNczhiSU1yUW0ge1xcbiAgZm9udC1zaXplOiAwLjc1ZW07XFxufVxcbi8qIEVsZW1lbnQgcnVsZXMgd29yayBnbG9iYWxseSwgc28gdXNlIC5jbGFzcyBzZWxlY3RvcnMgd2hlbiB1c2luZyBpbiBSZWFjdCBjb21wb25lbnRzICovXFxuaHRtbCxcXG5ib2R5IHtcXG4gIGhlaWdodDogMTAwJTtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgcGFkZGluZzogMDtcXG4gIG1hcmdpbjogMDtcXG59XFxuLyogcHJlY3NzIHZhcmlhYmxlICsgY3NzbmV4dCBoc2woKSBmdW5jdGlvbiAqL1xcbmJvZHkge1xcbiAgYmFja2dyb3VuZDogcmdiKDM4LCAzOCwgMzgpO1xcbn1cXG5hIHtcXG4gIGNvbG9yOiBibHVlO1xcbn1cXG4uXzJmNVR2ckRxbXBSbUUwSVF2VVdOMGEge1xcblxcbiAgLyogQ1NTIE1vZHVsZXMgY29tcG9zZXMgZGlyZWN0IGZyb20gZmlsZSAqL1xcbn1cXG4vKiBQcmVDU1MgU0FTUy1zdHlsZSBuZXN0aW5nICovXFxuLl8yZjVUdnJEcW1wUm1FMElRdlVXTjBhID4gLk1nUVZRZEdVelhVU3NvZHUyZnhYRCB7XFxuICAgIGNvbG9yOiByZ2IoMzgsIDM4LCAzOCk7XFxuICB9XFxuLl8xVmh2TjF5YjBrTlBMWWIyLV93SVBmIHtcXG4gIC8qIENTUyBNb2R1bGVzIGNvbXBvc2VzIGZyb20gbG9jYWwgY2xhc3MgKi9cXG59XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuZXhwb3J0cy5sb2NhbHMgPSB7XG5cdFwic1wiOiBcIl8yWXc0WjNDZGVqa1JZTXM4YklNclFtXCIsXG5cdFwiZXhhbXBsZS1jb21wb3NlXCI6IFwiXzJmNVR2ckRxbXBSbUUwSVF2VVdOMGEgXCIgKyByZXF1aXJlKFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTIhc3R5bGVzL2V4YW1wbGUuc2Nzc1wiKS5sb2NhbHNbXCJzXCJdICsgXCJcIixcblx0XCJleGFtcGxlLW5lc3RpbmdcIjogXCJNZ1FWUWRHVXpYVVNzb2R1MmZ4WERcIixcblx0XCJleGFtcGxlLWNvbXBvc2UtMlwiOiBcIl8xVmh2TjF5YjBrTlBMWWIyLV93SVBmIF8yZjVUdnJEcW1wUm1FMElRdlVXTjBhIFwiICsgcmVxdWlyZShcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0yIXN0eWxlcy9leGFtcGxlLnNjc3NcIikubG9jYWxzW1wic1wiXSArIFwiXCJcbn07Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///59\n')},6:function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(70);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(30)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2NvbXBvbmVudHMvY29udHJvbHMvc3R5bGVzLnNjc3M/MWZiYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0yIS4vc3R5bGVzLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMiEuL3N0eWxlcy5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0yIS4vc3R5bGVzLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6\n")},68:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(23)(false);\n// imports\n\n\n// module\nexports.push([module.i, "@-webkit-keyframes _1Dm_UEDoG4yn6LGgDtgods {\\n  0% { content: \\"\\\\1F55B\\"; }\\n  8.333% { content: \\"\\\\1F550\\"; }\\n  16.666% { content: \\"\\\\1F551\\"; }\\n  25% { content: \\"\\\\1F552\\"; }\\n  33.333% { content: \\"\\\\1F553\\"; }\\n  33.333% { content: \\"\\\\1F554\\"; }\\n  41.666% { content: \\"\\\\1F555\\"; }\\n  50% { content: \\"\\\\1F556\\"; }\\n  58.333% { content: \\"\\\\1F557\\"; }\\n  66.666% { content: \\"\\\\1F558\\"; }\\n  75% { content: \\"\\\\1F559\\"; }\\n  91.666% { content: \\"\\\\1F55A\\"; }\\n  100% { content: \\"\\\\1F55B\\"; }\\n}\\n\\n@keyframes _1Dm_UEDoG4yn6LGgDtgods {\\n  0% { content: \\"\\\\1F55B\\"; }\\n  8.333% { content: \\"\\\\1F550\\"; }\\n  16.666% { content: \\"\\\\1F551\\"; }\\n  25% { content: \\"\\\\1F552\\"; }\\n  33.333% { content: \\"\\\\1F553\\"; }\\n  33.333% { content: \\"\\\\1F554\\"; }\\n  41.666% { content: \\"\\\\1F555\\"; }\\n  50% { content: \\"\\\\1F556\\"; }\\n  58.333% { content: \\"\\\\1F557\\"; }\\n  66.666% { content: \\"\\\\1F558\\"; }\\n  75% { content: \\"\\\\1F559\\"; }\\n  91.666% { content: \\"\\\\1F55A\\"; }\\n  100% { content: \\"\\\\1F55B\\"; }\\n}\\n\\n@-webkit-keyframes EzlNnfzqDm81hAIRyfa33 {\\n  to {\\n    visibility: hidden;\\n  }\\n}\\n\\n@keyframes EzlNnfzqDm81hAIRyfa33 {\\n  to {\\n    visibility: hidden;\\n  }\\n}\\n\\n._1-d1D6ENzuE6hgoPAIjtly {\\n  -ms-flex-line-pack: start;\\n      align-content: flex-start;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  min-height: 100%;\\n  -webkit-box-pack: start;\\n      -ms-flex-pack: start;\\n          justify-content: flex-start;\\n  margin: 0;\\n  padding: 0;\\n  width: 100%;\\n}\\n\\n.LxqVrK6OrD3iQ2aebySug {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  background: #bfbfbf;\\n  min-width: 210px;\\n  width: 10vw;\\n  padding: 15px;\\n}\\n\\n.LxqVrK6OrD3iQ2aebySug ._2I0-nt8AezouIVUIAVFFui {\\n    padding: 20px;\\n    width: 100%;\\n  }\\n\\n.LxqVrK6OrD3iQ2aebySug .C2pOH8V5H9WnPGBG3Ir5T:active::after {position: absolute;-webkit-transform: translateX(-25px) translateY(-2px);transform: translateX(-25px) translateY(-2px);content: \\"\\\\1F55B\\";-webkit-animation: _1Dm_UEDoG4yn6LGgDtgods 0.5s linear infinite;animation: _1Dm_UEDoG4yn6LGgDtgods 0.5s linear infinite;\\n}\\n\\n.LxqVrK6OrD3iQ2aebySug ._1j9buLOC3bwjXjhvTfpLtM {\\n    margin-top: 10px;\\n  }\\n\\n.LxqVrK6OrD3iQ2aebySug ._1L1ck2YQEELrOVdqyf7ejT:not(:first-child) {\\n    margin-top: 20px;\\n  }\\n\\n.LxqVrK6OrD3iQ2aebySug ._2DMNxACFKnBEsynorVpBZ3 {\\n    max-width: 210px;\\n  }\\n\\n.LxqVrK6OrD3iQ2aebySug ._3aVJLjR3W_YbADHDGMsceP {\\n    margin-top: auto;\\n  }\\n\\n.xUeQ_8OWCBxbWJORDijmz {\\n  display: none !important;\\n}\\n\\n._2Cvu3Fe-DVTVjvKoAP5jXo {\\n  -webkit-animation: EzlNnfzqDm81hAIRyfa33 1.5s steps(5, start) infinite;\\n          animation: EzlNnfzqDm81hAIRyfa33 1.5s steps(5, start) infinite;\\n  font-weight: bold;\\n  color: red;\\n  position: absolute;\\n  right: 8px;\\n  top: 32px;\\n}\\n\\n._1xVDP1RXmXke22kyMONYmQ {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-flow: row;\\n          flex-flow: row;\\n}\\n\\n._1xVDP1RXmXke22kyMONYmQ > div {\\n    margin: 10px;\\n    display: table;\\n    background-color: #bfbfbf;\\n  }\\n\\n._1xVDP1RXmXke22kyMONYmQ ._1rsMGsNSFn5nQTqSbd237a {\\n    display: block;\\n  }", ""]);\n\n// exports\nexports.locals = {\n\t"app": "_1-d1D6ENzuE6hgoPAIjtly",\n\t"chrome": "LxqVrK6OrD3iQ2aebySug",\n\t"filterButton": "_2I0-nt8AezouIVUIAVFFui",\n\t"waitButton": "C2pOH8V5H9WnPGBG3Ir5T",\n\t"timer": "_1Dm_UEDoG4yn6LGgDtgods",\n\t"copyButton": "_1j9buLOC3bwjXjhvTfpLtM",\n\t"section": "_1L1ck2YQEELrOVdqyf7ejT",\n\t"captureSection": "_2DMNxACFKnBEsynorVpBZ3",\n\t"github": "_3aVJLjR3W_YbADHDGMsceP",\n\t"hide": "xUeQ_8OWCBxbWJORDijmz",\n\t"rec": "_2Cvu3Fe-DVTVjvKoAP5jXo",\n\t"blink": "EzlNnfzqDm81hAIRyfa33",\n\t"canvases": "_1xVDP1RXmXke22kyMONYmQ",\n\t"canvas": "_1rsMGsNSFn5nQTqSbd237a"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL0FwcC9zdHlsZXMuc2Nzcz8zOTFjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiQC13ZWJraXQta2V5ZnJhbWVzIF8xRG1fVUVEb0c0eW42TEdnRHRnb2RzIHtcXG4gIDAlIHsgY29udGVudDogXFxcIlxcXFwxRjU1QlxcXCI7IH1cXG4gIDguMzMzJSB7IGNvbnRlbnQ6IFxcXCJcXFxcMUY1NTBcXFwiOyB9XFxuICAxNi42NjYlIHsgY29udGVudDogXFxcIlxcXFwxRjU1MVxcXCI7IH1cXG4gIDI1JSB7IGNvbnRlbnQ6IFxcXCJcXFxcMUY1NTJcXFwiOyB9XFxuICAzMy4zMzMlIHsgY29udGVudDogXFxcIlxcXFwxRjU1M1xcXCI7IH1cXG4gIDMzLjMzMyUgeyBjb250ZW50OiBcXFwiXFxcXDFGNTU0XFxcIjsgfVxcbiAgNDEuNjY2JSB7IGNvbnRlbnQ6IFxcXCJcXFxcMUY1NTVcXFwiOyB9XFxuICA1MCUgeyBjb250ZW50OiBcXFwiXFxcXDFGNTU2XFxcIjsgfVxcbiAgNTguMzMzJSB7IGNvbnRlbnQ6IFxcXCJcXFxcMUY1NTdcXFwiOyB9XFxuICA2Ni42NjYlIHsgY29udGVudDogXFxcIlxcXFwxRjU1OFxcXCI7IH1cXG4gIDc1JSB7IGNvbnRlbnQ6IFxcXCJcXFxcMUY1NTlcXFwiOyB9XFxuICA5MS42NjYlIHsgY29udGVudDogXFxcIlxcXFwxRjU1QVxcXCI7IH1cXG4gIDEwMCUgeyBjb250ZW50OiBcXFwiXFxcXDFGNTVCXFxcIjsgfVxcbn1cXG5cXG5Aa2V5ZnJhbWVzIF8xRG1fVUVEb0c0eW42TEdnRHRnb2RzIHtcXG4gIDAlIHsgY29udGVudDogXFxcIlxcXFwxRjU1QlxcXCI7IH1cXG4gIDguMzMzJSB7IGNvbnRlbnQ6IFxcXCJcXFxcMUY1NTBcXFwiOyB9XFxuICAxNi42NjYlIHsgY29udGVudDogXFxcIlxcXFwxRjU1MVxcXCI7IH1cXG4gIDI1JSB7IGNvbnRlbnQ6IFxcXCJcXFxcMUY1NTJcXFwiOyB9XFxuICAzMy4zMzMlIHsgY29udGVudDogXFxcIlxcXFwxRjU1M1xcXCI7IH1cXG4gIDMzLjMzMyUgeyBjb250ZW50OiBcXFwiXFxcXDFGNTU0XFxcIjsgfVxcbiAgNDEuNjY2JSB7IGNvbnRlbnQ6IFxcXCJcXFxcMUY1NTVcXFwiOyB9XFxuICA1MCUgeyBjb250ZW50OiBcXFwiXFxcXDFGNTU2XFxcIjsgfVxcbiAgNTguMzMzJSB7IGNvbnRlbnQ6IFxcXCJcXFxcMUY1NTdcXFwiOyB9XFxuICA2Ni42NjYlIHsgY29udGVudDogXFxcIlxcXFwxRjU1OFxcXCI7IH1cXG4gIDc1JSB7IGNvbnRlbnQ6IFxcXCJcXFxcMUY1NTlcXFwiOyB9XFxuICA5MS42NjYlIHsgY29udGVudDogXFxcIlxcXFwxRjU1QVxcXCI7IH1cXG4gIDEwMCUgeyBjb250ZW50OiBcXFwiXFxcXDFGNTVCXFxcIjsgfVxcbn1cXG5cXG5ALXdlYmtpdC1rZXlmcmFtZXMgRXpsTm5menFEbTgxaEFJUnlmYTMzIHtcXG4gIHRvIHtcXG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xcbiAgfVxcbn1cXG5cXG5Aa2V5ZnJhbWVzIEV6bE5uZnpxRG04MWhBSVJ5ZmEzMyB7XFxuICB0byB7XFxuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcXG4gIH1cXG59XFxuXFxuLl8xLWQxRDZFTnp1RTZoZ29QQUlqdGx5IHtcXG4gIC1tcy1mbGV4LWxpbmUtcGFjazogc3RhcnQ7XFxuICAgICAgYWxpZ24tY29udGVudDogZmxleC1zdGFydDtcXG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiBob3Jpem9udGFsO1xcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XFxuICAgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICBtaW4taGVpZ2h0OiAxMDAlO1xcbiAgLXdlYmtpdC1ib3gtcGFjazogc3RhcnQ7XFxuICAgICAgLW1zLWZsZXgtcGFjazogc3RhcnQ7XFxuICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDA7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuXFxuLkx4cVZySzZPckQzaVEyYWVieVN1ZyB7XFxuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcXG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XFxuICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcXG4gICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGJhY2tncm91bmQ6ICNiZmJmYmY7XFxuICBtaW4td2lkdGg6IDIxMHB4O1xcbiAgd2lkdGg6IDEwdnc7XFxuICBwYWRkaW5nOiAxNXB4O1xcbn1cXG5cXG4uTHhxVnJLNk9yRDNpUTJhZWJ5U3VnIC5fMkkwLW50OEFlem91SVZVSUFWRkZ1aSB7XFxuICAgIHBhZGRpbmc6IDIwcHg7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgfVxcblxcbi5MeHFWcks2T3JEM2lRMmFlYnlTdWcgLkMycE9IOFY1SDlXblBHQkczSXI1VDphY3RpdmU6OmFmdGVyIHtwb3NpdGlvbjogYWJzb2x1dGU7LXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTI1cHgpIHRyYW5zbGF0ZVkoLTJweCk7dHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yNXB4KSB0cmFuc2xhdGVZKC0ycHgpO2NvbnRlbnQ6IFxcXCJcXFxcMUY1NUJcXFwiOy13ZWJraXQtYW5pbWF0aW9uOiBfMURtX1VFRG9HNHluNkxHZ0R0Z29kcyAwLjVzIGxpbmVhciBpbmZpbml0ZTthbmltYXRpb246IF8xRG1fVUVEb0c0eW42TEdnRHRnb2RzIDAuNXMgbGluZWFyIGluZmluaXRlO1xcbn1cXG5cXG4uTHhxVnJLNk9yRDNpUTJhZWJ5U3VnIC5fMWo5YnVMT0MzYndqWGpodlRmcEx0TSB7XFxuICAgIG1hcmdpbi10b3A6IDEwcHg7XFxuICB9XFxuXFxuLkx4cVZySzZPckQzaVEyYWVieVN1ZyAuXzFMMWNrMllRRUVMck9WZHF5ZjdlalQ6bm90KDpmaXJzdC1jaGlsZCkge1xcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xcbiAgfVxcblxcbi5MeHFWcks2T3JEM2lRMmFlYnlTdWcgLl8yRE1OeEFDRktuQkVzeW5vclZwQlozIHtcXG4gICAgbWF4LXdpZHRoOiAyMTBweDtcXG4gIH1cXG5cXG4uTHhxVnJLNk9yRDNpUTJhZWJ5U3VnIC5fM2FWSkxqUjNXX1liQURIREdNc2NlUCB7XFxuICAgIG1hcmdpbi10b3A6IGF1dG87XFxuICB9XFxuXFxuLnhVZVFfOE9XQ0J4YldKT1JEaWpteiB7XFxuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XFxufVxcblxcbi5fMkN2dTNGZS1EVlRWanZLb0FQNWpYbyB7XFxuICAtd2Via2l0LWFuaW1hdGlvbjogRXpsTm5menFEbTgxaEFJUnlmYTMzIDEuNXMgc3RlcHMoNSwgc3RhcnQpIGluZmluaXRlO1xcbiAgICAgICAgICBhbmltYXRpb246IEV6bE5uZnpxRG04MWhBSVJ5ZmEzMyAxLjVzIHN0ZXBzKDUsIHN0YXJ0KSBpbmZpbml0ZTtcXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgY29sb3I6IHJlZDtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHJpZ2h0OiA4cHg7XFxuICB0b3A6IDMycHg7XFxufVxcblxcbi5fMXhWRFAxUlhtWGtlMjJreU1PTlltUSB7XFxuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcXG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIC13ZWJraXQtYm94LW9yaWVudDogaG9yaXpvbnRhbDtcXG4gIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xcbiAgICAgIC1tcy1mbGV4LWZsb3c6IHJvdztcXG4gICAgICAgICAgZmxleC1mbG93OiByb3c7XFxufVxcblxcbi5fMXhWRFAxUlhtWGtlMjJreU1PTlltUSA+IGRpdiB7XFxuICAgIG1hcmdpbjogMTBweDtcXG4gICAgZGlzcGxheTogdGFibGU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNiZmJmYmY7XFxuICB9XFxuXFxuLl8xeFZEUDFSWG1Ya2UyMmt5TU9OWW1RIC5fMXJzTUdzTlNGbjVuUVRxU2JkMjM3YSB7XFxuICAgIGRpc3BsYXk6IGJsb2NrO1xcbiAgfVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcImFwcFwiOiBcIl8xLWQxRDZFTnp1RTZoZ29QQUlqdGx5XCIsXG5cdFwiY2hyb21lXCI6IFwiTHhxVnJLNk9yRDNpUTJhZWJ5U3VnXCIsXG5cdFwiZmlsdGVyQnV0dG9uXCI6IFwiXzJJMC1udDhBZXpvdUlWVUlBVkZGdWlcIixcblx0XCJ3YWl0QnV0dG9uXCI6IFwiQzJwT0g4VjVIOVduUEdCRzNJcjVUXCIsXG5cdFwidGltZXJcIjogXCJfMURtX1VFRG9HNHluNkxHZ0R0Z29kc1wiLFxuXHRcImNvcHlCdXR0b25cIjogXCJfMWo5YnVMT0MzYndqWGpodlRmcEx0TVwiLFxuXHRcInNlY3Rpb25cIjogXCJfMUwxY2syWVFFRUxyT1ZkcXlmN2VqVFwiLFxuXHRcImNhcHR1cmVTZWN0aW9uXCI6IFwiXzJETU54QUNGS25CRXN5bm9yVnBCWjNcIixcblx0XCJnaXRodWJcIjogXCJfM2FWSkxqUjNXX1liQURIREdNc2NlUFwiLFxuXHRcImhpZGVcIjogXCJ4VWVRXzhPV0NCeGJXSk9SRGlqbXpcIixcblx0XCJyZWNcIjogXCJfMkN2dTNGZS1EVlRWanZLb0FQNWpYb1wiLFxuXHRcImJsaW5rXCI6IFwiRXpsTm5menFEbTgxaEFJUnlmYTMzXCIsXG5cdFwiY2FudmFzZXNcIjogXCJfMXhWRFAxUlhtWGtlMjJreU1PTlltUVwiLFxuXHRcImNhbnZhc1wiOiBcIl8xcnNNR3NOU0ZuNW5RVHFTYmQyMzdhXCJcbn07Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///68\n')},7:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXTERNAL MODULE: ./constants/controlTypes.js\nvar controlTypes = __webpack_require__(2);\n\n// CONCATENATED MODULE: ./palettes/nearest.js\n\nconst nearest_optionTypes = {\n  levels: {\n    type: controlTypes["f" /* RANGE */],\n    range: [1, 256],\n    default: 2\n  }\n};\nconst nearest_defaults = {\n  levels: nearest_optionTypes.levels.default\n}; // Gets nearest color\n\nconst nearest_getColor = (color, options = nearest_defaults) => {\n  if (options.levels >= 256) {\n    return color;\n  }\n\n  const step = 255 / (options.levels - 1); // $FlowFixMe\n\n  return color.map(c => {\n    const bucket = Math.round(c / step);\n    return Math.round(bucket * step);\n  });\n};\n\n/* harmony default export */ var nearest = ({\n  name: "nearest",\n  getColor: nearest_getColor,\n  options: nearest_defaults,\n  optionTypes: nearest_optionTypes,\n  defaults: nearest_defaults\n});\n// EXTERNAL MODULE: ./palettes/user.js\nvar user = __webpack_require__(12);\n\n// CONCATENATED MODULE: ./palettes/index.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return palettes_paletteList; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "a", function() { return nearest; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "c", function() { return user["b" /* default */]; });\n\n\n\n\nconst palettes_paletteList = [{\n  name: "Nearest",\n  palette: nearest\n}, {\n  name: "User/Adaptive",\n  palette: user["b" /* default */]\n}];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3BhbGV0dGVzL25lYXJlc3QuanM/Njk0YSIsIndlYnBhY2s6Ly8vLi9wYWxldHRlcy9pbmRleC5qcz84ZGI5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJBTkdFIH0gZnJvbSBcImNvbnN0YW50cy9jb250cm9sVHlwZXNcIjtcbmNvbnN0IG9wdGlvblR5cGVzID0ge1xuICBsZXZlbHM6IHtcbiAgICB0eXBlOiBSQU5HRSxcbiAgICByYW5nZTogWzEsIDI1Nl0sXG4gICAgZGVmYXVsdDogMlxuICB9XG59O1xuY29uc3QgZGVmYXVsdHMgPSB7XG4gIGxldmVsczogb3B0aW9uVHlwZXMubGV2ZWxzLmRlZmF1bHRcbn07IC8vIEdldHMgbmVhcmVzdCBjb2xvclxuXG5jb25zdCBnZXRDb2xvciA9IChjb2xvciwgb3B0aW9ucyA9IGRlZmF1bHRzKSA9PiB7XG4gIGlmIChvcHRpb25zLmxldmVscyA+PSAyNTYpIHtcbiAgICByZXR1cm4gY29sb3I7XG4gIH1cblxuICBjb25zdCBzdGVwID0gMjU1IC8gKG9wdGlvbnMubGV2ZWxzIC0gMSk7IC8vICRGbG93Rml4TWVcblxuICByZXR1cm4gY29sb3IubWFwKGMgPT4ge1xuICAgIGNvbnN0IGJ1Y2tldCA9IE1hdGgucm91bmQoYyAvIHN0ZXApO1xuICAgIHJldHVybiBNYXRoLnJvdW5kKGJ1Y2tldCAqIHN0ZXApO1xuICB9KTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogXCJuZWFyZXN0XCIsXG4gIGdldENvbG9yLFxuICBvcHRpb25zOiBkZWZhdWx0cyxcbiAgb3B0aW9uVHlwZXMsXG4gIGRlZmF1bHRzXG59OyIsImltcG9ydCBuZWFyZXN0IGZyb20gXCIuL25lYXJlc3RcIjtcbmltcG9ydCB1c2VyIGZyb20gXCIuL3VzZXJcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgbmVhcmVzdCB9IGZyb20gXCIuL25lYXJlc3RcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlciB9IGZyb20gXCIuL3VzZXJcIjtcbmV4cG9ydCBjb25zdCBwYWxldHRlTGlzdCA9IFt7XG4gIG5hbWU6IFwiTmVhcmVzdFwiLFxuICBwYWxldHRlOiBuZWFyZXN0XG59LCB7XG4gIG5hbWU6IFwiVXNlci9BZGFwdGl2ZVwiLFxuICBwYWxldHRlOiB1c2VyXG59XTsiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUMvQkE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///7\n')},70:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(23)(false);\n// imports\n\n\n// module\nexports.push([module.i, "._3KlivMF-Bynu52log_p_vg {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n}\\n._2_hkJ8CtyvhoRUq9KYwCY0 {\\n  border: 1px outset #fff;\\n  background: #bfbfbf;\\n  padding: 3px;\\n}\\n.FD685S5hufCd577AWkcey {\\n  text-transform: capitalize;\\n  background: grey;\\n  width: 100%;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  cursor: default;\\n}\\n._3B2ERox5tUNFCf1KhH4Fm_ {\\n\\n  border: 2px groove #bfbfbf;\\n  padding: 0 3px 3px;\\n  margin-top: 10px;\\n}\\n._3B2ERox5tUNFCf1KhH4Fm_ .FD685S5hufCd577AWkcey {\\n    background-color: #bfbfbf;\\n    padding: 0 3px;\\n    position: relative;\\n    top: -9px;\\n  }\\n._16tdlOmqL1wiia4A7Vu3nD {\\n  width: 100%;\\n  padding: 5px;\\n}\\n._1_XVeD_UYOs_dWSgoY2yMB {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-flow: row wrap;\\n          flex-flow: row wrap;\\n  max-width: 100%;\\n  max-height: 40vh;\\n  overflow-y: auto;\\n  padding: 5px 0;\\n}\\n._1_XVeD_UYOs_dWSgoY2yMB ._2xMKoqVC9EpLv4jsDUYKWD {\\n    min-height: 16px;\\n    min-width: 16px;\\n    cursor: pointer\\n  }\\n._1_XVeD_UYOs_dWSgoY2yMB ._2xMKoqVC9EpLv4jsDUYKWD:hover {outline: 2px solid #000080;-webkit-transform: scale(1.2);transform: scale(1.2);\\n}\\n._1_XVeD_UYOs_dWSgoY2yMB ._2xMKoqVC9EpLv4jsDUYKWD:active {-webkit-transform: scale(0.8);transform: scale(0.8);\\n}\\n.kOo__oeX_aWCVDevV7HP0 {\\n\\n  margin-top: 5px;\\n}\\n.kOo__oeX_aWCVDevV7HP0 ._1qUX8OnJgiIPb7vcD9sKS9 {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: horizontal;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: row;\\n            flex-direction: row;\\n  }\\n.kOo__oeX_aWCVDevV7HP0 ._1qUX8OnJgiIPb7vcD9sKS9 > input[type=range] {\\n      -webkit-box-flex: 1;\\n          -ms-flex: 1;\\n              flex: 1;\\n      margin: 0;\\n    }\\n.kOo__oeX_aWCVDevV7HP0 ._19GeXyM0WGuivruXkUCy2b {\\n    text-align: right;\\n    min-width: 35px;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n    cursor: default;\\n  }\\n._16F-g5_X1a0eEjMRyld1H {\\n  width: 100%;\\n  background-color: white;\\n  border: 1px inset #ccc;\\n}\\n._1KhZ50QATkphLmucUDQvBk {\\n  outline: 2px solid #000080;\\n}\\n._1xkjK_OpGeFM2rHfMHqVIo {\\n  margin: 3px 0;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n}\\n._3aIw8gm5BHhVa8Tq9WEuUt {\\n  text-transform: capitalize;\\n  margin-bottom: 1px;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  cursor: default;\\n}\\ninput[type=text],\\ninput[type=select],\\ntextarea,\\n.gGYyBsNmkrN5xQprkCVC6 {\\n  border: 2px inset #ccc;\\n  padding: 5px;\\n}\\ntextarea {\\n  width: 90%;\\n  min-height: 200px;\\n}\\nbutton,\\n.aUSLPIQ1qkK1CKenoFS4- {\\n  background-color: #bfbfbf;\\n  border-left: 2px outset white;\\n  border-top: 2px outset white;\\n  border-bottom: 1px outset #bfbfbf;\\n  border-right: 1px outset #bfbfbf;\\n  -webkit-box-shadow: 1px 1px 0 black;\\n          box-shadow: 1px 1px 0 black;\\n  padding: 3px 6px;\\n  margin: 1px;\\n  outline: none;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none\\n}\\nbutton:active, .aUSLPIQ1qkK1CKenoFS4-:active {border: 2px inset #bfbfbf;border-bottom: 1px outset #bfbfbf;border-right: 1px outset #bfbfbf;\\n}\\nbutton:focus, .aUSLPIQ1qkK1CKenoFS4-:focus {outline: 1px dotted black;outline-offset: -5px;-webkit-box-shadow: 2px 0 black, 0 2px black, 2px 2px black;box-shadow: 2px 0 black, 0 2px black, 2px 2px black;\\n}\\n._1voKh84wobplhMqNPJ9hKh {\\n  background: -webkit-gradient(linear, left top, right top, from(#000080), to(#1c85ce));\\n  background: linear-gradient(90deg, #000080, #1c85ce);\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  padding: 2px 6px;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n  color: white;\\n  font-weight: bold;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  margin: 1px 2px;\\n  cursor: move;\\n}\\n._19zNW9Rex5U4jeHHH-P-jH {\\n  border-left: 2px outset white;\\n  border-top: 2px outset white;\\n  border-bottom: 1px outset #bfbfbf;\\n  border-right: 1px outset #bfbfbf;\\n}\\n._15pLumbM8B23E7c7eCavoM {\\n  cursor: text !important\\n}\\n._15pLumbM8B23E7c7eCavoM:hover {-webkit-box-shadow: 0 1px 0 rgba(0, 0, 0, .3);box-shadow: 0 1px 0 rgba(0, 0, 0, .3);\\n}\\n._3Bw8FESFoKKlibB7DPzoov {\\n  -webkit-user-select: none !important;\\n     -moz-user-select: none !important;\\n      -ms-user-select: none !important;\\n          user-select: none !important;\\n}", ""]);\n\n// exports\nexports.locals = {\n\t"controls": "_3KlivMF-Bynu52log_p_vg",\n\t"control": "_2_hkJ8CtyvhoRUq9KYwCY0",\n\t"name": "FD685S5hufCd577AWkcey",\n\t"group": "_3B2ERox5tUNFCf1KhH4Fm_",\n\t"enum": "_16tdlOmqL1wiia4A7Vu3nD",\n\t"colorArray": "_1_XVeD_UYOs_dWSgoY2yMB",\n\t"color": "_2xMKoqVC9EpLv4jsDUYKWD",\n\t"range": "kOo__oeX_aWCVDevV7HP0",\n\t"rangeGroup": "_1qUX8OnJgiIPb7vcD9sKS9",\n\t"value": "_19GeXyM0WGuivruXkUCy2b",\n\t"file": "_16F-g5_X1a0eEjMRyld1H",\n\t"dropping": "_1KhZ50QATkphLmucUDQvBk",\n\t"checkbox": "_1xkjK_OpGeFM2rHfMHqVIo",\n\t"label": "_3aIw8gm5BHhVa8Tq9WEuUt",\n\t"input": "gGYyBsNmkrN5xQprkCVC6",\n\t"button": "aUSLPIQ1qkK1CKenoFS4-",\n\t"titleBar": "_1voKh84wobplhMqNPJ9hKh",\n\t"window": "_19zNW9Rex5U4jeHHH-P-jH",\n\t"clickable": "_15pLumbM8B23E7c7eCavoM",\n\t"unselectable": "_3Bw8FESFoKKlibB7DPzoov"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL2NvbnRyb2xzL3N0eWxlcy5zY3NzP2VjOWQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuXzNLbGl2TUYtQnludTUybG9nX3Bfdmcge1xcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XFxuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xcbiAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XFxuICAgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxufVxcbi5fMl9oa0o4Q3R5dmhvUlVxOUtZd0NZMCB7XFxuICBib3JkZXI6IDFweCBvdXRzZXQgI2ZmZjtcXG4gIGJhY2tncm91bmQ6ICNiZmJmYmY7XFxuICBwYWRkaW5nOiAzcHg7XFxufVxcbi5GRDY4NVM1aHVmQ2Q1NzdBV2tjZXkge1xcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XFxuICBiYWNrZ3JvdW5kOiBncmV5O1xcbiAgd2lkdGg6IDEwMCU7XFxuICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xcbiAgICAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcXG4gICAgICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAgICAgICAgIHVzZXItc2VsZWN0OiBub25lO1xcbiAgY3Vyc29yOiBkZWZhdWx0O1xcbn1cXG4uXzNCMkVSb3g1dFVORkNmMUtoSDRGbV8ge1xcblxcbiAgYm9yZGVyOiAycHggZ3Jvb3ZlICNiZmJmYmY7XFxuICBwYWRkaW5nOiAwIDNweCAzcHg7XFxuICBtYXJnaW4tdG9wOiAxMHB4O1xcbn1cXG4uXzNCMkVSb3g1dFVORkNmMUtoSDRGbV8gLkZENjg1UzVodWZDZDU3N0FXa2NleSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNiZmJmYmY7XFxuICAgIHBhZGRpbmc6IDAgM3B4O1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgIHRvcDogLTlweDtcXG4gIH1cXG4uXzE2dGRsT21xTDF3aWlhNEE3VnUzbkQge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBwYWRkaW5nOiA1cHg7XFxufVxcbi5fMV9YVmVEX1VZT3NfZFdTZ29ZMnlNQiB7XFxuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcXG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIC13ZWJraXQtYm94LW9yaWVudDogaG9yaXpvbnRhbDtcXG4gIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xcbiAgICAgIC1tcy1mbGV4LWZsb3c6IHJvdyB3cmFwO1xcbiAgICAgICAgICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xcbiAgbWF4LXdpZHRoOiAxMDAlO1xcbiAgbWF4LWhlaWdodDogNDB2aDtcXG4gIG92ZXJmbG93LXk6IGF1dG87XFxuICBwYWRkaW5nOiA1cHggMDtcXG59XFxuLl8xX1hWZURfVVlPc19kV1Nnb1kyeU1CIC5fMnhNS29xVkM5RXBMdjRqc0RVWUtXRCB7XFxuICAgIG1pbi1oZWlnaHQ6IDE2cHg7XFxuICAgIG1pbi13aWR0aDogMTZweDtcXG4gICAgY3Vyc29yOiBwb2ludGVyXFxuICB9XFxuLl8xX1hWZURfVVlPc19kV1Nnb1kyeU1CIC5fMnhNS29xVkM5RXBMdjRqc0RVWUtXRDpob3ZlciB7b3V0bGluZTogMnB4IHNvbGlkICMwMDAwODA7LXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEuMik7dHJhbnNmb3JtOiBzY2FsZSgxLjIpO1xcbn1cXG4uXzFfWFZlRF9VWU9zX2RXU2dvWTJ5TUIgLl8yeE1Lb3FWQzlFcEx2NGpzRFVZS1dEOmFjdGl2ZSB7LXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDAuOCk7dHJhbnNmb3JtOiBzY2FsZSgwLjgpO1xcbn1cXG4ua09vX19vZVhfYVdDVkRldlY3SFAwIHtcXG5cXG4gIG1hcmdpbi10b3A6IDVweDtcXG59XFxuLmtPb19fb2VYX2FXQ1ZEZXZWN0hQMCAuXzFxVVg4T25KZ2lJUGI3dmNEOXNLUzkge1xcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcXG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIC13ZWJraXQtYm94LW9yaWVudDogaG9yaXpvbnRhbDtcXG4gICAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XFxuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgfVxcbi5rT29fX29lWF9hV0NWRGV2VjdIUDAgLl8xcVVYOE9uSmdpSVBiN3ZjRDlzS1M5ID4gaW5wdXRbdHlwZT1yYW5nZV0ge1xcbiAgICAgIC13ZWJraXQtYm94LWZsZXg6IDE7XFxuICAgICAgICAgIC1tcy1mbGV4OiAxO1xcbiAgICAgICAgICAgICAgZmxleDogMTtcXG4gICAgICBtYXJnaW46IDA7XFxuICAgIH1cXG4ua09vX19vZVhfYVdDVkRldlY3SFAwIC5fMTlHZVh5TTBXR3VpdnJ1WGtVQ3kyYiB7XFxuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xcbiAgICBtaW4td2lkdGg6IDM1cHg7XFxuICAgIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAgICAgIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAgICAgICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAgICAgICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAgIGN1cnNvcjogZGVmYXVsdDtcXG4gIH1cXG4uXzE2Ri1nNV9YMWEwZUVqTVJ5bGQxSCB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgYm9yZGVyOiAxcHggaW5zZXQgI2NjYztcXG59XFxuLl8xS2haNTBRQVRrcGhMbXVjVURRdkJrIHtcXG4gIG91dGxpbmU6IDJweCBzb2xpZCAjMDAwMDgwO1xcbn1cXG4uXzF4a2pLX09wR2VGTTJySGZNSHFWSW8ge1xcbiAgbWFyZ2luOiAzcHggMDtcXG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcXG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG4uXzNhSXc4Z201QkhoVmE4VHE5V0V1VXQge1xcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XFxuICBtYXJnaW4tYm90dG9tOiAxcHg7XFxuICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xcbiAgICAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcXG4gICAgICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAgICAgICAgIHVzZXItc2VsZWN0OiBub25lO1xcbiAgY3Vyc29yOiBkZWZhdWx0O1xcbn1cXG5pbnB1dFt0eXBlPXRleHRdLFxcbmlucHV0W3R5cGU9c2VsZWN0XSxcXG50ZXh0YXJlYSxcXG4uZ0dZeUJzTm1rck41eFFwcmtDVkM2IHtcXG4gIGJvcmRlcjogMnB4IGluc2V0ICNjY2M7XFxuICBwYWRkaW5nOiA1cHg7XFxufVxcbnRleHRhcmVhIHtcXG4gIHdpZHRoOiA5MCU7XFxuICBtaW4taGVpZ2h0OiAyMDBweDtcXG59XFxuYnV0dG9uLFxcbi5hVVNMUElRMXFrSzFDS2Vub0ZTNC0ge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2JmYmZiZjtcXG4gIGJvcmRlci1sZWZ0OiAycHggb3V0c2V0IHdoaXRlO1xcbiAgYm9yZGVyLXRvcDogMnB4IG91dHNldCB3aGl0ZTtcXG4gIGJvcmRlci1ib3R0b206IDFweCBvdXRzZXQgI2JmYmZiZjtcXG4gIGJvcmRlci1yaWdodDogMXB4IG91dHNldCAjYmZiZmJmO1xcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiAxcHggMXB4IDAgYmxhY2s7XFxuICAgICAgICAgIGJveC1zaGFkb3c6IDFweCAxcHggMCBibGFjaztcXG4gIHBhZGRpbmc6IDNweCA2cHg7XFxuICBtYXJnaW46IDFweDtcXG4gIG91dGxpbmU6IG5vbmU7XFxuICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xcbiAgICAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcXG4gICAgICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAgICAgICAgIHVzZXItc2VsZWN0OiBub25lXFxufVxcbmJ1dHRvbjphY3RpdmUsIC5hVVNMUElRMXFrSzFDS2Vub0ZTNC06YWN0aXZlIHtib3JkZXI6IDJweCBpbnNldCAjYmZiZmJmO2JvcmRlci1ib3R0b206IDFweCBvdXRzZXQgI2JmYmZiZjtib3JkZXItcmlnaHQ6IDFweCBvdXRzZXQgI2JmYmZiZjtcXG59XFxuYnV0dG9uOmZvY3VzLCAuYVVTTFBJUTFxa0sxQ0tlbm9GUzQtOmZvY3VzIHtvdXRsaW5lOiAxcHggZG90dGVkIGJsYWNrO291dGxpbmUtb2Zmc2V0OiAtNXB4Oy13ZWJraXQtYm94LXNoYWRvdzogMnB4IDAgYmxhY2ssIDAgMnB4IGJsYWNrLCAycHggMnB4IGJsYWNrO2JveC1zaGFkb3c6IDJweCAwIGJsYWNrLCAwIDJweCBibGFjaywgMnB4IDJweCBibGFjaztcXG59XFxuLl8xdm9LaDg0d29icGxoTXFOUEo5aEtoIHtcXG4gIGJhY2tncm91bmQ6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IHRvcCwgcmlnaHQgdG9wLCBmcm9tKCMwMDAwODApLCB0bygjMWM4NWNlKSk7XFxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsICMwMDAwODAsICMxYzg1Y2UpO1xcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcXG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XFxuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBwYWRkaW5nOiAycHggNnB4O1xcbiAgLXdlYmtpdC1ib3gtZmxleDogMTtcXG4gICAgICAtbXMtZmxleDogMTtcXG4gICAgICAgICAgZmxleDogMTtcXG4gIGNvbG9yOiB3aGl0ZTtcXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcXG4gICAgIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAgICAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xcbiAgICAgICAgICB1c2VyLXNlbGVjdDogbm9uZTtcXG4gIG1hcmdpbjogMXB4IDJweDtcXG4gIGN1cnNvcjogbW92ZTtcXG59XFxuLl8xOXpOVzlSZXg1VTRqZUhISC1QLWpIIHtcXG4gIGJvcmRlci1sZWZ0OiAycHggb3V0c2V0IHdoaXRlO1xcbiAgYm9yZGVyLXRvcDogMnB4IG91dHNldCB3aGl0ZTtcXG4gIGJvcmRlci1ib3R0b206IDFweCBvdXRzZXQgI2JmYmZiZjtcXG4gIGJvcmRlci1yaWdodDogMXB4IG91dHNldCAjYmZiZmJmO1xcbn1cXG4uXzE1cEx1bWJNOEIyM0U3YzdlQ2F2b00ge1xcbiAgY3Vyc29yOiB0ZXh0ICFpbXBvcnRhbnRcXG59XFxuLl8xNXBMdW1iTThCMjNFN2M3ZUNhdm9NOmhvdmVyIHstd2Via2l0LWJveC1zaGFkb3c6IDAgMXB4IDAgcmdiYSgwLCAwLCAwLCAuMyk7Ym94LXNoYWRvdzogMCAxcHggMCByZ2JhKDAsIDAsIDAsIC4zKTtcXG59XFxuLl8zQnc4RkVTRm9LS2xpYkI3RFB6b292IHtcXG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmUgIWltcG9ydGFudDtcXG4gICAgIC1tb3otdXNlci1zZWxlY3Q6IG5vbmUgIWltcG9ydGFudDtcXG4gICAgICAtbXMtdXNlci1zZWxlY3Q6IG5vbmUgIWltcG9ydGFudDtcXG4gICAgICAgICAgdXNlci1zZWxlY3Q6IG5vbmUgIWltcG9ydGFudDtcXG59XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuZXhwb3J0cy5sb2NhbHMgPSB7XG5cdFwiY29udHJvbHNcIjogXCJfM0tsaXZNRi1CeW51NTJsb2dfcF92Z1wiLFxuXHRcImNvbnRyb2xcIjogXCJfMl9oa0o4Q3R5dmhvUlVxOUtZd0NZMFwiLFxuXHRcIm5hbWVcIjogXCJGRDY4NVM1aHVmQ2Q1NzdBV2tjZXlcIixcblx0XCJncm91cFwiOiBcIl8zQjJFUm94NXRVTkZDZjFLaEg0Rm1fXCIsXG5cdFwiZW51bVwiOiBcIl8xNnRkbE9tcUwxd2lpYTRBN1Z1M25EXCIsXG5cdFwiY29sb3JBcnJheVwiOiBcIl8xX1hWZURfVVlPc19kV1Nnb1kyeU1CXCIsXG5cdFwiY29sb3JcIjogXCJfMnhNS29xVkM5RXBMdjRqc0RVWUtXRFwiLFxuXHRcInJhbmdlXCI6IFwia09vX19vZVhfYVdDVkRldlY3SFAwXCIsXG5cdFwicmFuZ2VHcm91cFwiOiBcIl8xcVVYOE9uSmdpSVBiN3ZjRDlzS1M5XCIsXG5cdFwidmFsdWVcIjogXCJfMTlHZVh5TTBXR3VpdnJ1WGtVQ3kyYlwiLFxuXHRcImZpbGVcIjogXCJfMTZGLWc1X1gxYTBlRWpNUnlsZDFIXCIsXG5cdFwiZHJvcHBpbmdcIjogXCJfMUtoWjUwUUFUa3BoTG11Y1VEUXZCa1wiLFxuXHRcImNoZWNrYm94XCI6IFwiXzF4a2pLX09wR2VGTTJySGZNSHFWSW9cIixcblx0XCJsYWJlbFwiOiBcIl8zYUl3OGdtNUJIaFZhOFRxOVdFdVV0XCIsXG5cdFwiaW5wdXRcIjogXCJnR1l5QnNObWtyTjV4UXBya0NWQzZcIixcblx0XCJidXR0b25cIjogXCJhVVNMUElRMXFrSzFDS2Vub0ZTNC1cIixcblx0XCJ0aXRsZUJhclwiOiBcIl8xdm9LaDg0d29icGxoTXFOUEo5aEtoXCIsXG5cdFwid2luZG93XCI6IFwiXzE5ek5XOVJleDVVNGplSEhILVAtakhcIixcblx0XCJjbGlja2FibGVcIjogXCJfMTVwTHVtYk04QjIzRTdjN2VDYXZvTVwiLFxuXHRcInVuc2VsZWN0YWJsZVwiOiBcIl8zQnc4RkVTRm9LS2xpYkI3RFB6b292XCJcbn07Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///70\n')},73:function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "./rgba2laba.wasm";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi93YXNtL3JnYmEybGFiYS90YXJnZXQvd2FzbTMyLXVua25vd24tdW5rbm93bi9yZWxlYXNlL3JnYmEybGFiYS53YXNtP2RhYTQiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiLi9yZ2JhMmxhYmEud2FzbVwiOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///73\n')},76:function(module,exports){eval('module.exports = require("fs");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJmc1wiP2E0MGQiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiZnNcIik7Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///76\n')},77:function(module,exports,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(__dirname) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\nif (typeof Rust === \'undefined\') {\n  var Rust = {};\n}\n\n(function (root, factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(this, function () {\n  const Module = {};\n  let HEAP8 = null;\n  let HEAP16 = null;\n  let HEAP32 = null;\n  let HEAPU8 = null;\n  let HEAPU16 = null;\n  let HEAPU32 = null;\n  let HEAPF32 = null;\n  let HEAPF64 = null;\n  Object.defineProperty(Module, \'nodejs\', {\n    value: typeof window === \'undefined\'\n  });\n  Object.defineProperty(Module, \'exports\', {\n    value: {}\n  });\n  const __imports = {\n    env: {\n      "__extjs_ff2c75b4783fd5c9d8c934bbd4a03e66527e05e4": function ($0) {\n        Module.STDWEB.tmp = Module.STDWEB.to_js($0);\n      },\n      "__extjs_d8a439451216bbc6cd9f3012f189d2ad6a2e9459": function ($0) {\n        Module.STDWEB.decrement_refcount($0);\n      },\n      "__extjs_d0f9580b9cfe82e2ee67d3707e52d87bbabe59f2": function () {\n        Module.STDWEB = {};\n      },\n      "__extjs_4985c7263834081d123cc7eff225fe2010747092": function () {\n        Module.STDWEB.alloc = Module.web_malloc;\n\n        Module.STDWEB.dyncall = function (signature, ptr, args) {\n          return Module.web_table.get(ptr).apply(null, args);\n        };\n\n        Module.STDWEB.utf8_len = function utf8_len(str) {\n          let len = 0;\n\n          for (let i = 0; i < str.length; ++i) {\n            let u = str.charCodeAt(i);\n\n            if (u >= 0xD800 && u <= 0xDFFF) {\n              u = 0x10000 + ((u & 0x3FF) << 10) | str.charCodeAt(++i) & 0x3FF;\n            }\n\n            if (u <= 0x7F) {\n              ++len;\n            } else if (u <= 0x7FF) {\n              len += 2;\n            } else if (u <= 0xFFFF) {\n              len += 3;\n            } else if (u <= 0x1FFFFF) {\n              len += 4;\n            } else if (u <= 0x3FFFFFF) {\n              len += 5;\n            } else {\n              len += 6;\n            }\n          }\n\n          return len;\n        };\n      },\n      "__extjs_a986a787f7d7d1abc8c97008ceb5c6945d3f620f": function () {\n        Module.STDWEB.to_utf8 = function to_utf8(str, addr) {\n          for (var i = 0; i < str.length; ++i) {\n            var u = str.charCodeAt(i);\n\n            if (u >= 0xD800 && u <= 0xDFFF) {\n              u = 0x10000 + ((u & 0x3FF) << 10) | str.charCodeAt(++i) & 0x3FF;\n            }\n\n            if (u <= 0x7F) {\n              HEAPU8[addr++] = u;\n            } else if (u <= 0x7FF) {\n              HEAPU8[addr++] = 0xC0 | u >> 6;\n              HEAPU8[addr++] = 0x80 | u & 63;\n            } else if (u <= 0xFFFF) {\n              HEAPU8[addr++] = 0xE0 | u >> 12;\n              HEAPU8[addr++] = 0x80 | u >> 6 & 63;\n              HEAPU8[addr++] = 0x80 | u & 63;\n            } else if (u <= 0x1FFFFF) {\n              HEAPU8[addr++] = 0xF0 | u >> 18;\n              HEAPU8[addr++] = 0x80 | u >> 12 & 63;\n              HEAPU8[addr++] = 0x80 | u >> 6 & 63;\n              HEAPU8[addr++] = 0x80 | u & 63;\n            } else if (u <= 0x3FFFFFF) {\n              HEAPU8[addr++] = 0xF8 | u >> 24;\n              HEAPU8[addr++] = 0x80 | u >> 18 & 63;\n              HEAPU8[addr++] = 0x80 | u >> 12 & 63;\n              HEAPU8[addr++] = 0x80 | u >> 6 & 63;\n              HEAPU8[addr++] = 0x80 | u & 63;\n            } else {\n              HEAPU8[addr++] = 0xFC | u >> 30;\n              HEAPU8[addr++] = 0x80 | u >> 24 & 63;\n              HEAPU8[addr++] = 0x80 | u >> 18 & 63;\n              HEAPU8[addr++] = 0x80 | u >> 12 & 63;\n              HEAPU8[addr++] = 0x80 | u >> 6 & 63;\n              HEAPU8[addr++] = 0x80 | u & 63;\n            }\n          }\n        };\n      },\n      "__extjs_83c36ea7560e368457b1ae45a44ffef481c2ad44": function () {\n        Module.STDWEB.noop = function () {};\n\n        Module.STDWEB.to_js = function to_js(address) {\n          var kind = HEAPU8[address + 12];\n\n          if (kind === 0) {\n            return undefined;\n          } else if (kind === 1) {\n            return null;\n          } else if (kind === 2) {\n            return HEAP32[address / 4];\n          } else if (kind === 3) {\n            return HEAPF64[address / 8];\n          } else if (kind === 4) {\n            var pointer = HEAPU32[address / 4];\n            var length = HEAPU32[(address + 4) / 4];\n            return Module.STDWEB.to_js_string(pointer, length);\n          } else if (kind === 5) {\n            return false;\n          } else if (kind === 6) {\n            return true;\n          } else if (kind === 7) {\n            var pointer = HEAPU32[address / 4];\n            var length = HEAPU32[(address + 4) / 4];\n            var output = [];\n\n            for (var i = 0; i < length; ++i) {\n              output.push(Module.STDWEB.to_js(pointer + i * 16));\n            }\n\n            return output;\n          } else if (kind === 8) {\n            var value_array_pointer = HEAPU32[address / 4];\n            var length = HEAPU32[(address + 4) / 4];\n            var key_array_pointer = HEAPU32[(address + 8) / 4];\n            var output = {};\n\n            for (var i = 0; i < length; ++i) {\n              var key_pointer = HEAPU32[(key_array_pointer + i * 8) / 4];\n              var key_length = HEAPU32[(key_array_pointer + 4 + i * 8) / 4];\n              var key = Module.STDWEB.to_js_string(key_pointer, key_length);\n              var value = Module.STDWEB.to_js(value_array_pointer + i * 16);\n              output[key] = value;\n            }\n\n            return output;\n          } else if (kind === 9 || kind === 11 || kind === 12) {\n            return Module.STDWEB.acquire_js_reference(HEAP32[address / 4]);\n          } else if (kind === 10) {\n            var adapter_pointer = HEAPU32[address / 4];\n            var pointer = HEAPU32[(address + 4) / 4];\n            var deallocator_pointer = HEAPU32[(address + 8) / 4];\n\n            var output = function () {\n              if (pointer === 0) {\n                throw new ReferenceError("Already dropped Rust function called!");\n              }\n\n              var args = Module.STDWEB.alloc(16);\n              Module.STDWEB.serialize_array(args, arguments);\n              Module.STDWEB.dyncall("vii", adapter_pointer, [pointer, args]);\n              var result = Module.STDWEB.tmp;\n              Module.STDWEB.tmp = null;\n              return result;\n            };\n\n            output.drop = function () {\n              output.drop = Module.STDWEB.noop;\n              var function_pointer = pointer;\n              pointer = 0;\n              Module.STDWEB.dyncall("vi", deallocator_pointer, [function_pointer]);\n            };\n\n            return output;\n          } else if (kind === 13) {\n            var adapter_pointer = HEAPU32[address / 4];\n            var pointer = HEAPU32[(address + 4) / 4];\n            var deallocator_pointer = HEAPU32[(address + 8) / 4];\n\n            var output = function () {\n              if (pointer === 0) {\n                throw new ReferenceError("Already called or dropped FnOnce function called!");\n              }\n\n              output.drop = Module.STDWEB.noop;\n              var function_pointer = pointer;\n              pointer = 0;\n              var args = Module.STDWEB.alloc(16);\n              Module.STDWEB.serialize_array(args, arguments);\n              Module.STDWEB.dyncall("vii", adapter_pointer, [function_pointer, args]);\n              var result = Module.STDWEB.tmp;\n              Module.STDWEB.tmp = null;\n              return result;\n            };\n\n            output.drop = function () {\n              output.drop = Module.STDWEB.noop;\n              var function_pointer = pointer;\n              pointer = 0;\n              Module.STDWEB.dyncall("vi", deallocator_pointer, [function_pointer]);\n            };\n\n            return output;\n          } else if (kind === 14) {\n            var pointer = HEAPU32[address / 4];\n            var length = HEAPU32[(address + 4) / 4];\n            var array_kind = HEAPU32[(address + 8) / 4];\n            var pointer_end = pointer + length;\n\n            switch (array_kind) {\n              case 0:\n                return HEAPU8.subarray(pointer, pointer_end);\n\n              case 1:\n                return HEAP8.subarray(pointer, pointer_end);\n\n              case 2:\n                return HEAPU16.subarray(pointer, pointer_end);\n\n              case 3:\n                return HEAP16.subarray(pointer, pointer_end);\n\n              case 4:\n                return HEAPU32.subarray(pointer, pointer_end);\n\n              case 5:\n                return HEAP32.subarray(pointer, pointer_end);\n\n              case 6:\n                return HEAPF32.subarray(pointer, pointer_end);\n\n              case 7:\n                return HEAPF64.subarray(pointer, pointer_end);\n            }\n          }\n        };\n      },\n      "__extjs_2171fbf7dcd6cce3ad90767662e531aee9577813": function () {\n        Module.STDWEB.serialize_object = function serialize_object(address, value) {\n          var keys = Object.keys(value);\n          var length = keys.length;\n          var key_array_pointer = Module.STDWEB.alloc(length * 8);\n          var value_array_pointer = Module.STDWEB.alloc(length * 16);\n          HEAPU8[address + 12] = 8;\n          HEAPU32[address / 4] = value_array_pointer;\n          HEAPU32[(address + 4) / 4] = length;\n          HEAPU32[(address + 8) / 4] = key_array_pointer;\n\n          for (var i = 0; i < length; ++i) {\n            var key = keys[i];\n            var key_length = Module.STDWEB.utf8_len(key);\n            var key_pointer = Module.STDWEB.alloc(key_length);\n            Module.STDWEB.to_utf8(key, key_pointer);\n            var key_address = key_array_pointer + i * 8;\n            HEAPU32[key_address / 4] = key_pointer;\n            HEAPU32[(key_address + 4) / 4] = key_length;\n            Module.STDWEB.from_js(value_array_pointer + i * 16, value[key]);\n          }\n        };\n\n        Module.STDWEB.serialize_array = function serialize_array(address, value) {\n          var length = value.length;\n          var pointer = Module.STDWEB.alloc(length * 16);\n          HEAPU8[address + 12] = 7;\n          HEAPU32[address / 4] = pointer;\n          HEAPU32[(address + 4) / 4] = length;\n\n          for (var i = 0; i < length; ++i) {\n            Module.STDWEB.from_js(pointer + i * 16, value[i]);\n          }\n        };\n\n        Module.STDWEB.from_js = function from_js(address, value) {\n          var kind = Object.prototype.toString.call(value);\n\n          if (kind === "[object String]") {\n            var length = Module.STDWEB.utf8_len(value);\n            var pointer = 0;\n\n            if (length > 0) {\n              pointer = Module.STDWEB.alloc(length);\n              Module.STDWEB.to_utf8(value, pointer);\n            }\n\n            HEAPU8[address + 12] = 4;\n            HEAPU32[address / 4] = pointer;\n            HEAPU32[(address + 4) / 4] = length;\n          } else if (kind === "[object Number]") {\n            if (value === (value | 0)) {\n              HEAPU8[address + 12] = 2;\n              HEAP32[address / 4] = value;\n            } else {\n              HEAPU8[address + 12] = 3;\n              HEAPF64[address / 8] = value;\n            }\n          } else if (value === null) {\n            HEAPU8[address + 12] = 1;\n          } else if (value === undefined) {\n            HEAPU8[address + 12] = 0;\n          } else if (value === false) {\n            HEAPU8[address + 12] = 5;\n          } else if (value === true) {\n            HEAPU8[address + 12] = 6;\n          } else {\n            var refid = Module.STDWEB.acquire_rust_reference(value);\n            var id = 9;\n\n            if (kind === "[object Object]") {\n              id = 11;\n            } else if (kind === "[object Array]" || kind === "[object Arguments]") {\n              id = 12;\n            }\n\n            HEAPU8[address + 12] = id;\n            HEAP32[address / 4] = refid;\n          }\n        };\n      },\n      "__extjs_8a13e041b26592fd43280496ac01f5f3e049218e": function () {\n        Module.STDWEB.to_js_string = function to_js_string(index, length) {\n          index = index | 0;\n          length = length | 0;\n          var end = (index | 0) + (length | 0);\n          var output = "";\n\n          while (index < end) {\n            var x = HEAPU8[index++];\n\n            if (x < 128) {\n              output += String.fromCharCode(x);\n              continue;\n            }\n\n            var init = x & 0x7F >> 2;\n            var y = 0;\n\n            if (index < end) {\n              y = HEAPU8[index++];\n            }\n\n            var ch = init << 6 | y & 63;\n\n            if (x >= 0xE0) {\n              var z = 0;\n\n              if (index < end) {\n                z = HEAPU8[index++];\n              }\n\n              var y_z = (y & 63) << 6 | z & 63;\n              ch = init << 12 | y_z;\n\n              if (x >= 0xF0) {\n                var w = 0;\n\n                if (index < end) {\n                  w = HEAPU8[index++];\n                }\n\n                ch = (init & 7) << 18 | (y_z << 6 | w & 63);\n              }\n            }\n\n            output += String.fromCharCode(ch);\n            continue;\n          }\n\n          return output;\n        };\n      },\n      "__extjs_b67f2836bfcab57acb8e21dbe580790ff03192f9": function () {\n        var id_to_ref_map = {};\n        var id_to_refcount_map = {};\n        var ref_to_id_map = new WeakMap();\n        var ref_to_id_symbol_map = {};\n        var last_refid = 1;\n\n        Module.STDWEB.acquire_rust_reference = function (reference) {\n          if (reference === undefined || reference === null) {\n            return 0;\n          }\n\n          var refid = ref_to_id_map.get(reference);\n\n          if (refid === undefined) {\n            refid = ref_to_id_symbol_map[reference];\n          }\n\n          if (refid === undefined) {\n            refid = last_refid++;\n\n            if (typeof reference === "symbol") {\n              ref_to_id_symbol_map[reference] = refid;\n            } else {\n              ref_to_id_map.set(reference, refid);\n            }\n\n            id_to_ref_map[refid] = reference;\n            id_to_refcount_map[refid] = 1;\n          } else {\n            id_to_refcount_map[refid]++;\n          }\n\n          return refid;\n        };\n\n        Module.STDWEB.acquire_js_reference = function (refid) {\n          return id_to_ref_map[refid];\n        };\n\n        Module.STDWEB.increment_refcount = function (refid) {\n          id_to_refcount_map[refid]++;\n        };\n\n        Module.STDWEB.decrement_refcount = function (refid) {\n          id_to_refcount_map[refid]--;\n\n          if (id_to_refcount_map[refid] === 0) {\n            var reference = id_to_ref_map[refid];\n            delete id_to_ref_map[refid];\n            delete id_to_refcount_map[refid];\n\n            if (typeof reference === "symbol") {\n              delete ref_to_id_symbol_map[reference];\n            } else {\n              ref_to_id_map.delete(reference);\n            }\n          }\n        };\n      },\n      "__extjs_dc2fd915bd92f9e9c6a3bd15174f1414eee3dbaf": function () {\n        console.error(\'Encountered a panic!\');\n      },\n      "__extjs_b00b05929b445348eab177b6d3f509bcaa28782e": function ($0, $1) {\n        console.error(\'Panic error message:\', Module.STDWEB.to_js_string($0, $1));\n      },\n      "__extjs_20637d8f642203b38c263a5d0f43b9d88ec67c31": function ($0, $1, $2) {\n        console.error(\'Panic location:\', Module.STDWEB.to_js_string($0, $1) + \':\' + $2);\n      },\n      "__extjs_8ac1473477d987d55a57ef2053cd2d9f4b19b35f": function ($0, $1, $2) {\n        $1 = Module.STDWEB.to_js($1);\n        $2 = Module.STDWEB.to_js($2);\n        Module.STDWEB.from_js($0, function () {\n          Module.exports.rgba2laba = $1;\n          Module.exports.rgbaLabaDistance = $2;\n        }());\n      },\n      "__extjs_de942ef9ccd064c41dc92d5b5bf83c61aeb00278": function ($0) {\n        Module.STDWEB.increment_refcount($0);\n      },\n      "__extjs_781cc202360532df78824ad2ec418326a67395ba": function ($0, $1) {\n        $1 = Module.STDWEB.to_js($1);\n        Module.STDWEB.from_js($0, function () {\n          return $1;\n        }());\n      },\n      "pow": function ($0, $1) {\n        return Math.pow($0, $1);\n      },\n      "__web_on_grow": function () {\n        const buffer = Module.instance.exports.memory.buffer;\n        HEAP8 = new Int8Array(buffer);\n        HEAP16 = new Int16Array(buffer);\n        HEAP32 = new Int32Array(buffer);\n        HEAPU8 = new Uint8Array(buffer);\n        HEAPU16 = new Uint16Array(buffer);\n        HEAPU32 = new Uint32Array(buffer);\n        HEAPF32 = new Float32Array(buffer);\n        HEAPF64 = new Float64Array(buffer);\n      }\n    }\n  };\n\n  function __load(instance) {\n    Object.defineProperty(Module, \'instance\', {\n      value: instance\n    });\n    Object.defineProperty(Module, \'web_malloc\', {\n      value: Module.instance.exports.__web_malloc\n    });\n    Object.defineProperty(Module, \'web_free\', {\n      value: Module.instance.exports.__web_free\n    });\n    Object.defineProperty(Module, \'web_table\', {\n      value: Module.instance.exports.__web_table\n    });\n\n    if (typeof module !== \'undefined\' && module.exports) {\n      module.exports = Module.exports;\n    } else {\n      Rust.rgba2laba.exports = Module.exports;\n    }\n\n    __imports.env.__web_on_grow();\n\n    Module.instance.exports.__web_main();\n  }\n\n  if (Module.nodejs) {\n    const fs = __webpack_require__(76);\n\n    const path = __webpack_require__(75);\n\n    const wasm_path = path.join(__dirname, "rgba2laba.wasm");\n    const buffer = fs.readFileSync(wasm_path);\n    const mod = new WebAssembly.Module(buffer);\n    const instance = new WebAssembly.Instance(mod, __imports);\n\n    __load(instance);\n\n    return Module.exports;\n  } else {\n    const __promise = fetch("rgba2laba.wasm").then(response => response.arrayBuffer()).then(bytes => WebAssembly.instantiate(bytes, __imports)).then(results => {\n      __load(results.instance);\n\n      console.log("Finished loading Rust wasm module \'rgba2laba\'");\n      return Module.exports;\n    }).catch(error => {\n      console.log("Error loading Rust wasm module \'rgba2laba\':", error);\n      throw error;\n    });\n\n    Rust.rgba2laba = __promise;\n    return __promise;\n  }\n});\n/* WEBPACK VAR INJECTION */}.call(this, "/"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///77\n')}});